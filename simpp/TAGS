
src/core.cpp,622
namespace simpp{simpp14,220
  std::shared_ptr<Environment> Environment::create(double initial_time){create18,316
  void Environment::step(){step28,583
  void Environment::run(double until){run41,897
  double Environment::get_time(){ get_time47,1012
  std::shared_ptr<Event> Environment::event(){event51,1075
  std::shared_ptr<Timeout> Environment::timeout(double delay){timeout55,1183
  std::shared_ptr<Process> Environment::process(const std::function<void(coro_t::push_type&)> f){process61,1405
  void Environment::schedule(std::shared_ptr<Event> event, int priority, double delay){    schedule65,1569

src/condition.cpp,474
namespace simpp{simpp15,210
  Condition::Condition(const std::shared_ptr<Environment>& env,Condition16,227
  void Condition::set_callbacks(){set_callbacks25,504
  void Condition::remove_check_callback(const std::shared_ptr<Event> parent){remove_check_callback49,1215
  bool Condition::evaluate(){evaluate63,1653
  void Condition::check(std::shared_ptr<Event>& event){check67,1768
  void Condition::build_value(std::shared_ptr<Event>& event){build_value77,2030

src/queue_event.cpp,449
namespace simpp{simpp7,69
  QueueEvent::QueueEvent(const double time, const int id, const int priority, const std::shared_ptr<Event> event) QueueEvent9,89
  bool QueueEvent::operator<(const QueueEvent& other) const {operator <13,270
  bool QueueEvent::operator>(const QueueEvent& other) const {operator >23,547
  std::shared_ptr<Event> QueueEvent::get_event() const {get_event33,822
  double QueueEvent::get_time() const {get_time37,904

src/anyof.cpp,139
namespace simpp{simpp8,83
  AnyOf::AnyOf(const std::shared_ptr<Environment>& env,AnyOf10,103
  bool AnyOf::evaluate(){evaluate15,274

src/timeout.cpp,178
namespace simpp{simpp6,66
  Timeout::Timeout(const std::shared_ptr<Environment>& env, const double delay)Timeout7,83
  void Timeout::cast_into_queue(){cast_into_queue9,201

src/process.cpp,265
namespace simpp{simpp10,149
  Process::Process(const std::shared_ptr<Environment>& env, const std::function<void(coro_t::push_type&)> f)Process14,243
  void Process::execute(){execute20,460
  void Process::resume(std::shared_ptr<Event>& event){resume28,662

src/event.cpp,698
namespace simpp{simpp13,186
  Event::Event(const std::shared_ptr<Environment>& _env) : env(_env) {}Event16,279
  Event::~Event() {}  ~Event17,351
  std::shared_ptr<Event> Event::get_ptr(){get_ptr19,375
  std::shared_ptr<Environment> Event::get_env(){get_env23,454
  bool Event::is_ok() const {is_ok27,526
  bool Event::is_triggered() const {is_triggered31,576
  bool Event::is_done() const {is_done35,640
  void Event::set_done(){set_done39,694
  void Event::succeed(){succeed45,813
  void Event::add_callback(std::function<void(std::shared_ptr<Event> &)> f,add_callback54,1007
  void Event::remove_check_callback(std::shared_ptr<Event> parent){remove_check_callback60,1190

src/allof.cpp,139
namespace simpp{simpp8,83
  AllOf::AllOf(const std::shared_ptr<Environment>& env,AllOf10,103
  bool AllOf::evaluate(){evaluate15,274

test/test_process.cpp,569
typedef std::shared_ptr<simpp::Environment> Env;Env17,355
typedef std::shared_ptr<simpp::Event> Eve;Eve18,404
struct Intervene{Intervene20,448
  Env env;env21,466
  Eve event;event22,477
  Intervene(Env env) : env(env) {Intervene23,490
void generator1(Env& env, std::shared_ptr<Intervene> intervene, coro_t::push_type& sink){generator128,558
void generator2(Env& env, std::shared_ptr<Intervene> intervene, boost::coroutines2::coroutine<std::shared_ptr<simpp::Event> >::push_type& sink){generator241,978
TEST(){TEST53,1458
int main(void){main57,1470

test/googletest/googletest/src/gtest-death-test.cc,8732
namespace testing {testing88,2739
static const char kDefaultDeathTestStyle[] = GTEST_DEFAULT_DEATH_TEST_STYLE;kDefaultDeathTestStyle97,3019
namespace testing {testing132,4666
namespace internal {internal136,4713
static bool g_in_fast_death_test_child = false;g_in_fast_death_test_child141,4897
bool InDeathTestChild() {InDeathTestChild149,5311
ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {ExitedWithCode168,5794
bool ExitedWithCode::operator()(int exit_status) const {operator ()172,5911
KilledBySignal::KilledBySignal(int signum) : signum_(signum) {KilledBySignal186,6259
bool KilledBySignal::operator()(int exit_status) const {operator ()190,6367
namespace internal {internal203,6779
static std::string ExitSummary(int exit_code) {ExitSummary209,6935
bool ExitedUnsuccessfully(int exit_status) {ExitedUnsuccessfully235,7588
static std::string DeathTestThreadWarning(size_t thread_count) {DeathTestThreadWarning244,7980
static const char kDeathTestLived = 'L';kDeathTestLived263,8768
static const char kDeathTestReturned = 'R';kDeathTestReturned264,8809
static const char kDeathTestThrew = 'T';kDeathTestThrew265,8853
static const char kDeathTestInternalError = 'I';kDeathTestInternalError266,8894
static const int kFuchsiaReadPipeFd = 3;kFuchsiaReadPipeFd271,9025
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DeathTestOutcome282,9540
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };IN_PROGRESS282,9540
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };DIED282,9540
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };LIVED282,9540
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };RETURNED282,9540
enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };THREW282,9540
static void DeathTestAbort(const std::string& message) {DeathTestAbort289,9907
# define GTEST_DEATH_TEST_CHECK_(GTEST_DEATH_TEST_CHECK_310,10672
# define GTEST_DEATH_TEST_CHECK_SYSCALL_(GTEST_DEATH_TEST_CHECK_SYSCALL_327,11512
std::string GetLastErrnoDescription() {GetLastErrnoDescription342,12062
static void FailFromInternalError(int fd) {FailFromInternalError350,12421
DeathTest::DeathTest() {DeathTest373,13055
bool DeathTest::Create(const char* statement,Create383,13373
const char* DeathTest::LastMessage() {LastMessage390,13667
void DeathTest::set_last_death_test_message(const std::string& message) {set_last_death_test_message394,13752
std::string DeathTest::last_death_test_message_;last_death_test_message_398,13867
class DeathTestImpl : public DeathTest {DeathTestImpl401,13989
  DeathTestImpl(const char* a_statement, Matcher<const std::string&> matcher)DeathTestImpl403,14042
  void Abort(AbortReason reason) override;override415,14461
  bool Passed(bool status_ok) override;override416,14504
  const char* statement() const { return statement_; }statement418,14545
  bool spawned() const { return spawned_; }spawned419,14600
  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }set_spawned420,14644
  int status() const { return status_; }status421,14707
  void set_status(int a_status) { status_ = a_status; }set_status422,14748
  DeathTestOutcome outcome() const { return outcome_; }outcome423,14804
  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }set_outcome424,14860
  int read_fd() const { return read_fd_; }read_fd425,14935
  void set_read_fd(int fd) { read_fd_ = fd; }set_read_fd426,14978
  int write_fd() const { return write_fd_; }write_fd427,15024
  void set_write_fd(int fd) { write_fd_ = fd; }set_write_fd428,15069
  const char* const statement_;statement_442,15644
  Matcher<const std::string&> matcher_;matcher_444,15756
  bool spawned_;spawned_446,15869
  int status_;status_448,15929
  DeathTestOutcome outcome_;outcome_450,15979
  int read_fd_;read_fd_454,16180
  int write_fd_;write_fd_458,16372
void DeathTestImpl::ReadAndInterpretStatusByte() {ReadAndInterpretStatusByte465,16634
std::string DeathTestImpl::GetErrorLogs() {GetErrorLogs506,17930
void DeathTestImpl::Abort(AbortReason reason) {Abort514,18220
static ::std::string FormatDeathTestOutput(const ::std::string& output) {FormatDeathTestOutput537,19459
bool DeathTestImpl::Passed(bool status_ok) {Passed573,20954
class WindowsDeathTest : public DeathTestImpl {WindowsDeathTest653,24157
  WindowsDeathTest(const char* a_statement, Matcher<const std::string&> matcher,WindowsDeathTest655,24214
  const char* const file_;file_667,24637
  const int line_;line_669,24721
  AutoHandle write_handle_;write_handle_671,24803
  AutoHandle child_handle_;child_handle_673,24858
  AutoHandle event_handle_;event_handle_678,25149
int WindowsDeathTest::Wait() {Wait684,25344
DeathTest::TestRole WindowsDeathTest::AssumeRole() {AssumeRole729,27057
class FuchsiaDeathTest : public DeathTestImpl {FuchsiaDeathTest817,30964
  FuchsiaDeathTest(const char* a_statement, Matcher<const std::string&> matcher,FuchsiaDeathTest819,31021
  int Wait() override;override826,31316
  TestRole AssumeRole() override;override827,31339
  std::string GetErrorLogs() override;override828,31373
  const char* const file_;file_832,31485
  const int line_;line_834,31569
  std::string captured_stderr_;captured_stderr_836,31640
  zx::process child_process_;child_process_838,31673
  zx::channel exception_channel_;exception_channel_839,31703
  zx::socket stderr_socket_;stderr_socket_840,31737
class Arguments {Arguments844,31828
  Arguments() { args_.push_back(nullptr); }Arguments846,31855
  ~Arguments() {~Arguments848,31900
  void AddArgument(const char* argument) {AddArgument854,32034
  void AddArguments(const ::std::vector<Str>& arguments) {AddArguments859,32168
  char* const* Argv() {Argv866,32424
  int size() {size870,32475
  std::vector<char*> args_;args_875,32552
int FuchsiaDeathTest::Wait() {Wait881,32747
DeathTest::TestRole FuchsiaDeathTest::AssumeRole() {AssumeRole974,36399
std::string FuchsiaDeathTest::GetErrorLogs() {GetErrorLogs1066,39966
class ForkingDeathTest : public DeathTestImpl {ForkingDeathTest1075,40256
  int Wait() override;override1080,40460
  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }set_child_pid1083,40496
  pid_t child_pid_;child_pid_1087,40649
ForkingDeathTest::ForkingDeathTest(const char* a_statement,ForkingDeathTest1091,40707
int ForkingDeathTest::Wait() {Wait1098,41075
class NoExecDeathTest : public ForkingDeathTest {NoExecDeathTest1112,41419
  NoExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher)NoExecDeathTest1114,41478
  TestRole AssumeRole() override;override1116,41619
DeathTest::TestRole NoExecDeathTest::AssumeRole() {AssumeRole1121,41804
class ExecDeathTest : public ForkingDeathTest {ExecDeathTest1167,43664
  ExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher,ExecDeathTest1169,43721
  TestRole AssumeRole() override;override1174,43946
  static ::std::vector<std::string> GetArgvsForDeathTestChildProcess() {GetArgvsForDeathTestChildProcess1177,43991
  const char* const file_;file_1187,44492
  const int line_;line_1189,44576
class Arguments {Arguments1193,44657
  Arguments() { args_.push_back(nullptr); }Arguments1195,44684
  ~Arguments() {~Arguments1197,44729
  void AddArgument(const char* argument) {AddArgument1203,44863
  void AddArguments(const ::std::vector<Str>& arguments) {AddArguments1208,44997
  char* const* Argv() {Argv1215,45253
  std::vector<char*> args_;args_1220,45314
struct ExecDeathTestArgs {ExecDeathTestArgs1225,45455
  char* const* argv;  // Command-line arguments for the child's call to execargv1226,45482
  int close_fd;       // File descriptor to close; the read end of a pipeclose_fd1227,45559
extern "C" char** environ;environ1231,45656
static int ExecDeathTestChildMain(void* child_arg) {ExecDeathTestChildMain1236,45917
                                  bool* result) GTEST_NO_INLINE_;GTEST_NO_INLINE_1276,47671
static void StackLowerThanAddress(const void* ptr, bool* result) {StackLowerThanAddress1285,48220
static bool StackGrowsDown() {StackGrowsDown1293,48501
static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {ExecDeathTestSpawnChild1308,49115
DeathTest::TestRole ExecDeathTest::AssumeRole() {AssumeRole1407,53248
bool DefaultDeathTestFactory::Create(const char* statement,Create1460,55390
static int GetStatusFileDescriptor(unsigned int parent_process_id,GetStatusFileDescriptor1524,57655
InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {ParseInternalRunDeathTestFlag1589,60483

test/googletest/googletest/src/gtest-test-part.cc,755
namespace testing {testing38,1735
std::string TestPartResult::ExtractSummary(const char* message) {ExtractSummary44,1871
std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {operator <<50,2134
void TestPartResultArray::Append(const TestPartResult& result) {Append66,2839
const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {GetTestPartResult71,2995
int TestPartResultArray::size() const {size81,3329
namespace internal {internal85,3414
HasNewFatalFailureHelper::HasNewFatalFailureHelper()HasNewFatalFailureHelper87,3436
HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {~HasNewFatalFailureHelper94,3716
void HasNewFatalFailureHelper::ReportTestPartResult(ReportTestPartResult99,3866

test/googletest/googletest/src/gtest-typed-test.cc,334
namespace testing {testing35,1620
namespace internal {internal36,1640
static const char* SkipSpaces(const char* str) {SkipSpaces40,1778
static std::vector<std::string> SplitIntoTestNames(const char* src) {SplitIntoTestNames46,1879
const char* TypedTestSuitePState::VerifyRegisteredTestNames(VerifyRegisteredTestNames58,2313

test/googletest/googletest/src/gtest-matchers.cc,882
namespace testing {testing41,1887
Matcher<const std::string&>::Matcher(const std::string& s) { *this = Eq(s); }Matcher45,1996
Matcher<const std::string&>::Matcher(const char* s) {Matcher49,2163
Matcher<std::string>::Matcher(const std::string& s) { *this = Eq(s); }Matcher55,2331
Matcher<std::string>::Matcher(const char* s) { *this = Eq(std::string(s)); }Matcher59,2484
Matcher<const internal::StringView&>::Matcher(const std::string& s) {Matcher64,2684
Matcher<const internal::StringView&>::Matcher(const char* s) {Matcher70,2861
Matcher<const internal::StringView&>::Matcher(internal::StringView s) {Matcher76,3044
Matcher<internal::StringView>::Matcher(const std::string& s) { *this = Eq(s); }Matcher82,3229
Matcher<internal::StringView>::Matcher(const char* s) {Matcher86,3390
Matcher<internal::StringView>::Matcher(internal::StringView s) {Matcher92,3559

test/googletest/googletest/src/gtest-port.cc,7839
namespace testing {testing89,2831
namespace internal {internal90,2851
const int kStdOutFileno = 1;kStdOutFileno94,2989
const int kStdErrFileno = 2;kStdErrFileno95,3018
T ReadProcFileField(const std::string& filename, int field) {ReadProcFileField105,3231
size_t GetThreadCount() {GetThreadCount118,3541
size_t GetThreadCount() {GetThreadCount126,3737
#undef KERN_PROCKERN_PROC147,4426
#define KERN_PROC KERN_PROC148,4443
#define kinfo_proc kinfo_proc149,4472
#define KP_NLWP(KP_NLWP153,4534
#define KP_NLWP(KP_NLWP155,4619
#define KP_NLWP(KP_NLWP157,4680
size_t GetThreadCount() {GetThreadCount162,4824
size_t GetThreadCount() {GetThreadCount185,5345
size_t GetThreadCount() {GetThreadCount223,6193
size_t GetThreadCount() {GetThreadCount241,6578
size_t GetThreadCount() {GetThreadCount254,6833
size_t GetThreadCount() {GetThreadCount273,7136
void SleepMilliseconds(int n) {SleepMilliseconds283,7374
AutoHandle::AutoHandle()AutoHandle287,7443
AutoHandle::AutoHandle(Handle handle)AutoHandle290,7508
AutoHandle::~AutoHandle() {~AutoHandle293,7572
AutoHandle::Handle AutoHandle::Get() const {Get297,7614
void AutoHandle::Reset() {Reset301,7680
void AutoHandle::Reset(HANDLE handle) {Reset305,7741
bool AutoHandle::IsCloseable() const {IsCloseable319,8120
Notification::Notification()Notification325,8322
void Notification::Notify() {Notify333,8658
void Notification::WaitForNotification() {WaitForNotification337,8742
Mutex::Mutex()Mutex342,8875
Mutex::~Mutex() {~Mutex350,9080
void Mutex::Lock() {Lock360,9341
void Mutex::Unlock() {Unlock366,9479
void Mutex::AssertHeld() {AssertHeld377,9871
class MemoryIsNotDeallocatedMemoryIsNotDeallocated394,10469
  MemoryIsNotDeallocated() : old_crtdbg_flag_(0) {MemoryIsNotDeallocated397,10509
  ~MemoryIsNotDeallocated() {~MemoryIsNotDeallocated404,10831
  int old_crtdbg_flag_;old_crtdbg_flag_410,10968
void Mutex::ThreadSafeLazyInit() {ThreadSafeLazyInit419,11166
class ThreadWithParamSupport : public ThreadWithParamBase {ThreadWithParamSupport467,12844
  static HANDLE CreateThread(Runnable* runnable,CreateThread469,12913
  struct ThreadMainParam {ThreadMainParam489,13695
    ThreadMainParam(Runnable* runnable, Notification* thread_can_start)ThreadMainParam490,13722
    std::unique_ptr<Runnable> runnable_;runnable_494,13879
    Notification* thread_can_start_;thread_can_start_496,13941
  static DWORD WINAPI ThreadMain(void* ptr) {ThreadMain499,13984
ThreadWithParamBase::ThreadWithParamBase(Runnable *runnable,ThreadWithParamBase516,14424
ThreadWithParamBase::~ThreadWithParamBase() {~ThreadWithParamBase522,14698
void ThreadWithParamBase::Join() {Join526,14757
class ThreadLocalRegistryImpl {ThreadLocalRegistryImpl535,15198
  static ThreadLocalValueHolderBase* GetValueOnCurrentThread(GetValueOnCurrentThread539,15396
  static void OnThreadLocalDestroyed(OnThreadLocalDestroyed570,16686
  static void OnThreadExit(DWORD thread_id) {OnThreadExit598,17924
      ThreadLocalValues;ThreadLocalValues628,19254
  typedef std::map<DWORD, ThreadLocalValues> ThreadIdToThreadLocals;ThreadIdToThreadLocals631,19374
  typedef std::pair<DWORD, HANDLE> ThreadIdAndHandle;ThreadIdAndHandle635,19554
  static void StartWatcherThreadFor(DWORD thread_id) {StartWatcherThreadFor637,19609
  static DWORD WINAPI WatcherThreadFunc(LPVOID param) {WatcherThreadFunc664,20846
  static ThreadIdToThreadLocals* GetThreadLocalsMapLocked() {GetThreadLocalsMapLocked676,21227
  static Mutex mutex_;mutex_686,21569
  static Mutex thread_map_mutex_;thread_map_mutex_688,21659
ThreadLocalValueHolderBase* ThreadLocalRegistry::GetValueOnCurrentThread(GetValueOnCurrentThread694,21851
void ThreadLocalRegistry::OnThreadLocalDestroyed(OnThreadLocalDestroyed700,22071
RE::~RE() {~RE711,22388
bool RE::FullMatch(const char* str, const RE& re) {FullMatch724,22822
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch733,23099
void RE::Init(const char* regex) {Init741,23328
bool IsInSet(char ch, const char* str) {IsInSet774,24597
bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }IsAsciiDigit781,24853
bool IsAsciiPunct(char ch) {IsAsciiPunct782,24915
bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }IsRepeat785,25006
bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \f\n\r\t\v"); }IsAsciiWhiteSpace786,25060
bool IsAsciiWordChar(char ch) {IsAsciiWordChar787,25131
bool IsValidEscape(char c) {IsValidEscape793,25345
bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {AtomMatchesChar799,25579
static std::string FormatRegexSyntaxError(const char* regex, int index) {FormatRegexSyntaxError821,26376
bool ValidateRegex(const char* regex) {ValidateRegex828,26689
bool MatchRepetitionAndRegexAtHead(MatchRepetitionAndRegexAtHead888,28866
bool MatchRegexAtHead(const char* regex, const char* str) {MatchRegexAtHead915,29930
bool MatchRegexAnywhere(const char* regex, const char* str) {MatchRegexAnywhere951,31452
RE::~RE() {~RE967,31826
bool RE::FullMatch(const char* str, const RE& re) {FullMatch973,31997
bool RE::PartialMatch(const char* str, const RE& re) {PartialMatch979,32227
void RE::Init(const char* regex) {Init984,32401
const char kUnknownFile[] = "unknown file";kUnknownFile1019,33373
GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {FormatFileLocation1023,33555
GTEST_API_ ::std::string FormatCompilerIndependentFileLocation(FormatCompilerIndependentFileLocation1041,34252
GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)GTestLog1051,34524
GTestLog::~GTestLog() {~GTestLog1062,35002
class CapturedStream {CapturedStream1077,35385
  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {CapturedStream1080,35473
  ~CapturedStream() {~CapturedStream1159,39357
  std::string GetCapturedString() {GetCapturedString1163,39415
  const int fd_;  // A stream to capture.fd_1183,39969
  int uncaptured_fd_;uncaptured_fd_1184,40011
  ::std::string filename_;filename_1186,40092
static CapturedStream* g_captured_stderr = nullptr;g_captured_stderr1193,40212
static CapturedStream* g_captured_stdout = nullptr;g_captured_stdout1194,40264
static void CaptureStream(int fd, const char* stream_name,CaptureStream1197,40371
static std::string GetCapturedStream(CapturedStream** captured_stream) {GetCapturedStream1207,40735
void CaptureStdout() {CaptureStdout1217,40987
void CaptureStderr() {CaptureStderr1222,41103
std::string GetCapturedStdout() {GetCapturedStdout1227,41250
std::string GetCapturedStderr() {GetCapturedStderr1232,41394
size_t GetFileSize(FILE* file) {GetFileSize1242,41524
std::string ReadEntireFile(FILE* file) {ReadEntireFile1247,41631
static const std::vector<std::string>* g_injected_test_argvs =g_injected_test_argvs1270,42322
std::vector<std::string> GetInjectableArgvs() {GetInjectableArgvs1273,42410
void SetInjectableArgvs(const std::vector<std::string>* new_argvs) {SetInjectableArgvs1280,42563
void SetInjectableArgvs(const std::vector<std::string>& new_argvs) {SetInjectableArgvs1285,42744
void ClearInjectableArgvs() {ClearInjectableArgvs1290,42911
namespace posix {posix1297,43071
void Abort() {Abort1298,43089
static std::string FlagToEnvVar(const char* flag) {FlagToEnvVar1308,43397
bool ParseInt32(const Message& src_text, const char* str, int32_t* value) {ParseInt321323,43865
bool BoolFromGTestEnv(const char* flag, bool default_value) {BoolFromGTestEnv1365,45329
int32_t Int32FromGTestEnv(const char* flag, int32_t default_value) {Int32FromGTestEnv1379,45968
std::string OutputFlagAlsoCheckEnvVar(){OutputFlagAlsoCheckEnvVar1411,47222
const char* StringFromGTestEnv(const char* flag, const char* default_value) {StringFromGTestEnv1422,47678

test/googletest/googletest/src/gtest-printers.cc,4258
namespace testing {testing58,2352
void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,PrintByteSegmentInObjectTo69,2607
void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectToImpl88,3168
char32_t ToChar32(CharType in) {ToChar32115,4231
namespace internal {internal122,4385
void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,PrintBytesInObjectTo129,4721
enum CharFormat {CharFormat139,5151
  kAsIs,kAsIs140,5169
  kHexEscape,kHexEscape141,5178
  kSpecialEscapekSpecialEscape142,5192
inline bool IsPrintableAscii(char32_t c) { return 0x20 <= c && c <= 0x7E; }IsPrintableAscii148,5369
static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {PrintAsCharLiteralTo154,5645
static CharFormat PrintAsStringLiteralTo(char32_t c, ostream* os) {PrintAsStringLiteralTo203,6710
static const char* GetCharWidthPrefix(char) {GetCharWidthPrefix216,6974
static const char* GetCharWidthPrefix(signed char) {GetCharWidthPrefix220,7036
static const char* GetCharWidthPrefix(unsigned char) {GetCharWidthPrefix224,7105
static const char* GetCharWidthPrefix(char8_t) {GetCharWidthPrefix229,7197
static const char* GetCharWidthPrefix(char16_t) {GetCharWidthPrefix234,7271
static const char* GetCharWidthPrefix(char32_t) {GetCharWidthPrefix238,7338
static const char* GetCharWidthPrefix(wchar_t) {GetCharWidthPrefix242,7405
static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {PrintAsStringLiteralTo248,7587
static CharFormat PrintAsStringLiteralTo(char8_t c, ostream* os) {PrintAsStringLiteralTo253,7725
static CharFormat PrintAsStringLiteralTo(char16_t c, ostream* os) {PrintAsStringLiteralTo258,7852
static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {PrintAsStringLiteralTo262,7973
void PrintCharAndCodeTo(Char c, ostream* os) {PrintCharAndCodeTo270,8341
void PrintTo(unsigned char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }PrintTo294,9106
void PrintTo(signed char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }PrintTo295,9187
void PrintTo(wchar_t wc, ostream* os) { PrintCharAndCodeTo(wc, os); }PrintTo299,9408
void PrintTo(char32_t c, ::std::ostream* os) {PrintTo302,9559
static CharFormat PrintCharsAsStringTo(PrintCharsAsStringTo316,10147
static void UniversalPrintCharArray(UniversalPrintCharArray347,11306
void UniversalPrintArray(const char* begin, size_t len, ostream* os) {UniversalPrintArray370,12202
void UniversalPrintArray(const char8_t* begin, size_t len, ostream* os) {UniversalPrintArray377,12425
void UniversalPrintArray(const char16_t* begin, size_t len, ostream* os) {UniversalPrintArray384,12638
void UniversalPrintArray(const char32_t* begin, size_t len, ostream* os) {UniversalPrintArray390,12845
void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {UniversalPrintArray396,13051
void PrintCStringTo(const Char* s, ostream* os) {PrintCStringTo404,13268
void PrintTo(const char* s, ostream* os) { PrintCStringTo(s, os); }PrintTo415,13533
void PrintTo(const char8_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo418,13623
void PrintTo(const char16_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo421,13702
void PrintTo(const char32_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo423,13775
void PrintTo(const wchar_t* s, ostream* os) { PrintCStringTo(s, os); }PrintTo433,14349
bool ContainsUnprintableControlCodes(const char* str, size_t length) {ContainsUnprintableControlCodes438,14463
bool IsUTF8TrailByte(unsigned char t) { return 0x80 <= t && t<= 0xbf; }IsUTF8TrailByte457,14882
bool IsValidUTF8(const char* str, size_t length) {IsValidUTF8459,14955
void ConditionalPrintAsText(const char* str, size_t length, ostream* os) {ConditionalPrintAsText494,16203
void PrintStringTo(const ::std::string& s, ostream* os) {PrintStringTo503,16448
void PrintU8StringTo(const ::std::u8string& s, ostream* os) {PrintU8StringTo512,16700
void PrintU16StringTo(const ::std::u16string& s, ostream* os) {PrintU16StringTo517,16820
void PrintU32StringTo(const ::std::u32string& s, ostream* os) {PrintU32StringTo521,16935
void PrintWideStringTo(const ::std::wstring& s, ostream* os) {PrintWideStringTo526,17076

test/googletest/googletest/src/gtest_main.cc,133
void setup() {setup37,1681
void loop() { RUN_ALL_TESTS(); }loop41,1728
GTEST_API_ int main(int argc, char **argv) {main49,1800

test/googletest/googletest/src/gtest-filepath.cc,2065
# define GTEST_PATH_MAX_ GTEST_PATH_MAX_49,2002
# define GTEST_PATH_MAX_ GTEST_PATH_MAX_51,2061
# define GTEST_PATH_MAX_ GTEST_PATH_MAX_53,2126
# define GTEST_PATH_MAX_ GTEST_PATH_MAX_55,2173
namespace testing {testing58,2243
namespace internal {internal59,2263
const char kPathSeparator = '\\';kPathSeparator66,2552
const char kAlternatePathSeparator = '/';kAlternatePathSeparator67,2586
const char kAlternatePathSeparatorString[] = "/";kAlternatePathSeparatorString68,2628
const char kCurrentDirectoryString[] = "\\";kCurrentDirectoryString73,2876
const DWORD kInvalidFileAttributes = 0xffffffff;kInvalidFileAttributes75,2974
const char kCurrentDirectoryString[] = ".\\";kCurrentDirectoryString77,3030
static bool IsPathSeparator(char c) {IsPathSeparator85,3291
FilePath FilePath::GetCurrentDir() {GetCurrentDir94,3534
FilePath FilePath::RemoveExtension(const char* extension) const {RemoveExtension121,4772
const char* FilePath::FindLastPathSeparator() const {FindLastPathSeparator133,5297
FilePath FilePath::RemoveDirectoryName() const {RemoveDirectoryName152,6131
FilePath FilePath::RemoveFileName() const {RemoveFileName163,6725
FilePath FilePath::MakeFileName(const FilePath& directory,MakeFileName180,7327
FilePath FilePath::ConcatPaths(const FilePath& directory,ConcatPaths196,7929
bool FilePath::FileOrDirectoryExists() const {FileOrDirectoryExists206,8364
bool FilePath::DirectoryExists() const {DirectoryExists220,8842
bool FilePath::IsRootDirectory() const {IsRootDirectory250,9767
bool FilePath::IsAbsolutePath() const {IsAbsolutePath259,10030
FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,GenerateUniqueFileName280,10877
bool FilePath::IsDirectory() const {IsDirectory294,11504
bool FilePath::CreateDirectoriesRecursively() const {CreateDirectoriesRecursively302,11819
bool FilePath::CreateFolder() const {CreateFolder319,12456
FilePath FilePath::RemoveTrailingPathSeparator() const {RemoveTrailingPathSeparator343,13297
void FilePath::Normalize() {Normalize352,13663

test/googletest/googletest/src/gtest.cc,41085
# undef minmin78,2647
# undef minmin83,2747
# define vsnprintf vsnprintf121,3521
namespace testing {testing137,3866
static const char kDisableTestFilter[] = "DISABLED_*:*/DISABLED_*";kDisableTestFilter148,4101
static const char kDeathTestSuiteFilter[] = "*DeathTest:*DeathTest/*";kDeathTestSuiteFilter153,4329
static const char kUniversalFilter[] = "*";kUniversalFilter156,4443
static const char kDefaultOutputFormat[] = "xml";kDefaultOutputFormat159,4518
static const char kDefaultOutputFile[] = "test_detail";kDefaultOutputFile161,4596
static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";kTestShardIndex164,4712
static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";kTestTotalShards166,4841
static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";kTestShardStatusFile168,4967
namespace internal {internal170,5038
const char kStackTraceMarker[] = "\nStack trace:\n";kStackTraceMarker174,5142
bool g_help_flag = false;g_help_flag178,5309
static FILE* OpenFileForWriting(const std::string& output_file) {OpenFileForWriting181,5381
static const char* GetDefaultFilter() {GetDefaultFilter199,5942
static bool GetDefaultFailFast() {GetDefaultFailFast210,6315
namespace testing {testing364,13052
namespace internal {internal365,13072
uint32_t Random::Generate(uint32_t range) {Generate370,13243
static bool GTestIsInitialized() { return GetArgvs().size() > 0; }GTestIsInitialized390,14161
static int SumOverTestSuiteList(const std::vector<TestSuite*>& case_list,SumOverTestSuiteList395,14379
static bool TestSuitePassed(const TestSuite* test_suite) {TestSuitePassed405,14699
static bool TestSuiteFailed(const TestSuite* test_suite) {TestSuiteFailed410,14874
static bool ShouldRunTestSuite(const TestSuite* test_suite) {ShouldRunTestSuite416,15084
AssertHelper::AssertHelper(TestPartResult::Type type,AssertHelper421,15213
AssertHelper::~AssertHelper() {~AssertHelper428,15463
void AssertHelper::operator=(const Message& message) const {operator =433,15570
constexpr bool kErrorOnUninstantiatedParameterizedTest = true;kErrorOnUninstantiatedParameterizedTest450,16269
constexpr bool kErrorOnUninstantiatedTypeParameterizedTest = true;kErrorOnUninstantiatedTypeParameterizedTest451,16332
class FailureTest : public Test {FailureTest454,16473
  explicit FailureTest(const CodeLocation& loc, std::string error_message,FailureTest456,16516
  const CodeLocation loc_;loc_472,16999
  const std::string error_message_;error_message_473,17026
  const bool as_error_;as_error_474,17062
std::set<std::string>* GetIgnoredParameterizedTestSuites() {GetIgnoredParameterizedTestSuites480,17108
MarkAsIgnored::MarkAsIgnored(const char* test_suite) {MarkAsIgnored485,17325
void InsertSyntheticTestCase(const std::string& name, CodeLocation location,InsertSyntheticTestCase491,17576
void RegisterTypeParameterizedTestSuite(const char* test_suite_name,RegisterTypeParameterizedTestSuite534,19552
void RegisterTypeParameterizedTestSuiteInstantiation(const char* case_name) {RegisterTypeParameterizedTestSuiteInstantiation540,19808
void TypeParameterizedTestSuiteRegistry::RegisterTestSuite(RegisterTestSuite546,19993
void TypeParameterizedTestSuiteRegistry::RegisterInstantiation(RegisterInstantiation552,20232
void TypeParameterizedTestSuiteRegistry::CheckForInstantiations() {CheckForInstantiations563,20589
static ::std::vector<std::string> g_argvs;g_argvs600,22267
::std::vector<std::string> GetArgvs() {GetArgvs602,22311
FilePath GetCurrentExecutableName() {GetCurrentExecutableName615,22838
std::string UnitTestOptions::GetOutputFormat() {GetOutputFormat630,23226
std::string UnitTestOptions::GetAbsolutePathToOutputFile() {GetAbsolutePathToOutputFile642,23729
static bool PatternMatchesString(const std::string& name_str,PatternMatchesString679,25120
bool UnitTestOptions::MatchesFilter(const std::string& name_str,MatchesFilter726,26547
bool UnitTestOptions::FilterMatchesTest(const std::string& test_suite_name,FilterMatchesTest753,27489
int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {GTestShouldProcessSEH786,28820
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter815,29873
ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(ScopedFakeTestPartResultReporter825,30218
void ScopedFakeTestPartResultReporter::Init() {Init832,30425
ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {~ScopedFakeTestPartResultReporter845,30932
void ScopedFakeTestPartResultReporter::ReportTestPartResult(ReportTestPartResult856,31403
namespace internal {internal861,31530
TypeId GetTestTypeId() {GetTestTypeId872,32150
extern const TypeId kTestTypeIdInGoogleTest = GetTestTypeId();kTestTypeIdInGoogleTest878,32331
static AssertionResult HasOneFailure(const char* /* results_expr */,HasOneFailure883,32557
SingleFailureChecker::SingleFailureChecker(const TestPartResultArray* results,SingleFailureChecker922,34141
SingleFailureChecker::~SingleFailureChecker() {~SingleFailureChecker931,34664
DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(DefaultGlobalTestPartResultReporter935,34780
void DefaultGlobalTestPartResultReporter::ReportTestPartResult(ReportTestPartResult938,34911
DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(DefaultPerThreadTestPartResultReporter944,35143
void DefaultPerThreadTestPartResultReporter::ReportTestPartResult(ReportTestPartResult947,35280
UnitTestImpl::GetGlobalTestPartResultReporter() {GetGlobalTestPartResultReporter954,35547
void UnitTestImpl::SetGlobalTestPartResultReporter(SetGlobalTestPartResultReporter960,35759
UnitTestImpl::GetTestPartResultReporterForCurrentThread() {GetTestPartResultReporterForCurrentThread968,36078
void UnitTestImpl::SetTestPartResultReporterForCurrentThread(SetTestPartResultReporterForCurrentThread973,36257
int UnitTestImpl::successful_test_suite_count() const {successful_test_suite_count979,36472
int UnitTestImpl::failed_test_suite_count() const {failed_test_suite_count984,36622
int UnitTestImpl::total_test_suite_count() const {total_test_suite_count989,36765
int UnitTestImpl::test_suite_to_run_count() const {test_suite_to_run_count995,36956
int UnitTestImpl::successful_test_count() const {successful_test_count1000,37103
int UnitTestImpl::skipped_test_count() const {skipped_test_count1005,37273
int UnitTestImpl::failed_test_count() const {failed_test_count1010,37436
int UnitTestImpl::reportable_disabled_test_count() const {reportable_disabled_test_count1015,37639
int UnitTestImpl::disabled_test_count() const {disabled_test_count1021,37858
int UnitTestImpl::reportable_test_count() const {reportable_test_count1026,38048
int UnitTestImpl::total_test_count() const {total_test_count1031,38214
int UnitTestImpl::test_to_run_count() const {test_to_run_count1036,38382
std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {CurrentOsStackTraceExceptTop1050,39008
class Timer {Timer1059,39361
  Timer() : start_(std::chrono::steady_clock::now()) {}Timer1061,39384
  TimeInMillis Elapsed() {Elapsed1064,39511
  std::chrono::steady_clock::time_point start_;start_1071,39695
TimeInMillis GetTimeInMillis() {GetTimeInMillis1077,39921
LPCWSTR String::AnsiToUtf16(const char* ansi) {AnsiToUtf161093,40426
const char* String::Utf16ToAnsi(LPCWSTR utf16_str)  {Utf16ToAnsi1109,41047
bool String::CStringEquals(const char * lhs, const char * rhs) {CStringEquals1128,41767
static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,StreamWideCharsToMessage1140,42112
void SplitString(const ::std::string& str, char delimiter,SplitString1156,42537
Message::Message() : ss_(new ::std::stringstream) {Message1180,43362
Message& Message::operator <<(const wchar_t* wide_c_str) {operator <<1188,43682
Message& Message::operator <<(wchar_t* wide_c_str) {operator <<1191,43808
Message& Message::operator <<(const ::std::wstring& wstr) {operator <<1198,44084
std::string Message::GetString() const {GetString1206,44397
AssertionResult::AssertionResult(const AssertionResult& other)AssertionResult1212,44574
void AssertionResult::swap(AssertionResult& other) {swap1219,44867
AssertionResult AssertionResult::operator!() const {operator !1226,45078
AssertionResult AssertionSuccess() {AssertionSuccess1233,45288
AssertionResult AssertionFailure() {AssertionFailure1238,45396
AssertionResult AssertionFailure(const Message& message) {AssertionFailure1244,45586
namespace internal {internal1248,45688
namespace edit_distance {edit_distance1250,45710
std::vector<EditType> CalculateOptimalEdits(const std::vector<size_t>& left,CalculateOptimalEdits1251,45736
class InternalStrings {InternalStrings1311,47855
  size_t GetId(const std::string& str) {GetId1313,47888
  typedef std::map<std::string, size_t> IdMap;IdMap1321,48086
  IdMap ids_;ids_1322,48133
std::vector<EditType> CalculateOptimalEdits(CalculateOptimalEdits1327,48168
class Hunk {Hunk1349,48904
  Hunk(size_t left_start, size_t right_start)Hunk1351,48926
  void PushLine(char edit, const char* line) {PushLine1358,49099
  void PrintTo(std::ostream* os) {PrintTo1376,49517
  bool has_edits() const { return adds_ || removes_; }has_edits1386,49783
  void FlushEdits() {FlushEdits1389,49849
  void PrintHeader(std::ostream* ss) const {PrintHeader1398,50164
  size_t left_start_, right_start_;left_start_1412,50480
  size_t left_start_, right_start_;right_start_1412,50480
  size_t adds_, removes_, common_;adds_1413,50516
  size_t adds_, removes_, common_;removes_1413,50516
  size_t adds_, removes_, common_;common_1413,50516
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_1414,50551
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_adds_1414,50551
  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;hunk_removes_1414,50551
std::string CreateUnifiedDiff(const std::vector<std::string>& left,CreateUnifiedDiff1426,51040
std::vector<std::string> SplitEscapedString(const std::string& str) {SplitEscapedString1496,53258
AssertionResult EqFailure(const char* lhs_expression,EqFailure1536,54435
std::string GetBoolAssertionFailureMessage(GetBoolAssertionFailureMessage1571,55567
AssertionResult DoubleNearPredFormat(const char* expr1,DoubleNearPredFormat1587,56145
AssertionResult FloatingPointLE(const char* expr1,FloatingPointLE1632,58404
AssertionResult FloatLE(const char* expr1, const char* expr2,FloatLE1669,59674
AssertionResult DoubleLE(const char* expr1, const char* expr2,DoubleLE1676,59996
namespace internal {internal1681,60185
AssertionResult CmpHelperSTREQ(const char* lhs_expression,CmpHelperSTREQ1684,60257
AssertionResult CmpHelperSTRCASEEQ(const char* lhs_expression,CmpHelperSTRCASEEQ1700,60782
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE1716,61333
AssertionResult CmpHelperSTRCASENE(const char* s1_expression,CmpHelperSTRCASENE1730,61895
bool IsSubstringPred(const char* needle, const char* haystack) {IsSubstringPred1754,62682
bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {IsSubstringPred1760,62872
bool IsSubstringPred(const StringType& needle,IsSubstringPred1768,63165
AssertionResult IsSubstringImpl(IsSubstringImpl1778,63580
AssertionResult IsSubstring(IsSubstring1801,64528
AssertionResult IsSubstring(IsSubstring1807,64742
AssertionResult IsNotSubstring(IsNotSubstring1813,64962
AssertionResult IsNotSubstring(IsNotSubstring1819,65180
AssertionResult IsSubstring(IsSubstring1825,65404
AssertionResult IsNotSubstring(IsNotSubstring1831,65636
AssertionResult IsSubstring(IsSubstring1838,65898
AssertionResult IsNotSubstring(IsNotSubstring1844,66132
namespace internal {internal1851,66403
AssertionResult HRESULTFailureHelper(const char* expr,HRESULTFailureHelper1858,66520
AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  // NOLINTIsHRESULTSuccess1899,68264
AssertionResult IsHRESULTFailure(const char* expr, long hr) {  // NOLINTIsHRESULTFailure1906,68451
constexpr uint32_t kMaxCodePoint1 = (static_cast<uint32_t>(1) <<  7) - 1;kMaxCodePoint11928,69108
constexpr uint32_t kMaxCodePoint2 = (static_cast<uint32_t>(1) << (5 + 6)) - 1;kMaxCodePoint21931,69250
constexpr uint32_t kMaxCodePoint3 = (static_cast<uint32_t>(1) << (4 + 2*6)) - 1;kMaxCodePoint31934,69399
constexpr uint32_t kMaxCodePoint4 = (static_cast<uint32_t>(1) << (3 + 3*6)) - 1;kMaxCodePoint41937,69549
inline uint32_t ChopLowBits(uint32_t* bits, int n) {ChopLowBits1942,69800
std::string CodePointToUtf8(uint32_t code_point) {CodePointToUtf81954,70312
inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {IsUtf16SurrogatePair1989,71983
inline uint32_t CreateCodePointFromUtf16SurrogatePair(wchar_t first,CreateCodePointFromUtf16SurrogatePair1995,72209
std::string WideStringToUtf8(const wchar_t* str, int num_chars) {WideStringToUtf82021,73593
std::string String::ShowWideCString(const wchar_t * wide_c_str) {ShowWideCString2046,74403
bool String::WideCStringEquals(const wchar_t * lhs, const wchar_t * rhs) {WideCStringEquals2058,74831
AssertionResult CmpHelperSTREQ(const char* lhs_expression,CmpHelperSTREQ2067,75072
AssertionResult CmpHelperSTRNE(const char* s1_expression,CmpHelperSTRNE2083,75601
bool String::CaseInsensitiveCStringEquals(const char * lhs, const char * rhs) {CaseInsensitiveCStringEquals2103,76420
bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,CaseInsensitiveWideCStringEquals2121,77288
bool String::EndsWithCaseInsensitive(EndsWithCaseInsensitive2145,78109
std::string String::FormatIntWidth2(int value) {FormatIntWidth22155,78491
std::string String::FormatIntWidthN(int value, int width) {FormatIntWidthN2160,78638
std::string String::FormatHexUInt32(uint32_t value) {FormatHexUInt322167,78833
std::string String::FormatHexInt(int value) {FormatHexInt2174,79011
std::string String::FormatByte(unsigned char value) {FormatByte2179,79145
std::string StringStreamToString(::std::stringstream* ss) {StringStreamToString2188,79467
std::string AppendUserMessage(const std::string& gtest_msg,AppendUserMessage2207,80002
TestResult::TestResult()TestResult2225,80473
TestResult::~TestResult() {~TestResult2229,80578
const TestPartResult& TestResult::GetTestPartResult(int i) const {GetTestPartResult2235,80768
const TestProperty& TestResult::GetTestProperty(int i) const {GetTestProperty2244,81101
void TestResult::ClearTestPartResults() {ClearTestPartResults2251,81327
void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {AddTestPartResult2256,81442
void TestResult::RecordProperty(const std::string& xml_element,RecordProperty2263,81765
static const char* const kReservedTestSuitesAttributes[] = {kReservedTestSuitesAttributes2281,82515
static const char* const kReservedTestSuiteAttributes[] = {kReservedTestSuiteAttributes2294,82767
static const char* const kReservedTestCaseAttributes[] = {kReservedTestCaseAttributes2299,83007
static const char* const kReservedOutputTestCaseAttributes[] = {kReservedOutputTestCaseAttributes2305,83308
std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {ArrayAsVector2310,83520
static std::vector<std::string> GetReservedAttributesForElement(GetReservedAttributesForElement2314,83656
static std::vector<std::string> GetReservedOutputAttributesForElement(GetReservedOutputAttributesForElement2330,84335
static std::string FormatWordList(const std::vector<std::string>& words) {FormatWordList2345,84948
static bool ValidateTestPropertyName(ValidateTestPropertyName2359,85304
bool TestResult::ValidateTestProperty(const std::string& xml_element,ValidateTestProperty2374,85922
void TestResult::Clear() {Clear2381,86228
static bool TestPartSkipped(const TestPartResult& result) {TestPartSkipped2389,86409
bool TestResult::Skipped() const {Skipped2394,86552
bool TestResult::Failed() const {Failed2399,86710
static bool TestPartFatallyFailed(const TestPartResult& result) {TestPartFatallyFailed2408,86935
bool TestResult::HasFatalFailure() const {HasFatalFailure2413,87094
static bool TestPartNonfatallyFailed(const TestPartResult& result) {TestPartNonfatallyFailed2418,87270
bool TestResult::HasNonfatalFailure() const {HasNonfatalFailure2423,87444
int TestResult::total_part_count() const {total_part_count2429,87695
int TestResult::test_property_count() const {test_property_count2434,87841
Test::Test()Test2443,88028
Test::~Test() {~Test2450,88243
void Test::SetUp() {SetUp2456,88328
void Test::TearDown() {TearDown2462,88421
void Test::RecordProperty(const std::string& key, const std::string& value) {RecordProperty2466,88521
void Test::RecordProperty(const std::string& key, int value) {RecordProperty2471,88730
namespace internal {internal2477,88905
void ReportFailureInUnknownLocation(TestPartResult::Type result_type,ReportFailureInUnknownLocation2479,88927
bool Test::HasSameFixtureClass() {HasSameFixtureClass2498,89763
static std::string* FormatSehExceptionMessage(DWORD exception_code,FormatSehExceptionMessage2565,92909
namespace internal {internal2576,93284
static std::string FormatCxxExceptionMessage(const char* description,FormatCxxExceptionMessage2581,93397
GoogleTestFailureException::GoogleTestFailureException(GoogleTestFailureException2597,93892
Result HandleSehExceptionsInMethodIfSupported(HandleSehExceptionsInMethodIfSupported2612,94586
Result HandleExceptionsInMethodIfSupported(HandleExceptionsInMethodIfSupported2639,95645
void Test::Run() {Run2696,98106
bool Test::HasFatalFailure() {HasFatalFailure2719,99028
bool Test::HasNonfatalFailure() {HasNonfatalFailure2724,99215
bool Test::IsSkipped() {IsSkipped2730,99403
TestInfo::TestInfo(const std::string& a_test_suite_name,TestInfo2738,99607
TestInfo::~TestInfo() { delete factory_; }~TestInfo2758,100439
namespace internal {internal2760,100483
TestInfo* MakeAndRegisterTestInfo(MakeAndRegisterTestInfo2780,101473
void ReportInvalidTestSuiteType(const char* test_suite_name,ReportInvalidTestSuiteType2792,102019
class TestNameIs {TestNameIs2821,103220
  explicit TestNameIs(const char* name)TestNameIs2826,103315
  bool operator()(const TestInfo * test_info) const {operator ()2830,103454
  std::string name_;name_2835,103575
namespace internal {internal2840,103617
void UnitTestImpl::RegisterParameterizedTests() {RegisterParameterizedTests2845,103847
void TestInfo::Run() {Run2857,104211
void TestInfo::Skip() {Skip2906,105836
int TestSuite::successful_test_count() const {successful_test_count2930,106631
int TestSuite::skipped_test_count() const {skipped_test_count2935,106787
int TestSuite::failed_test_count() const {failed_test_count2940,106937
int TestSuite::reportable_disabled_test_count() const {reportable_disabled_test_count2945,107108
int TestSuite::disabled_test_count() const {disabled_test_count2950,107283
int TestSuite::reportable_test_count() const {reportable_test_count2955,107441
int TestSuite::test_to_run_count() const {test_to_run_count2960,107605
int TestSuite::total_test_count() const {total_test_count2965,107734
TestSuite::TestSuite(const char* a_name, const char* a_type_param,TestSuite2978,108231
TestSuite::~TestSuite() {~TestSuite2990,108694
const TestInfo* TestSuite::GetTestInfo(int i) const {GetTestInfo2997,108958
TestInfo* TestSuite::GetMutableTestInfo(int i) {GetMutableTestInfo3004,109283
void TestSuite::AddTestInfo(TestInfo* test_info) {AddTestInfo3011,109569
void TestSuite::Run() {Run3017,109768
void TestSuite::Skip() {Skip3071,111474
void TestSuite::ClearResult() {ClearResult3101,112400
void TestSuite::ShuffleTests(internal::Random* random) {ShuffleTests3107,112563
void TestSuite::UnshuffleTests() {UnshuffleTests3112,112714
static std::string FormatCountableNoun(int count,FormatCountableNoun3123,113106
static std::string FormatTestCount(int test_count) {FormatTestCount3131,113427
static std::string FormatTestSuiteCount(int test_suite_count) {FormatTestSuiteCount3136,113579
static const char * TestPartResultTypeToString(TestPartResult::Type type) {TestPartResultTypeToString3144,113983
namespace internal {internal3163,114413
enum class GTestColor { kDefault, kRed, kGreen, kYellow };GTestColor3165,114446
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kDefault3165,114446
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kRed3165,114446
enum class GTestColor { kDefault, kRed, kGreen, kYellow };kGreen3165,114446
static std::string PrintTestPartResultToString(PrintTestPartResultToString3169,114568
static void PrintTestPartResult(const TestPartResult& test_part_result) {PrintTestPartResult3179,114985
static WORD GetColorAttribute(GTestColor color) {GetColorAttribute3202,116010
static int GetBitOffset(WORD color_mask) {GetBitOffset3214,116313
static WORD GetNewColor(GTestColor color, WORD old_color_attrs) {GetNewColor3225,116511
static const char* GetAnsiColorCode(GTestColor color) {GetAnsiColorCode3249,117492
bool ShouldUseColor(bool stdout_is_tty) {ShouldUseColor3265,117882
static void ColoredPrintf(GTestColor color, const char *fmt, ...) {ColoredPrintf3308,119817
static const char kTypeParamLabel[] = "TypeParam";kTypeParamLabel3358,121613
static const char kValueParamLabel[] = "GetParam()";kValueParamLabel3359,121664
static void PrintFullTestCommentIfPresent(const TestInfo& test_info) {PrintFullTestCommentIfPresent3361,121718
class PrettyUnitTestResultPrinter : public TestEventListener {PrettyUnitTestResultPrinter3380,122345
  PrettyUnitTestResultPrinter() {}PrettyUnitTestResultPrinter3382,122417
  static void PrintTestName(const char* test_suite, const char* test) {PrintTestName3383,122452
  void OnTestIterationStart(const UnitTest& unit_test, int iteration) override;override3389,122712
  void OnEnvironmentsSetUpStart(const UnitTest& unit_test) override;override3390,122792
  void OnTestCaseStart(const TestCase& test_case) override;override3393,122976
  void OnTestSuiteStart(const TestSuite& test_suite) override;override3395,123042
  void OnTestStart(const TestInfo& test_info) override;override3398,123133
  void OnTestPartResult(const TestPartResult& result) override;override3400,123190
  void OnTestEnd(const TestInfo& test_info) override;override3401,123254
  void OnTestCaseEnd(const TestCase& test_case) override;override3403,123350
  void OnTestSuiteEnd(const TestSuite& test_suite) override;override3405,123414
  void OnEnvironmentsTearDownStart(const UnitTest& unit_test) override;override3408,123521
  void OnTestIterationEnd(const UnitTest& unit_test, int iteration) override;override3410,123669
void PrettyUnitTestResultPrinter::OnTestIterationStart(OnTestIterationStart3420,124062
void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(OnEnvironmentsSetUpStart3455,125419
void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {OnTestCaseStart3463,125680
void PrettyUnitTestResultPrinter::OnTestSuiteStart(OnTestSuiteStart3476,126151
void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {OnTestStart3491,126674
void PrettyUnitTestResultPrinter::OnTestPartResult(OnTestPartResult3499,126942
void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {OnTestEnd3513,127342
void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {OnTestCaseEnd3535,128071
void PrettyUnitTestResultPrinter::OnTestSuiteEnd(const TestSuite& test_suite) {OnTestSuiteEnd3546,128525
void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(OnEnvironmentsTearDownStart3558,129025
void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {PrintFailedTests3566,129307
void PrettyUnitTestResultPrinter::PrintFailedTestSuites(PrintFailedTestSuites3593,130425
void PrettyUnitTestResultPrinter::PrintSkippedTests(const UnitTest& unit_test) {PrintSkippedTests3614,131172
void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3637,131967
class BriefUnitTestResultPrinter : public TestEventListener {BriefUnitTestResultPrinter3680,133651
  BriefUnitTestResultPrinter() {}BriefUnitTestResultPrinter3682,133722
  static void PrintTestName(const char* test_suite, const char* test) {PrintTestName3683,133756
  void OnTestPartResult(const TestPartResult& result) override;override3701,134556
  void OnTestEnd(const TestInfo& test_info) override;override3702,134620
  void OnTestIterationEnd(const UnitTest& unit_test, int iteration) override;override3711,135053
void BriefUnitTestResultPrinter::OnTestPartResult(OnTestPartResult3716,135240
void BriefUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {OnTestEnd3730,135639
void BriefUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3747,136153
class TestEventRepeater : public TestEventListener {TestEventRepeater3784,137657
  TestEventRepeater() : forwarding_enabled_(true) {}TestEventRepeater3786,137719
  ~TestEventRepeater() override;override3787,137772
  bool forwarding_enabled() const { return forwarding_enabled_; }forwarding_enabled3793,138020
  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }set_forwarding_enabled3794,138086
  void OnTestProgramStart(const UnitTest& unit_test) override;override3796,138164
  void OnTestIterationStart(const UnitTest& unit_test, int iteration) override;override3797,138227
  void OnEnvironmentsSetUpStart(const UnitTest& unit_test) override;override3798,138307
  void OnEnvironmentsSetUpEnd(const UnitTest& unit_test) override;override3799,138376
  void OnTestCaseStart(const TestSuite& parameter) override;override3802,138534
  void OnTestSuiteStart(const TestSuite& parameter) override;override3804,138641
  void OnTestStart(const TestInfo& test_info) override;override3805,138703
  void OnTestPartResult(const TestPartResult& result) override;override3806,138759
  void OnTestEnd(const TestInfo& test_info) override;override3807,138823
  void OnTestCaseEnd(const TestCase& parameter) override;override3810,138968
  void OnTestSuiteEnd(const TestSuite& parameter) override;override3812,139072
  void OnEnvironmentsTearDownStart(const UnitTest& unit_test) override;override3813,139132
  void OnEnvironmentsTearDownEnd(const UnitTest& unit_test) override;override3814,139204
  void OnTestIterationEnd(const UnitTest& unit_test, int iteration) override;override3815,139274
  void OnTestProgramEnd(const UnitTest& unit_test) override;override3816,139352
  bool forwarding_enabled_;forwarding_enabled_3821,139535
  std::vector<TestEventListener*> listeners_;listeners_3823,139611
TestEventRepeater::~TestEventRepeater() {~TestEventRepeater3828,139716
void TestEventRepeater::Append(TestEventListener *listener) {Append3832,139811
TestEventListener* TestEventRepeater::Release(TestEventListener *listener) {Release3836,139910
#define GTEST_REPEATER_METHOD_(GTEST_REPEATER_METHOD_3849,140336
#define GTEST_REVERSE_REPEATER_METHOD_(GTEST_REVERSE_REPEATER_METHOD_3859,140665
#undef GTEST_REPEATER_METHOD_GTEST_REPEATER_METHOD_3888,142090
#undef GTEST_REVERSE_REPEATER_METHOD_GTEST_REVERSE_REPEATER_METHOD_3889,142120
void TestEventRepeater::OnTestIterationStart(const UnitTest& unit_test,OnTestIterationStart3891,142159
void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd3900,142453
class XmlUnitTestResultPrinter : public EmptyTestEventListener {XmlUnitTestResultPrinter3912,142815
  void OnTestIterationEnd(const UnitTest& unit_test, int iteration) override;override3916,142952
  static bool IsNormalizableWhitespace(char c) {IsNormalizableWhitespace3926,143416
  static bool IsValidXmlCharacter(char c) {IsValidXmlCharacter3931,143564
  static std::string EscapeXmlAttribute(const std::string& str) {EscapeXmlAttribute3945,144198
  static std::string EscapeXmlText(const char* str) {EscapeXmlText3950,144380
  const std::string output_file_;output_file_3999,146590
XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)XmlUnitTestResultPrinter4005,146733
void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4013,146976
void XmlUnitTestResultPrinter::ListTestsMatchingFilter(ListTestsMatchingFilter4022,147328
std::string XmlUnitTestResultPrinter::EscapeXml(EscapeXml4041,148203
std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(RemoveInvalidXmlCharacters4087,149316
std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {FormatTimeInMillisAsSeconds4115,150313
static bool PortableLocaltime(time_t seconds, struct tm* out) {PortableLocaltime4121,150462
std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {FormatEpochTimeInMillisAsIso86014142,151271
void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,OutputXmlCDataSection4157,151979
void XmlUnitTestResultPrinter::OutputXmlAttribute(OutputXmlAttribute4176,152559
void XmlUnitTestResultPrinter::OutputXmlTestSuiteForTestResult(OutputXmlTestSuiteForTestResult4193,153203
void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,OutputXmlTestInfo4230,154847
void XmlUnitTestResultPrinter::OutputXmlTestResult(::std::ostream* stream,OutputXmlTestResult4275,156587
void XmlUnitTestResultPrinter::PrintXmlTestSuite(std::ostream* stream,PrintXmlTestSuite4323,158549
void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,PrintXmlUnitTest4357,160150
void XmlUnitTestResultPrinter::PrintXmlTestsList(PrintXmlTestsList4401,161973
std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(TestPropertiesAsXmlAttributes4425,162825
void XmlUnitTestResultPrinter::OutputXmlTestProperties(OutputXmlTestProperties4436,163221
class JsonUnitTestResultPrinter : public EmptyTestEventListener {JsonUnitTestResultPrinter4459,164000
  void OnTestIterationEnd(const UnitTest& unit_test, int iteration) override;override4463,164139
  const std::string output_file_;output_file_4517,166551
JsonUnitTestResultPrinter::JsonUnitTestResultPrinter(const char* output_file)JsonUnitTestResultPrinter4523,166696
void JsonUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,OnTestIterationEnd4530,166906
std::string JsonUnitTestResultPrinter::EscapeJson(const std::string& str) {EscapeJson4540,167320
static std::string FormatTimeInMillisAsDuration(TimeInMillis ms) {FormatTimeInMillisAsDuration4583,168203
static std::string FormatEpochTimeInMillisAsRFC3339(TimeInMillis ms) {FormatEpochTimeInMillisAsRFC33394591,168493
static inline std::string Indent(size_t width) {Indent4604,169063
void JsonUnitTestResultPrinter::OutputJsonKey(OutputJsonKey4608,169149
void JsonUnitTestResultPrinter::OutputJsonKey(OutputJsonKey4628,169806
void JsonUnitTestResultPrinter::OutputJsonTestSuiteForTestResult(OutputJsonTestSuiteForTestResult4649,170516
void JsonUnitTestResultPrinter::OutputJsonTestInfo(::std::ostream* stream,OutputJsonTestInfo4691,172450
void JsonUnitTestResultPrinter::OutputJsonTestResult(::std::ostream* stream,OutputJsonTestResult4735,174281
void JsonUnitTestResultPrinter::PrintJsonTestSuite(PrintJsonTestSuite4764,175400
void JsonUnitTestResultPrinter::PrintJsonUnitTest(std::ostream* stream,PrintJsonUnitTest4807,177049
void JsonUnitTestResultPrinter::PrintJsonTestList(PrintJsonTestList4858,179002
std::string JsonUnitTestResultPrinter::TestPropertiesAsJson(TestPropertiesAsJson4885,179863
std::string StreamingListener::UrlEncode(const char* str) {UrlEncode4905,180700
void StreamingListener::SocketWriter::MakeConnection() {MakeConnection4924,181136
const char* const OsStackTraceGetterInterface::kElidedFramesMarker =kElidedFramesMarker4970,182675
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_4974,182873
void OsStackTraceGetter::UponLeavingGTest() GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5023,184057
class ScopedPrematureExitFile {ScopedPrematureExitFile5037,184476
  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)ScopedPrematureExitFile5039,184517
  ~ScopedPrematureExitFile() {~ScopedPrematureExitFile5053,185145
  const std::string premature_exit_filepath_;premature_exit_filepath_5067,185554
TestEventListeners::TestEventListeners()TestEventListeners5076,185720
TestEventListeners::~TestEventListeners() { delete repeater_; }~TestEventListeners5081,185895
void TestEventListeners::Append(TestEventListener* listener) {Append5087,186228
TestEventListener* TestEventListeners::Release(TestEventListener* listener) {Release5094,186521
TestEventListener* TestEventListeners::repeater() { return repeater_; }repeater5104,186896
void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {SetDefaultResultPrinter5111,187322
void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {SetDefaultXmlGenerator5126,188027
bool TestEventListeners::EventForwardingEnabled() const {EventForwardingEnabled5138,188470
void TestEventListeners::SuppressEventForwarding() {SuppressEventForwarding5142,188573
UnitTest* UnitTest::GetInstance() {GetInstance5155,189035
int UnitTest::successful_test_suite_count() const {successful_test_suite_count5170,189474
int UnitTest::failed_test_suite_count() const {failed_test_suite_count5175,189619
int UnitTest::total_test_suite_count() const {total_test_suite_count5180,189753
int UnitTest::test_suite_to_run_count() const {test_suite_to_run_count5186,189935
int UnitTest::successful_test_case_count() const {successful_test_case_count5192,190121
int UnitTest::failed_test_case_count() const {failed_test_case_count5195,190222
int UnitTest::total_test_case_count() const {total_test_case_count5198,190315
int UnitTest::test_case_to_run_count() const {test_case_to_run_count5201,190406
int UnitTest::successful_test_count() const {successful_test_count5207,190586
int UnitTest::skipped_test_count() const {skipped_test_count5212,190714
int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }failed_test_count5217,190835
int UnitTest::reportable_disabled_test_count() const {reportable_disabled_test_count5220,190994
int UnitTest::disabled_test_count() const {disabled_test_count5225,191141
int UnitTest::reportable_test_count() const {reportable_test_count5230,191289
int UnitTest::total_test_count() const { return impl()->total_test_count(); }total_test_count5235,191413
int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }test_to_run_count5238,191537
internal::TimeInMillis UnitTest::start_timestamp() const {start_timestamp5242,191705
internal::TimeInMillis UnitTest::elapsed_time() const {elapsed_time5247,191848
bool UnitTest::Passed() const { return impl()->Passed(); }Passed5253,192026
bool UnitTest::Failed() const { return impl()->Failed(); }Failed5257,192213
const TestSuite* UnitTest::GetTestSuite(int i) const {GetTestSuite5261,192424
const TestCase* UnitTest::GetTestCase(int i) const {GetTestCase5267,192607
const TestResult& UnitTest::ad_hoc_test_result() const {ad_hoc_test_result5274,192868
TestSuite* UnitTest::GetMutableTestSuite(int i) {GetMutableTestSuite5280,193119
TestEventListeners& UnitTest::listeners() {listeners5286,193308
Environment* UnitTest::AddEnvironment(Environment* env) {AddEnvironment5300,193862
    const std::string& os_stack_trace) GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5318,194442
void UnitTest::RecordProperty(const std::string& key,RecordProperty5383,197223
int UnitTest::Run() {Run5393,197595
const char* UnitTest::original_working_dir() const {original_working_dir5478,201588
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5485,201850
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5493,202105
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5502,202381
int UnitTest::random_seed() const { return impl_->random_seed(); }random_seed5508,202563
UnitTest::parameterized_test_registry() GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5513,202808
UnitTest::UnitTest() {UnitTest5518,202959
UnitTest::~UnitTest() {~UnitTest5523,203056
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5530,203256
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_5537,203470
namespace internal {internal5542,203586
          &default_global_test_part_result_reporter_),default_global_test_part_result_reporter_5550,203945
          &default_per_thread_test_part_result_reporter_),default_per_thread_test_part_result_reporter_5552,204045
      catch_exceptions_(false) {catch_exceptions_5569,204742
UnitTestImpl::~UnitTestImpl() {~UnitTestImpl5573,204851
void UnitTestImpl::RecordProperty(const TestProperty& test_property) {RecordProperty5588,205423
void UnitTestImpl::SuppressTestEventsIfInSubprocess() {SuppressTestEventsIfInSubprocess5608,206164
void UnitTestImpl::ConfigureXmlOutput() {ConfigureXmlOutput5616,206484
void UnitTestImpl::ConfigureStreamingOutput() {ConfigureStreamingOutput5633,207263
void UnitTestImpl::PostFlagParsingInit() {PostFlagParsingInit5653,208151
class TestSuiteNameIs {TestSuiteNameIs5703,209868
  explicit TestSuiteNameIs(const std::string& name) : name_(name) {}TestSuiteNameIs5706,209919
  bool operator()(const TestSuite* test_suite) const {operator ()5709,210060
  std::string name_;name_5715,210225
TestSuite* UnitTestImpl::GetTestSuite(GetTestSuite5730,210847
static void SetUpEnvironment(Environment* env) { env->SetUp(); }SetUpEnvironment5766,212301
static void TearDownEnvironment(Environment* env) { env->TearDown(); }TearDownEnvironment5767,212366
bool UnitTestImpl::RunAllTests() {RunAllTests5778,212939
void WriteToShardStatusFileIfNeeded() {WriteToShardStatusFileIfNeeded5980,221071
bool ShouldShard(const char* total_shards_env,ShouldShard6002,222030
int32_t Int32FromEnvOrDie(const char* var, int32_t default_val) {Int32FromEnvOrDie6047,223821
bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {ShouldRunTestOnShard6065,224453
int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {FilterTests6076,224993
static void PrintOnOneLine(const char* str, int max_length) {PrintOnOneLine6131,227398
void UnitTestImpl::ListTestsMatchingFilter() {ListTestsMatchingFilter6150,227818
void UnitTestImpl::set_os_stack_trace_getter(set_os_stack_trace_getter6207,230055
OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {os_stack_trace_getter6218,230422
TestResult* UnitTestImpl::current_test_result() {current_test_result6231,230832
void UnitTestImpl::ShuffleTests() {ShuffleTests6243,231218
void UnitTestImpl::UnshuffleTests() {UnshuffleTests6258,231759
std::string GetCurrentOsStackTraceExceptTop(UnitTest* /*unit_test*/,GetCurrentOsStackTraceExceptTop6277,232550
class ClassUniqueToAlwaysTrue {};ClassUniqueToAlwaysTrue6287,232994
bool IsTrue(bool condition) { return condition; }IsTrue6290,233031
bool AlwaysTrue() {AlwaysTrue6292,233082
bool SkipPrefix(const char* prefix, const char** pstr) {SkipPrefix6305,233573
static const char* ParseFlagValue(const char* str, const char* flag_name,ParseFlagValue6319,234018
static bool ParseFlag(const char* str, const char* flag_name, bool* value) {ParseFlag6357,235373
bool ParseFlag(const char* str, const char* flag_name, int32_t* value) {ParseFlag6373,235981
static bool ParseFlag(const char* str, const char* flag_name, String* value) {ParseFlag6390,236631
static bool HasGoogleTestFlagPrefix(const char* str) {HasGoogleTestFlagPrefix6408,237413
static void PrintColorEncoded(const char* str) {PrintColorEncoded6426,238100
static const char kColorEncodedHelpMessage[] =kColorEncodedHelpMessage6460,239027
static bool ParseGoogleTestFlag(const char* const arg) {ParseGoogleTestFlag6556,242902
#define GTEST_INTERNAL_PARSE_FLAG(GTEST_INTERNAL_PARSE_FLAG6557,242959
static void LoadFlagsFromFile(const std::string& path) {LoadFlagsFromFile6591,244300
void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {ParseGoogleTestFlagsOnlyImpl6614,245110
void ParseGoogleTestFlagsOnly(int* argc, char** argv) {ParseGoogleTestFlagsOnly6667,246896
void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {ParseGoogleTestFlagsOnly6681,247252
void InitGoogleTestImpl(int* argc, CharType** argv) {InitGoogleTestImpl6690,247523
void InitGoogleTest(int* argc, char** argv) {InitGoogleTest6720,248443
void InitGoogleTest(int* argc, wchar_t** argv) {InitGoogleTest6730,248851
void InitGoogleTest() {InitGoogleTest6740,249275
std::string TempDir() {TempDir6754,249767
void ScopedTrace::PushTrace(const char* file, int line, std::string message) {PushTrace6791,250821

test/googletest/googletest/src/gtest-all.cc,0

test/googletest/googletest/src/gtest-internal-inl.h,10928
#define GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_35,1797
GTEST_DECLARE_bool_(death_test_use_fork);death_test_use_fork72,2727
namespace testing {testing74,2770
namespace internal {internal75,2790
const int kMaxRandomSeed = 99999;kMaxRandomSeed82,3049
inline int GetRandomSeedFromFlag(int32_t random_seed_flag) {GetRandomSeedFromFlag111,4330
inline int GetNextRandomSeed(int seed) {GetNextRandomSeed127,4982
class GTestFlagSaver {GTestFlagSaver137,5369
  GTestFlagSaver() {GTestFlagSaver140,5417
  ~GTestFlagSaver() {~GTestFlagSaver166,6627
  bool also_run_disabled_tests_;also_run_disabled_tests_193,7827
  bool break_on_failure_;break_on_failure_194,7860
  bool catch_exceptions_;catch_exceptions_195,7886
  std::string color_;color_196,7912
  std::string death_test_style_;death_test_style_197,7934
  bool death_test_use_fork_;death_test_use_fork_198,7967
  bool fail_fast_;fail_fast_199,7996
  std::string filter_;filter_200,8015
  std::string internal_run_death_test_;internal_run_death_test_201,8038
  bool list_tests_;list_tests_202,8078
  std::string output_;output_203,8098
  bool brief_;brief_204,8121
  bool print_time_;print_time_205,8136
  bool print_utf8_;print_utf8_206,8156
  int32_t random_seed_;random_seed_207,8176
  int32_t repeat_;repeat_208,8200
  bool recreate_environments_when_repeating_;recreate_environments_when_repeating_209,8219
  bool shuffle_;shuffle_210,8265
  int32_t stack_trace_depth_;stack_trace_depth_211,8282
  std::string stream_result_to_;stream_result_to_212,8312
  bool throw_on_failure_;throw_on_failure_213,8345
} GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_214,8371
inline int CountIf(const Container& c, Predicate predicate) {CountIf272,11386
void ForEach(const Container& c, Functor functor) {ForEach285,11803
inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {GetElementOr292,12025
void ShuffleRange(internal::Random* random, int begin, int end,ShuffleRange302,12508
inline void Shuffle(internal::Random* random, std::vector<E>* v) {Shuffle326,13494
static void Delete(T* x) {Delete333,13722
class TestPropertyKeyIs {TestPropertyKeyIs340,13875
  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}TestPropertyKeyIs345,13984
  bool operator()(const TestProperty& test_property) const {operator ()348,14134
  std::string key_;key_353,14250
class GTEST_API_ UnitTestOptions {UnitTestOptions366,14719
class OsStackTraceGetterInterface {OsStackTraceGetterInterface404,16231
  OsStackTraceGetterInterface() {}OsStackTraceGetterInterface406,16276
  virtual ~OsStackTraceGetterInterface() {}~OsStackTraceGetterInterface407,16311
  static const char* const kElidedFramesMarker;kElidedFramesMarker424,17099
class OsStackTraceGetter : public OsStackTraceGetterInterface {OsStackTraceGetter431,17300
  OsStackTraceGetter() {}OsStackTraceGetter433,17373
  std::string CurrentStackTrace(int max_depth, int skip_count) override;override435,17400
  void UponLeavingGTest() override;override436,17473
  Mutex mutex_;  // Protects all internal state.mutex_440,17539
  void* caller_frame_ = nullptr;caller_frame_446,17859
struct TraceInfo {TraceInfo453,18026
  const char* file;file454,18045
  int line;line455,18065
  std::string message;message456,18077
class DefaultGlobalTestPartResultReporterDefaultGlobalTestPartResultReporter461,18233
  void ReportTestPartResult(const TestPartResult& result) override;override467,18510
  UnitTestImpl* const unit_test_;unit_test_470,18589
class DefaultPerThreadTestPartResultReporterDefaultPerThreadTestPartResultReporter477,18833
  void ReportTestPartResult(const TestPartResult& result) override;override483,19166
  UnitTestImpl* const unit_test_;unit_test_486,19245
class GTEST_API_ UnitTestImpl {UnitTestImpl495,19586
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp560,21852
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time563,21966
  bool Passed() const { return !Failed(); }Passed567,22119
  bool Failed() const {Failed571,22295
  const TestSuite* GetTestSuite(int i) const {GetTestSuite577,22555
  const TestCase* GetTestCase(int i) const { return GetTestSuite(i); }GetTestCase584,22835
  TestSuite* GetMutableSuiteCase(int i) {GetMutableSuiteCase589,23108
  TestEventListeners* listeners() { return &listeners_; }listeners595,23343
  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }ad_hoc_test_result602,23622
  std::string CurrentOsStackTraceExceptTop(int skip_count) GTEST_NO_INLINE_;GTEST_NO_INLINE_626,24725
  TestCase* GetTestCase(const char* test_case_name, const char* type_param,GetTestCase644,25601
  void AddTestInfo(internal::SetUpTestSuiteFunc set_up_tc,AddTestInfo658,26197
  internal::ParameterizedTestSuiteRegistry& parameterized_test_registry() {parameterized_test_registry683,27377
  std::set<std::string>* ignored_parameterized_test_suites() {ignored_parameterized_test_suites687,27499
  type_parameterized_test_registry() {type_parameterized_test_registry694,27798
  void set_current_test_suite(TestSuite* a_current_test_suite) {set_current_test_suite699,27958
  void set_current_test_info(TestInfo* a_current_test_info) {set_current_test_info706,28247
  void ClearNonAdHocTestResult() {ClearNonAdHocTestResult725,29120
  void ClearAdHocTestResult() {ClearAdHocTestResult730,29271
  enum ReactionToSharding {ReactionToSharding740,29645
    HONOR_SHARDING_PROTOCOL,HONOR_SHARDING_PROTOCOL741,29673
    IGNORE_SHARDING_PROTOCOLIGNORE_SHARDING_PROTOCOL742,29702
  const TestSuite* current_test_suite() const { return current_test_suite_; }current_test_suite756,30259
  TestInfo* current_test_info() { return current_test_info_; }current_test_info757,30337
  const TestInfo* current_test_info() const { return current_test_info_; }current_test_info758,30400
  std::vector<Environment*>& environments() { return environments_; }environments762,30586
  std::vector<TraceInfo>& gtest_trace_stack() {gtest_trace_stack765,30714
  const std::vector<TraceInfo>& gtest_trace_stack() const {gtest_trace_stack768,30810
  void InitDeathTestSubprocessControlInfo() {InitDeathTestSubprocessControlInfo773,30937
  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {internal_run_death_test_flag780,31306
  internal::DeathTestFactory* death_test_factory() {death_test_factory785,31490
  int random_seed() const { return random_seed_; }random_seed812,32533
  internal::Random* random() { return &random_; }random815,32624
  bool catch_exceptions() const { return catch_exceptions_; }catch_exceptions826,33028
  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }set_catch_exceptions833,33250
  UnitTest* const parent_;parent_836,33385
  internal::FilePath original_working_dir_;original_working_dir_840,33493
  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;default_global_test_part_result_reporter_843,33583
      default_per_thread_test_part_result_reporter_;default_per_thread_test_part_result_reporter_845,33705
  TestPartResultReporterInterface* global_test_part_result_repoter_;global_test_part_result_repoter_848,33830
  internal::Mutex global_test_part_result_reporter_mutex_;global_test_part_result_reporter_mutex_851,33974
      per_thread_test_part_result_reporter_;per_thread_test_part_result_reporter_855,34167
  std::vector<Environment*> environments_;environments_859,34315
  std::vector<TestSuite*> test_suites_;test_suites_863,34456
  std::vector<int> test_suite_indices_;test_suite_indices_869,34725
  internal::ParameterizedTestSuiteRegistry parameterized_test_registry_;parameterized_test_registry_873,34853
      type_parameterized_test_registry_;type_parameterized_test_registry_875,34973
  std::set<std::string> ignored_parameterized_test_suites_;ignored_parameterized_test_suites_879,35107
  bool parameterized_tests_registered_;parameterized_tests_registered_882,35245
  int last_death_test_suite_;last_death_test_suite_885,35353
  TestSuite* current_test_suite_;current_test_suite_891,35662
  TestInfo* current_test_info_;current_test_info_897,35969
  TestResult ad_hoc_test_result_;ad_hoc_test_result_907,36473
  TestEventListeners listeners_;listeners_911,36599
  OsStackTraceGetterInterface* os_stack_trace_getter_;os_stack_trace_getter_917,36856
  bool post_flag_parse_init_performed_;post_flag_parse_init_performed_920,36976
  int random_seed_;random_seed_923,37084
  internal::Random random_;random_926,37139
  TimeInMillis start_timestamp_;start_timestamp_930,37254
  TimeInMillis elapsed_time_;elapsed_time_933,37341
  std::unique_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;internal_run_death_test_flag_938,37513
  std::unique_ptr<internal::DeathTestFactory> death_test_factory_;death_test_factory_939,37588
  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;gtest_trace_stack_943,37759
  bool catch_exceptions_;catch_exceptions_947,37917
inline UnitTestImpl* GetUnitTestImpl() {GetUnitTestImpl954,38104
bool ParseNaturalNumber(const ::std::string& str, Integer* number) {ParseNaturalNumber994,39659
class TestResultAccessor {TestResultAccessor1028,40933
  static void RecordProperty(TestResult* test_result,RecordProperty1030,40969
  static void ClearTestPartResults(TestResult* test_result) {ClearTestPartResults1036,41206
  static const std::vector<testing::TestPartResult>& test_part_results(test_part_results1040,41314
class StreamingListener : public EmptyTestEventListener {StreamingListener1049,41577
  class AbstractSocketWriter {AbstractSocketWriter1052,41702
    virtual ~AbstractSocketWriter() {}~AbstractSocketWriter1054,41744
    virtual void CloseConnection() {}CloseConnection1060,41903
    void SendLn(const std::string& message) { Send(message + "\n"); }SendLn1063,41993
  class SocketWriter : public AbstractSocketWriter {SocketWriter1067,42131
    SocketWriter(const std::string& host, const std::string& port)SocketWriter1069,42195
    int sockfd_;  // socket file descriptorsockfd_1105,43252
    const std::string host_name_;host_name_1106,43296
    const std::string port_num_;port_num_1107,43330
  StreamingListener(const std::string& host, const std::string& port)StreamingListener1115,43559
  explicit StreamingListener(AbstractSocketWriter* socket_writer)StreamingListener1120,43702
  void SendLn(const std::string& message) { socket_writer_->SendLn(message); }SendLn1184,46214
  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }Start1188,46388
  std::string FormatBool(bool value) { return value ? "1" : "0"; }FormatBool1190,46456
  const std::unique_ptr<AbstractSocketWriter> socket_writer_;socket_writer_1192,46524

test/googletest/googletest/test/googletest-filter-unittest.py,3987
CAN_PASS_EMPTY_ENV = FalseCAN_PASS_EMPTY_ENV59,2542
  child = gtest_test_utils.Subprocess(child62,2619
  CAN_PASS_EMPTY_ENV = eval(child.output)CAN_PASS_EMPTY_ENV64,2737
CAN_UNSET_ENV = FalseCAN_UNSET_ENV73,3142
  child = gtest_test_utils.Subprocess(child77,3245
  CAN_UNSET_ENV = eval(child.output)CAN_UNSET_ENV80,3374
CAN_TEST_EMPTY_FILTER = (CAN_PASS_EMPTY_ENV and CAN_UNSET_ENV)CAN_TEST_EMPTY_FILTER87,3683
FILTER_ENV_VAR = 'GTEST_FILTER'FILTER_ENV_VAR91,3808
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR94,3888
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR95,3932
SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'SHARD_STATUS_FILE_ENV_VAR96,3974
FILTER_FLAG = 'gtest_filter'FILTER_FLAG99,4086
ALSO_RUN_DISABLED_TESTS_FLAG = 'gtest_also_run_disabled_tests'ALSO_RUN_DISABLED_TESTS_FLAG102,4170
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-filter-unittest_')COMMAND105,4292
PARAM_TEST_REGEX = re.compile(r'/ParamTest')PARAM_TEST_REGEX108,4452
TEST_CASE_REGEX = re.compile(r'^\[\-+\] \d+ tests? from (\w+(/\w+)?)')TEST_CASE_REGEX111,4561
TEST_REGEX = re.compile(r'^\[\s*RUN\s*\].*\.(\w+(/\w+)?)')TEST_REGEX114,4691
LIST_TESTS_FLAG = '--gtest_list_tests'LIST_TESTS_FLAG118,4838
SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS121,4932
PARAM_TESTS = [PARAM_TESTS125,5101
DISABLED_TESTS = [DISABLED_TESTS136,5364
  DEATH_TESTS = [DEATH_TESTS146,5622
  DEATH_TESTS = []DEATH_TESTS151,5704
ACTIVE_TESTS = [ACTIVE_TESTS154,5754
param_tests_present = Noneparam_tests_present167,5982
environ = os.environ.copy()environ171,6024
def SetEnvVar(env_var, value):SetEnvVar174,6054
def RunAndReturnOutput(args = None):RunAndReturnOutput183,6267
def RunAndExtractTestList(args = None):RunAndExtractTestList190,6481
def InvokeWithModifiedEnv(extra_env, function, *args, **kwargs):InvokeWithModifiedEnv209,7047
def RunWithSharding(total_shards, shard_index, command):RunWithSharding220,7359
class GTestFilterUnitTest(gtest_test_utils.TestCase):GTestFilterUnitTest230,7702
  def AssertSetEqual(self, lhs, rhs):AssertSetEqual235,7846
  def AssertPartitionIsValid(self, set_var, list_of_sets):AssertPartitionIsValid244,8088
  def AdjustForParameterizedTests(self, tests_to_run):AdjustForParameterizedTests253,8428
  def RunAndVerify(self, gtest_filter, tests_to_run):RunAndVerify262,8718
  def RunAndVerifyWithSharding(self, gtest_filter, total_shards, tests_to_run,RunAndVerifyWithSharding292,9841
  def RunAndVerifyAllowingDisabled(self, gtest_filter, tests_to_run):RunAndVerifyAllowingDisabled331,11550
  def setUp(self):setUp352,12304
  def testDefaultBehavior(self):testDefaultBehavior364,12635
  def testDefaultBehaviorWithShards(self):testDefaultBehaviorWithShards369,12771
  def testEmptyFilter(self):testEmptyFilter378,13229
  def testBadFilter(self):testBadFilter385,13413
  def testFullName(self):testFullName391,13583
  def testUniversalFilters(self):testUniversalFilters398,13844
  def testFilterByTestCase(self):testFilterByTestCase407,14239
  def testFilterByTest(self):testFilterByTest417,14633
  def testFilterDisabledTests(self):testFilterDisabledTests422,14780
  def testWildcardInTestCaseName(self):testWildcardInTestCaseName447,15663
  def testWildcardInTestName(self):testWildcardInTestName459,15984
  def testFilterWithoutDot(self):testFilterWithoutDot464,16136
  def testTwoPatterns(self):testTwoPatterns475,16363
  def testThreePatterns(self):testThreePatterns488,16675
  def testNegativeFilters(self):testNegativeFilters517,17256
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar569,18653
  def testShardStatusFileIsCreated(self):testShardStatusFileIsCreated579,19012
  def testShardStatusFileIsCreatedWithListTests(self):testShardStatusFileIsCreatedWithListTests593,19552
    def testShardingWorksWithDeathTests(self):testShardingWorksWithDeathTests617,20597

test/googletest/googletest/test/gtest_xml_outfile2_test_.cc,120
class PropertyTwo : public testing::Test {PropertyTwo35,1685
TEST_F(PropertyTwo, TestSomeProperties) {TEST_F41,1870

test/googletest/googletest/test/googletest-param-test2-test.cc,0

test/googletest/googletest/test/googletest-param-test-invalid-name2-test_.cc,241
class DummyTest : public ::testing::TestWithParam<const char *> {};DummyTest34,1596
std::string StringParamTestSuffix(StringParamTestSuffix36,1665
TEST_P(DummyTest, Dummy) {TEST_P41,1792
int main(int argc, char *argv[]) {main50,2033

test/googletest/googletest/test/googletest-shuffle-test.py,2380
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-shuffle-test_')COMMAND37,1683
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR40,1808
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR41,1852
TEST_FILTER = 'A*.A:A*.B:C*'TEST_FILTER43,1895
ALL_TESTS = []ALL_TESTS45,1925
ACTIVE_TESTS = []ACTIVE_TESTS46,1940
FILTERED_TESTS = []FILTERED_TESTS47,1958
SHARDED_TESTS = []SHARDED_TESTS48,1978
SHUFFLED_ALL_TESTS = []SHUFFLED_ALL_TESTS50,1998
SHUFFLED_ACTIVE_TESTS = []SHUFFLED_ACTIVE_TESTS51,2022
SHUFFLED_FILTERED_TESTS = []SHUFFLED_FILTERED_TESTS52,2049
SHUFFLED_SHARDED_TESTS = []SHUFFLED_SHARDED_TESTS53,2078
def AlsoRunDisabledTestsFlag():AlsoRunDisabledTestsFlag56,2108
def FilterFlag(test_filter):FilterFlag60,2185
def RepeatFlag(n):RepeatFlag64,2262
def ShuffleFlag():ShuffleFlag68,2319
def RandomSeedFlag(n):RandomSeedFlag72,2367
def RunAndReturnOutput(extra_env, args):RunAndReturnOutput76,2433
def GetTestsForAllIterations(extra_env, args):GetTestsForAllIterations85,2680
def GetTestCases(tests):GetTestCases108,3318
def CalculateTestLists():CalculateTestLists128,3744
class GTestShuffleUnitTest(gtest_test_utils.TestCase):GTestShuffleUnitTest167,5117
  def setUp(self):setUp170,5203
  def testShufflePreservesNumberOfTests(self):testShufflePreservesNumberOfTests173,5248
  def testShuffleChangesTestOrder(self):testShuffleChangesTestOrder179,5568
  def testShuffleChangesTestCaseOrder(self):testShuffleChangesTestCaseOrder187,5960
  def testShuffleDoesNotRepeatTest(self):testShuffleDoesNotRepeatTest200,6558
  def testShuffleDoesNotCreateNewTest(self):testShuffleDoesNotCreateNewTest214,7249
  def testShuffleIncludesAllTests(self):testShuffleIncludesAllTests224,7755
  def testShuffleLeavesDeathTestsAtFront(self):testShuffleLeavesDeathTestsAtFront234,8225
  def _VerifyTestCasesDoNotInterleave(self, tests):_VerifyTestCasesDoNotInterleave243,8540
  def testShuffleDoesNotInterleaveTestCases(self):testShuffleDoesNotInterleaveTestCases253,8939
  def testShuffleRestoresOrderAfterEachIteration(self):testShuffleRestoresOrderAfterEachIteration259,9247
  def testShuffleGeneratesNewOrderInEachIteration(self):testShuffleGeneratesNewOrderInEachIteration291,10853
  def testShuffleShardedTestsPreservesPartition(self):testShuffleShardedTestsPreservesPartition303,11383

test/googletest/googletest/test/googletest-throw-on-failure-test_.cc,98
void TerminateHandler() {TerminateHandler46,2222
int main(int argc, char** argv) {main52,2360

test/googletest/googletest/test/googletest-env-var-test_.cc,181
namespace testing {testing41,1758
TEST(GTestEnvVarTest, Dummy) {TEST46,1957
void PrintFlag(const char* flag) {PrintFlag49,1991
int main(int argc, char** argv) {main122,3484

test/googletest/googletest/test/gtest_pred_impl_unittest.cc,19464
struct Bool {Bool56,2524
  explicit Bool(int val) : value(val != 0) {}Bool57,2538
  bool operator>(int n) const { return value > Bool(n).value; }operator >59,2585
  Bool operator+(const Bool& rhs) const { return Bool(value + rhs.value); }operator +61,2650
  bool operator==(const Bool& rhs) const { return value == rhs.value; }operator ==63,2727
  bool value;value65,2800
std::ostream& operator<<(std::ostream& os, const Bool& x) {operator <<69,2860
bool PredFunction1(T1 v1) {PredFunction177,3092
bool PredFunction1Int(int v1) {PredFunction1Int83,3285
bool PredFunction1Bool(Bool v1) {PredFunction1Bool86,3336
struct PredFunctor1 {PredFunctor191,3420
  bool operator()(const T1& v1) {operator ()93,3467
testing::AssertionResult PredFormatFunction1(const char* e1,PredFormatFunction1100,3592
struct PredFormatFunctor1 {PredFormatFunctor1112,3950
  testing::AssertionResult operator()(const char* e1,operator ()114,4003
class Predicate1Test : public testing::Test {Predicate1Test122,4209
  static bool expected_to_finish_;expected_to_finish_147,5029
  static bool finished_;finished_150,5127
  static int n1_;n1_152,5153
bool Predicate1Test::expected_to_finish_;expected_to_finish_155,5175
bool Predicate1Test::finished_;finished_156,5217
int Predicate1Test::n1_;n1_157,5249
typedef Predicate1Test EXPECT_PRED_FORMAT1Test;EXPECT_PRED_FORMAT1Test159,5275
typedef Predicate1Test ASSERT_PRED_FORMAT1Test;ASSERT_PRED_FORMAT1Test160,5323
typedef Predicate1Test EXPECT_PRED1Test;EXPECT_PRED1Test161,5371
typedef Predicate1Test ASSERT_PRED1Test;ASSERT_PRED1Test162,5412
TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeSuccess) {TEST_F166,5562
TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeSuccess) {TEST_F174,5811
TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeSuccess) {TEST_F182,6058
TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeSuccess) {TEST_F190,6303
TEST_F(EXPECT_PRED1Test, FunctionOnBuiltInTypeFailure) {TEST_F198,6543
TEST_F(EXPECT_PRED1Test, FunctionOnUserTypeFailure) {TEST_F208,6843
TEST_F(EXPECT_PRED1Test, FunctorOnBuiltInTypeFailure) {TEST_F218,7141
TEST_F(EXPECT_PRED1Test, FunctorOnUserTypeFailure) {TEST_F228,7437
TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeSuccess) {TEST_F238,7736
TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeSuccess) {TEST_F246,7985
TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeSuccess) {TEST_F254,8232
TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeSuccess) {TEST_F262,8477
TEST_F(ASSERT_PRED1Test, FunctionOnBuiltInTypeFailure) {TEST_F270,8717
TEST_F(ASSERT_PRED1Test, FunctionOnUserTypeFailure) {TEST_F281,9045
TEST_F(ASSERT_PRED1Test, FunctorOnBuiltInTypeFailure) {TEST_F292,9371
TEST_F(ASSERT_PRED1Test, FunctorOnUserTypeFailure) {TEST_F303,9695
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {TEST_F314,10029
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {TEST_F322,10309
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {TEST_F330,10586
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {TEST_F338,10865
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {TEST_F346,11139
TEST_F(EXPECT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {TEST_F356,11470
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {TEST_F366,11798
TEST_F(EXPECT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {TEST_F376,12128
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeSuccess) {TEST_F386,12461
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeSuccess) {TEST_F394,12741
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeSuccess) {TEST_F402,13018
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeSuccess) {TEST_F410,13297
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnBuiltInTypeFailure) {TEST_F418,13571
TEST_F(ASSERT_PRED_FORMAT1Test, FunctionOnUserTypeFailure) {TEST_F429,13930
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnBuiltInTypeFailure) {TEST_F440,14286
TEST_F(ASSERT_PRED_FORMAT1Test, FunctorOnUserTypeFailure) {TEST_F451,14644
bool PredFunction2(T1 v1, T2 v2) {PredFunction2463,15028
bool PredFunction2Int(int v1, int v2) {PredFunction2Int469,15233
bool PredFunction2Bool(Bool v1, Bool v2) {PredFunction2Bool472,15297
struct PredFunctor2 {PredFunctor2477,15396
  bool operator()(const T1& v1,operator ()479,15456
testing::AssertionResult PredFormatFunction2(const char* e1,PredFormatFunction2487,15632
struct PredFormatFunctor2 {PredFormatFunctor2501,16135
  testing::AssertionResult operator()(const char* e1,operator ()503,16201
class Predicate2Test : public testing::Test {Predicate2Test513,16521
  static bool expected_to_finish_;expected_to_finish_541,17459
  static bool finished_;finished_544,17557
  static int n1_;n1_546,17583
  static int n2_;n2_547,17601
bool Predicate2Test::expected_to_finish_;expected_to_finish_550,17623
bool Predicate2Test::finished_;finished_551,17665
int Predicate2Test::n1_;n1_552,17697
int Predicate2Test::n2_;n2_553,17722
typedef Predicate2Test EXPECT_PRED_FORMAT2Test;EXPECT_PRED_FORMAT2Test555,17748
typedef Predicate2Test ASSERT_PRED_FORMAT2Test;ASSERT_PRED_FORMAT2Test556,17796
typedef Predicate2Test EXPECT_PRED2Test;EXPECT_PRED2Test557,17844
typedef Predicate2Test ASSERT_PRED2Test;ASSERT_PRED2Test558,17885
TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeSuccess) {TEST_F562,18035
TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeSuccess) {TEST_F571,18306
TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeSuccess) {TEST_F580,18581
TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeSuccess) {TEST_F589,18848
TEST_F(EXPECT_PRED2Test, FunctionOnBuiltInTypeFailure) {TEST_F598,19116
TEST_F(EXPECT_PRED2Test, FunctionOnUserTypeFailure) {TEST_F609,19440
TEST_F(EXPECT_PRED2Test, FunctorOnBuiltInTypeFailure) {TEST_F620,19768
TEST_F(EXPECT_PRED2Test, FunctorOnUserTypeFailure) {TEST_F631,20088
TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeSuccess) {TEST_F642,20417
TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeSuccess) {TEST_F651,20688
TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeSuccess) {TEST_F660,20963
TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeSuccess) {TEST_F669,21230
TEST_F(ASSERT_PRED2Test, FunctionOnBuiltInTypeFailure) {TEST_F678,21498
TEST_F(ASSERT_PRED2Test, FunctionOnUserTypeFailure) {TEST_F690,21850
TEST_F(ASSERT_PRED2Test, FunctorOnBuiltInTypeFailure) {TEST_F702,22206
TEST_F(ASSERT_PRED2Test, FunctorOnUserTypeFailure) {TEST_F714,22554
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {TEST_F726,22918
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {TEST_F735,23227
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {TEST_F744,23539
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {TEST_F753,23847
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {TEST_F762,24156
TEST_F(EXPECT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {TEST_F773,24518
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {TEST_F784,24883
TEST_F(EXPECT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {TEST_F795,25244
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeSuccess) {TEST_F806,25614
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeSuccess) {TEST_F815,25923
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeSuccess) {TEST_F824,26235
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeSuccess) {TEST_F833,26543
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnBuiltInTypeFailure) {TEST_F842,26852
TEST_F(ASSERT_PRED_FORMAT2Test, FunctionOnUserTypeFailure) {TEST_F854,27242
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnBuiltInTypeFailure) {TEST_F866,27635
TEST_F(ASSERT_PRED_FORMAT2Test, FunctorOnUserTypeFailure) {TEST_F878,28024
bool PredFunction3(T1 v1, T2 v2, T3 v3) {PredFunction3891,28460
bool PredFunction3Int(int v1, int v2, int v3) {PredFunction3Int897,28677
bool PredFunction3Bool(Bool v1, Bool v2, Bool v3) {PredFunction3Bool900,28754
struct PredFunctor3 {PredFunctor3905,28868
  bool operator()(const T1& v1,operator ()907,28941
testing::AssertionResult PredFormatFunction3(const char* e1,PredFormatFunction3916,29168
struct PredFormatFunctor3 {PredFormatFunctor3932,29816
  testing::AssertionResult operator()(const char* e1,operator ()934,29895
class Predicate3Test : public testing::Test {Predicate3Test946,30329
  static bool expected_to_finish_;expected_to_finish_977,31385
  static bool finished_;finished_980,31483
  static int n1_;n1_982,31509
  static int n2_;n2_983,31527
  static int n3_;n3_984,31545
bool Predicate3Test::expected_to_finish_;expected_to_finish_987,31567
bool Predicate3Test::finished_;finished_988,31609
int Predicate3Test::n1_;n1_989,31641
int Predicate3Test::n2_;n2_990,31666
int Predicate3Test::n3_;n3_991,31691
typedef Predicate3Test EXPECT_PRED_FORMAT3Test;EXPECT_PRED_FORMAT3Test993,31717
typedef Predicate3Test ASSERT_PRED_FORMAT3Test;ASSERT_PRED_FORMAT3Test994,31765
typedef Predicate3Test EXPECT_PRED3Test;EXPECT_PRED3Test995,31813
typedef Predicate3Test ASSERT_PRED3Test;ASSERT_PRED3Test996,31854
TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1000,32004
TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeSuccess) {TEST_F1010,32297
TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1020,32600
TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeSuccess) {TEST_F1030,32889
TEST_F(EXPECT_PRED3Test, FunctionOnBuiltInTypeFailure) {TEST_F1040,33185
TEST_F(EXPECT_PRED3Test, FunctionOnUserTypeFailure) {TEST_F1052,33533
TEST_F(EXPECT_PRED3Test, FunctorOnBuiltInTypeFailure) {TEST_F1064,33891
TEST_F(EXPECT_PRED3Test, FunctorOnUserTypeFailure) {TEST_F1076,34235
TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1088,34594
TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeSuccess) {TEST_F1098,34887
TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1108,35190
TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeSuccess) {TEST_F1118,35479
TEST_F(ASSERT_PRED3Test, FunctionOnBuiltInTypeFailure) {TEST_F1128,35775
TEST_F(ASSERT_PRED3Test, FunctionOnUserTypeFailure) {TEST_F1141,36151
TEST_F(ASSERT_PRED3Test, FunctorOnBuiltInTypeFailure) {TEST_F1154,36537
TEST_F(ASSERT_PRED3Test, FunctorOnUserTypeFailure) {TEST_F1167,36909
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1180,37303
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {TEST_F1190,37641
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1200,37988
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {TEST_F1210,38325
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {TEST_F1220,38669
TEST_F(EXPECT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {TEST_F1232,39062
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {TEST_F1244,39464
TEST_F(EXPECT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {TEST_F1256,39856
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeSuccess) {TEST_F1268,40263
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeSuccess) {TEST_F1278,40601
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeSuccess) {TEST_F1288,40948
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeSuccess) {TEST_F1298,41285
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnBuiltInTypeFailure) {TEST_F1308,41629
TEST_F(ASSERT_PRED_FORMAT3Test, FunctionOnUserTypeFailure) {TEST_F1321,42050
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnBuiltInTypeFailure) {TEST_F1334,42480
TEST_F(ASSERT_PRED_FORMAT3Test, FunctorOnUserTypeFailure) {TEST_F1347,42900
bool PredFunction4(T1 v1, T2 v2, T3 v3, T4 v4) {PredFunction41361,43382
bool PredFunction4Int(int v1, int v2, int v3, int v4) {PredFunction4Int1367,43611
bool PredFunction4Bool(Bool v1, Bool v2, Bool v3, Bool v4) {PredFunction4Bool1370,43701
struct PredFunctor4 {PredFunctor41375,43827
  bool operator()(const T1& v1,operator ()1377,43913
testing::AssertionResult PredFormatFunction4(const char* e1,PredFormatFunction41387,44188
struct PredFormatFunctor4 {PredFormatFunctor41405,44978
  testing::AssertionResult operator()(const char* e1,operator ()1407,45070
class Predicate4Test : public testing::Test {Predicate4Test1421,45618
  static bool expected_to_finish_;expected_to_finish_1455,46792
  static bool finished_;finished_1458,46890
  static int n1_;n1_1460,46916
  static int n2_;n2_1461,46934
  static int n3_;n3_1462,46952
  static int n4_;n4_1463,46970
bool Predicate4Test::expected_to_finish_;expected_to_finish_1466,46992
bool Predicate4Test::finished_;finished_1467,47034
int Predicate4Test::n1_;n1_1468,47066
int Predicate4Test::n2_;n2_1469,47091
int Predicate4Test::n3_;n3_1470,47116
int Predicate4Test::n4_;n4_1471,47141
typedef Predicate4Test EXPECT_PRED_FORMAT4Test;EXPECT_PRED_FORMAT4Test1473,47167
typedef Predicate4Test ASSERT_PRED_FORMAT4Test;ASSERT_PRED_FORMAT4Test1474,47215
typedef Predicate4Test EXPECT_PRED4Test;EXPECT_PRED4Test1475,47263
typedef Predicate4Test ASSERT_PRED4Test;ASSERT_PRED4Test1476,47304
TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1480,47454
TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeSuccess) {TEST_F1491,47769
TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1502,48100
TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeSuccess) {TEST_F1513,48411
TEST_F(EXPECT_PRED4Test, FunctionOnBuiltInTypeFailure) {TEST_F1524,48735
TEST_F(EXPECT_PRED4Test, FunctionOnUserTypeFailure) {TEST_F1537,49107
TEST_F(EXPECT_PRED4Test, FunctorOnBuiltInTypeFailure) {TEST_F1550,49495
TEST_F(EXPECT_PRED4Test, FunctorOnUserTypeFailure) {TEST_F1563,49863
TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1576,50252
TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeSuccess) {TEST_F1587,50567
TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1598,50898
TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeSuccess) {TEST_F1609,51209
TEST_F(ASSERT_PRED4Test, FunctionOnBuiltInTypeFailure) {TEST_F1620,51533
TEST_F(ASSERT_PRED4Test, FunctionOnUserTypeFailure) {TEST_F1634,51933
TEST_F(ASSERT_PRED4Test, FunctorOnBuiltInTypeFailure) {TEST_F1648,52349
TEST_F(ASSERT_PRED4Test, FunctorOnUserTypeFailure) {TEST_F1662,52745
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1676,53169
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {TEST_F1687,53536
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1698,53918
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {TEST_F1709,54284
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {TEST_F1720,54663
TEST_F(EXPECT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {TEST_F1733,55087
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {TEST_F1746,55526
TEST_F(EXPECT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {TEST_F1759,55949
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeSuccess) {TEST_F1772,56393
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeSuccess) {TEST_F1783,56760
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeSuccess) {TEST_F1794,57142
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeSuccess) {TEST_F1805,57508
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnBuiltInTypeFailure) {TEST_F1816,57887
TEST_F(ASSERT_PRED_FORMAT4Test, FunctionOnUserTypeFailure) {TEST_F1830,58339
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnBuiltInTypeFailure) {TEST_F1844,58806
TEST_F(ASSERT_PRED_FORMAT4Test, FunctorOnUserTypeFailure) {TEST_F1858,59257
bool PredFunction5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) {PredFunction51873,59789
bool PredFunction5Int(int v1, int v2, int v3, int v4, int v5) {PredFunction5Int1879,60030
bool PredFunction5Bool(Bool v1, Bool v2, Bool v3, Bool v4, Bool v5) {PredFunction5Bool1882,60133
struct PredFunctor5 {PredFunctor51887,60273
  bool operator()(const T1& v1,operator ()1889,60372
testing::AssertionResult PredFormatFunction5(const char* e1,PredFormatFunction51900,60697
struct PredFormatFunctor5 {PredFormatFunctor51920,61631
  testing::AssertionResult operator()(const char* e1,operator ()1922,61736
class Predicate5Test : public testing::Test {Predicate5Test1938,62398
  static bool expected_to_finish_;expected_to_finish_1975,63690
  static bool finished_;finished_1978,63788
  static int n1_;n1_1980,63814
  static int n2_;n2_1981,63832
  static int n3_;n3_1982,63850
  static int n4_;n4_1983,63868
  static int n5_;n5_1984,63886
bool Predicate5Test::expected_to_finish_;expected_to_finish_1987,63908
bool Predicate5Test::finished_;finished_1988,63950
int Predicate5Test::n1_;n1_1989,63982
int Predicate5Test::n2_;n2_1990,64007
int Predicate5Test::n3_;n3_1991,64032
int Predicate5Test::n4_;n4_1992,64057
int Predicate5Test::n5_;n5_1993,64082
typedef Predicate5Test EXPECT_PRED_FORMAT5Test;EXPECT_PRED_FORMAT5Test1995,64108
typedef Predicate5Test ASSERT_PRED_FORMAT5Test;ASSERT_PRED_FORMAT5Test1996,64156
typedef Predicate5Test EXPECT_PRED5Test;EXPECT_PRED5Test1997,64204
typedef Predicate5Test ASSERT_PRED5Test;ASSERT_PRED5Test1998,64245
TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeSuccess) {TEST_F2002,64395
TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeSuccess) {TEST_F2014,64732
TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeSuccess) {TEST_F2026,65091
TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeSuccess) {TEST_F2038,65424
TEST_F(EXPECT_PRED5Test, FunctionOnBuiltInTypeFailure) {TEST_F2050,65776
TEST_F(EXPECT_PRED5Test, FunctionOnUserTypeFailure) {TEST_F2064,66172
TEST_F(EXPECT_PRED5Test, FunctorOnBuiltInTypeFailure) {TEST_F2078,66590
TEST_F(EXPECT_PRED5Test, FunctorOnUserTypeFailure) {TEST_F2092,66982
TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeSuccess) {TEST_F2106,67401
TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeSuccess) {TEST_F2118,67738
TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeSuccess) {TEST_F2130,68097
TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeSuccess) {TEST_F2142,68430
TEST_F(ASSERT_PRED5Test, FunctionOnBuiltInTypeFailure) {TEST_F2154,68782
TEST_F(ASSERT_PRED5Test, FunctionOnUserTypeFailure) {TEST_F2169,69206
TEST_F(ASSERT_PRED5Test, FunctorOnBuiltInTypeFailure) {TEST_F2184,69652
TEST_F(ASSERT_PRED5Test, FunctorOnUserTypeFailure) {TEST_F2199,70072
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {TEST_F2214,70526
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {TEST_F2226,70922
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {TEST_F2238,71339
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {TEST_F2250,71734
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {TEST_F2262,72148
TEST_F(EXPECT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {TEST_F2276,72603
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {TEST_F2290,73079
TEST_F(EXPECT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {TEST_F2304,73533
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeSuccess) {TEST_F2318,74014
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeSuccess) {TEST_F2330,74410
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeSuccess) {TEST_F2342,74827
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeSuccess) {TEST_F2354,75222
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnBuiltInTypeFailure) {TEST_F2366,75636
TEST_F(ASSERT_PRED_FORMAT5Test, FunctionOnUserTypeFailure) {TEST_F2381,76119
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnBuiltInTypeFailure) {TEST_F2396,76623
TEST_F(ASSERT_PRED_FORMAT5Test, FunctorOnUserTypeFailure) {TEST_F2411,77105

test/googletest/googletest/test/googletest-json-outfiles-test.py,672
GTEST_OUTPUT_SUBDIR = 'json_outfiles'GTEST_OUTPUT_SUBDIR38,1678
GTEST_OUTPUT_1_TEST = 'gtest_xml_outfile1_test_'GTEST_OUTPUT_1_TEST39,1716
GTEST_OUTPUT_2_TEST = 'gtest_xml_outfile2_test_'GTEST_OUTPUT_2_TEST40,1765
EXPECTED_1 = {EXPECTED_142,1815
EXPECTED_2 = {EXPECTED_286,2678
class GTestJsonOutFilesTest(gtest_test_utils.TestCase):GTestJsonOutFilesTest131,3542
  def setUp(self):setUp134,3662
  def tearDown(self):tearDown142,4020
  def DeleteFilesAndDir(self):DeleteFilesAndDir145,4072
  def testOutfile1(self):testOutfile1159,4418
  def testOutfile2(self):testOutfile2162,4500
  def _TestOutFile(self, test_name, expected):_TestOutFile165,4582

test/googletest/googletest/test/gtest_prod_test.cc,212
TEST(PrivateCodeTest, CanAccessPrivateMembers) {TEST38,1738
typedef testing::Test PrivateCodeFixtureTest;PrivateCodeFixtureTest46,1866
TEST_F(PrivateCodeFixtureTest, CanAccessPrivateMembers) {TEST_F50,2011

test/googletest/googletest/test/googletest-global-environment-unittest.py,443
def RunAndReturnOutput(args=None):RunAndReturnOutput42,1926
class GTestGlobalEnvironmentUnitTest(gtest_test_utils.TestCase):GTestGlobalEnvironmentUnitTest51,2183
  def testEnvironmentSetUpFails(self):testEnvironmentSetUpFails54,2297
  def testEnvironmentSetUpAndTornDownForEachRepeat(self):testEnvironmentSetUpAndTornDownForEachRepeat71,2853
  def testEnvironmentSetUpAndTornDownOnce(self):testEnvironmentSetUpAndTornDownOnce97,3956

test/googletest/googletest/test/googletest-color-test.py,657
COLOR_ENV_VAR = 'GTEST_COLOR'COLOR_ENV_VAR39,1695
COLOR_FLAG = 'gtest_color'COLOR_FLAG40,1725
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-color-test_')COMMAND41,1752
def SetEnvVar(env_var, value):SetEnvVar44,1829
def UsesColor(term, color_env_var, color_flag):UsesColor53,2051
class GTestColorTest(gtest_test_utils.TestCase):GTestColorTest67,2420
  def testNoEnvVarNoFlag(self):testNoEnvVarNoFlag68,2469
  def testFlagOnly(self):testFlagOnly83,3142
  def testEnvVarOnly(self):testEnvVarOnly94,3584
  def testEnvVarAndFlag(self):testEnvVarAndFlag105,4039
  def testAliasesOfYesAndNo(self):testAliasesOfYesAndNo112,4313

test/googletest/googletest/test/googletest-param-test-test.cc,11127
::std::string PrintValue(const T& value) {PrintValue70,2705
void VerifyGenerator(const ParamGenerator<T>& generator,VerifyGenerator78,2976
void VerifyGeneratorIsEmpty(const ParamGenerator<T>& generator) {VerifyGeneratorIsEmpty120,4798
TEST(IteratorTest, ParamIteratorConformsToForwardIteratorConcept) {TEST137,5522
TEST(RangeTest, IntRangeWithDefaultStep) {TEST172,6892
TEST(RangeTest, IntRangeSingleValue) {TEST180,7203
TEST(RangeTest, IntRangeEmpty) {TEST188,7471
TEST(RangeTest, IntRangeWithCustomStep) {TEST195,7679
TEST(RangeTest, IntRangeWithCustomStepOverUpperBound) {TEST205,8098
class DogAdder {DogAdder213,8417
  explicit DogAdder(const char* a_value) : value_(a_value) {}DogAdder215,8443
  DogAdder(const DogAdder& other) : value_(other.value_.c_str()) {}DogAdder216,8505
  DogAdder operator=(const DogAdder& other) {operator =218,8574
  DogAdder operator+(const DogAdder& other) const {operator +223,8695
  bool operator<(const DogAdder& other) const {operator <228,8865
  const std::string& value() const { return value_; }value231,8951
  std::string value_;value_234,9016
TEST(RangeTest, WorksWithACustomType) {TEST237,9042
class IntWrapper {IntWrapper251,9445
  explicit IntWrapper(int a_value) : value_(a_value) {}IntWrapper253,9473
  IntWrapper(const IntWrapper& other) : value_(other.value_) {}IntWrapper254,9529
  IntWrapper operator=(const IntWrapper& other) {operator =256,9594
  IntWrapper operator+(int other) const { return IntWrapper(value_ + other); }operator +261,9733
  bool operator<(const IntWrapper& other) const {operator <262,9812
  int value() const { return value_; }value265,9900
  int value_;value_268,9950
TEST(RangeTest, WorksWithACustomTypeWithDifferentIncrementType) {TEST271,9968
TEST(ValuesInTest, ValuesInArray) {TEST286,10420
TEST(ValuesInTest, ValuesInConstArray) {TEST294,10658
TEST(ValuesInTest, ValuesInSingleElementArray) {TEST302,10947
TEST(ValuesInTest, ValuesInVector) {TEST310,11194
TEST(ValuesInTest, ValuesInIteratorRange) {TEST323,11566
TEST(ValuesInTest, ValuesInSingleElementIteratorRange) {TEST337,12043
TEST(ValuesInTest, ValuesInEmptyIteratorRange) {TEST349,12455
TEST(ValuesTest, ValuesWorks) {TEST358,12741
TEST(ValuesTest, ValuesWorksForValuesOfCompatibleTypes) {TEST367,13052
TEST(ValuesTest, ValuesWorksForMaxLengthList) {TEST374,13266
TEST(ValuesTest, ValuesWithSingleParameter) {TEST393,14084
TEST(BoolTest, BoolWorks) {TEST401,14314
TEST(CombineTest, CombineWithTwoParameters) {TEST409,14555
TEST(CombineTest, CombineWithThreeParameters) {TEST422,15052
TEST(CombineTest, CombineWithFirstParameterSingleValue) {TEST436,15767
TEST(CombineTest, CombineWithSecondParameterSingleValue) {TEST448,16326
TEST(CombineTest, CombineWithFirstParameterEmptyRange) {TEST459,16773
TEST(CombineTest, CombineWithSecondParameterEmptyRange) {TEST467,17072
TEST(CombineTest, CombineWithMaxNumberOfParameters) {TEST475,17379
class NonDefaultConstructAssignString {NonDefaultConstructAssignString490,18023
  NonDefaultConstructAssignString(const std::string& s) : str_(s) {}NonDefaultConstructAssignString492,18072
  const std::string& str() const { return str_; }str500,18429
  std::string str_;str_503,18490
TEST(CombineTest, NonDefaultConstructAssign) {TEST506,18514
TEST(ParamGeneratorTest, AssignmentWorks) {TEST536,19370
class TestGenerationEnvironment : public ::testing::Environment {TestGenerationEnvironment555,20162
  static TestGenerationEnvironment* Instance() {Instance557,20237
  void FixtureConstructorExecuted() { fixture_constructor_count_++; }FixtureConstructorExecuted562,20392
  void SetUpExecuted() { set_up_count_++; }SetUpExecuted563,20462
  void TearDownExecuted() { tear_down_count_++; }TearDownExecuted564,20506
  void TestBodyExecuted() { test_body_count_++; }TestBodyExecuted565,20556
  TestGenerationEnvironment() : fixture_constructor_count_(0), set_up_count_(0),TestGenerationEnvironment598,21823
  int fixture_constructor_count_;fixture_constructor_count_601,21981
  int set_up_count_;set_up_count_602,22015
  int tear_down_count_;tear_down_count_603,22036
  int test_body_count_;test_body_count_604,22060
const int test_generation_params[] = {36, 42, 72};test_generation_params609,22151
class TestGenerationTest : public TestWithParam<int> {TestGenerationTest611,22203
    PARAMETER_COUNT =PARAMETER_COUNT614,22276
  typedef TestGenerationEnvironment<PARAMETER_COUNT> Environment;Environment618,22377
  TestGenerationTest() {TestGenerationTest620,22444
  static void SetUpTestSuite() {SetUpTestSuite633,22822
  static void TearDownTestSuite() {TearDownTestSuite654,23633
  int current_parameter_;current_parameter_667,24178
  static vector<int> collected_parameters_;collected_parameters_668,24204
vector<int> TestGenerationTest::collected_parameters_;collected_parameters_673,24317
TEST_P(TestGenerationTest, TestsExpandedAndRun) {TEST_P675,24373
class GeneratorEvaluationTest : public TestWithParam<int> {GeneratorEvaluationTest693,25339
  static int param_value() { return param_value_; }param_value695,25408
  static void set_param_value(int param_value) { param_value_ = param_value; }set_param_value696,25460
  static int param_value_;param_value_699,25550
int GeneratorEvaluationTest::param_value_ = 0;param_value_701,25580
TEST_P(GeneratorEvaluationTest, GeneratorsEvaluatedInMain) {TEST_P703,25628
class ExternalGeneratorTest : public TestWithParam<int> {};ExternalGeneratorTest712,26044
TEST_P(ExternalGeneratorTest, ExternalGenerator) {TEST_P713,26104
TEST_P(ExternalInstantiationTest, IsMultipleOf33) {TEST_P725,26648
class MultipleInstantiationTest : public TestWithParam<int> {};MultipleInstantiationTest731,26825
TEST_P(MultipleInstantiationTest, AllowsMultipleInstances) {TEST_P732,26889
TEST_P(InstantiationInMultipleTranslationUnitsTest, IsMultipleOf42) {TEST_P742,27378
class SeparateInstanceTest : public TestWithParam<int> {SeparateInstanceTest750,27697
  SeparateInstanceTest() : count_(0) {}SeparateInstanceTest752,27763
  static void TearDownTestSuite() {TearDownTestSuite754,27804
  int count_;count_763,28138
  static int global_count_;global_count_764,28152
int SeparateInstanceTest::global_count_ = 0;global_count_766,28183
TEST_P(SeparateInstanceTest, TestsRunInSeparateInstances) {TEST_P768,28229
class NamingTest : public TestWithParam<int> {};NamingTest779,28770
TEST_P(NamingTest, TestsReportCorrectNamesAndParameters) {TEST_P781,28820
class MacroNamingTest : public TestWithParam<int> {};MacroNamingTest797,29447
#define PREFIX_WITH_FOO(PREFIX_WITH_FOO799,29502
#define PREFIX_WITH_MACRO(PREFIX_WITH_MACRO800,29552
TEST_P(PREFIX_WITH_MACRO(NamingTest), PREFIX_WITH_FOO(SomeTestName)) {PREFIX_WITH_FOO802,29607
class MacroNamingTestNonParametrized : public ::testing::Test {};MacroNamingTestNonParametrized813,30039
       PREFIX_WITH_FOO(SomeTestName)) {PREFIX_WITH_FOO816,30159
TEST(MacroNameing, LookupNames) {TEST824,30446
class CustomFunctorNamingTest : public TestWithParam<std::string> {};CustomFunctorNamingTest858,31735
TEST_P(CustomFunctorNamingTest, CustomTestNames) {}TEST_P859,31805
struct CustomParamNameFunctor {CustomParamNameFunctor861,31858
  std::string operator()(const ::testing::TestParamInfo<std::string>& inf) {operator ()862,31890
inline std::string CustomParamNameFunction(CustomParamNameFunction876,32451
class CustomFunctionNamingTest : public TestWithParam<std::string> {};CustomFunctionNamingTest881,32574
TEST_P(CustomFunctionNamingTest, CustomTestNames) {}TEST_P882,32645
class CustomLambdaNamingTest : public TestWithParam<std::string> {};CustomLambdaNamingTest894,33119
TEST_P(CustomLambdaNamingTest, CustomTestNames) {}TEST_P895,33188
TEST(CustomNamingTest, CheckNameRegistry) {TEST903,33527
class CustomIntegerNamingTest : public TestWithParam<int> {};CustomIntegerNamingTest923,34439
TEST_P(CustomIntegerNamingTest, TestsReportCorrectNames) {TEST_P925,34502
struct CustomStruct {CustomStruct938,35025
  explicit CustomStruct(int value) : x(value) {}CustomStruct939,35047
  int x;x940,35096
std::ostream& operator<<(std::ostream& stream, const CustomStruct& val) {operator <<943,35109
class CustomStructNamingTest : public TestWithParam<CustomStruct> {};CustomStructNamingTest948,35222
TEST_P(CustomStructNamingTest, TestsReportCorrectNames) {TEST_P950,35293
struct StatefulNamingFunctor {StatefulNamingFunctor964,35899
  StatefulNamingFunctor() : sum(0) {}StatefulNamingFunctor965,35930
  std::string operator()(const ::testing::TestParamInfo<int>& info) {operator ()966,35968
  int sum;sum971,36143
class StatefulNamingTest : public ::testing::TestWithParam<int> {StatefulNamingTest974,36158
  StatefulNamingTest() : sum_(0) {}StatefulNamingTest976,36236
  int sum_;sum_977,36272
TEST_P(StatefulNamingTest, TestsReportCorrectNames) {TEST_P980,36288
class Unstreamable {Unstreamable996,37009
  explicit Unstreamable(int value) : value_(value) {}Unstreamable998,37039
  const int& dummy_value() const { return value_; }dummy_value1000,37151
  int value_;value_1003,37214
class CommentTest : public TestWithParam<Unstreamable> {};CommentTest1006,37232
TEST_P(CommentTest, TestsCorrectlyReportUnstreamableParams) {TEST_P1008,37292
class NonParameterizedBaseTest : public ::testing::Test {NonParameterizedBaseTest1022,37917
  NonParameterizedBaseTest() : n_(17) { }NonParameterizedBaseTest1024,37984
  int n_;n_1026,38038
class ParameterizedDerivedTest : public NonParameterizedBaseTest,ParameterizedDerivedTest1029,38052
  ParameterizedDerivedTest() : count_(0) { }ParameterizedDerivedTest1032,38207
  int count_;count_1033,38252
  static int global_count_;global_count_1034,38266
int ParameterizedDerivedTest::global_count_ = 0;global_count_1037,38298
TEST_F(NonParameterizedBaseTest, FixtureIsInitialized) {TEST_F1039,38348
TEST_P(ParameterizedDerivedTest, SeesSequence) {TEST_P1043,38429
class ParameterizedDeathTest : public ::testing::TestWithParam<int> { };ParameterizedDeathTest1049,38570
TEST_F(ParameterizedDeathTest, GetParamDiesFromTestF) {TEST_F1051,38644
enum MyEnums {MyEnums1060,38958
  ENUM1 = 1,ENUM11061,38973
  ENUM2 = 3,ENUM21062,38986
  ENUM3 = 8,ENUM31063,38999
class MyEnumTest : public testing::TestWithParam<MyEnums> {};MyEnumTest1066,39016
TEST_P(MyEnumTest, ChecksParamMoreThanZero) { EXPECT_GE(10, GetParam()); }TEST_P1068,39079
namespace works_here {works_here1072,39267
class NotUsedTest : public testing::TestWithParam<int> {};NotUsedTest1074,39340
class NotUsedTypeTest : public testing::Test {};NotUsedTypeTest1079,39480
class NotInstantiatedTest : public testing::TestWithParam<int> {};NotInstantiatedTest1083,39621
TEST_P(NotInstantiatedTest, Used) { }TEST_P1087,39787
TEST_P(OtherName, Used) { }TEST_P1091,39923
class NotInstantiatedTypeTest : public testing::Test {};NotInstantiatedTypeTest1095,40028
TYPED_TEST_P(NotInstantiatedTypeTest, Used) { }TYPED_TEST_P1100,40233
int main(int argc, char **argv) {main1104,40369

test/googletest/googletest/test/googletest-list-tests-unittest.py,612
LIST_TESTS_FLAG = 'gtest_list_tests'LIST_TESTS_FLAG46,1961
EXE_PATH = gtest_test_utils.GetTestExecutablePath('googletest-list-tests-unittest_')EXE_PATH49,2054
def Run(args):Run114,3463
class GTestListTestsUnitTest(gtest_test_utils.TestCase):GTestListTestsUnitTest124,3706
  def RunAndVerify(self, flag_value, expected_output_re, other_flag):RunAndVerify127,3831
  def testDefaultBehavior(self):testDefaultBehavior171,5338
  def testFlag(self):testFlag178,5548
  def testOverrideNonFilterFlags(self):testOverrideNonFilterFlags188,5895
  def testWithFilterFlags(self):testWithFilterFlags195,6179

test/googletest/googletest/test/production.h,230
#define GOOGLETEST_TEST_PRODUCTION_H_GOOGLETEST_TEST_PRODUCTION_H_34,1650
class PrivateCode {PrivateCode38,1720
  int x() const { return x_; }x48,1996
  void set_x(int an_x) { x_ = an_x; }set_x50,2037
  int x_;x_51,2075

test/googletest/googletest/test/googletest-setuptestsuite-test_.cc,379
class SetupFailTest : public ::testing::Test {SetupFailTest33,1584
  static void SetUpTestSuite() {SetUpTestSuite35,1643
TEST_F(SetupFailTest, NoopPassingTest) {}TEST_F40,1718
class TearDownFailTest : public ::testing::Test {TearDownFailTest42,1761
  static void TearDownTestSuite() {TearDownTestSuite44,1823
TEST_F(TearDownFailTest, NoopPassingTest) {}TEST_F49,1904

test/googletest/googletest/test/gtest_help_test.py,1753
PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('gtest_help_test_')PROGRAM_PATH50,2047
FLAG_PREFIX = '--gtest_'FLAG_PREFIX51,2121
DEATH_TEST_STYLE_FLAG = FLAG_PREFIX + 'death_test_style'DEATH_TEST_STYLE_FLAG52,2146
STREAM_RESULT_TO_FLAG = FLAG_PREFIX + 'stream_result_to'STREAM_RESULT_TO_FLAG53,2203
UNKNOWN_FLAG = FLAG_PREFIX + 'unknown_flag_for_testing'UNKNOWN_FLAG54,2260
LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'LIST_TESTS_FLAG55,2316
INCORRECT_FLAG_VARIANTS = [re.sub('^--', '-', LIST_TESTS_FLAG),INCORRECT_FLAG_VARIANTS56,2361
INTERNAL_FLAG_FOR_TESTING = FLAG_PREFIX + 'internal_flag_for_testing'INTERNAL_FLAG_FOR_TESTING59,2551
SUPPORTS_DEATH_TESTS = "DeathTest" in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS61,2622
HELP_REGEX = re.compile(HELP_REGEX65,2776
def RunWithFlag(flag):RunWithFlag82,3299
class GTestHelpTest(gtest_test_utils.TestCase):GTestHelpTest99,3696
  def TestHelpFlag(self, flag):TestHelpFlag102,3801
  def TestNonHelpFlag(self, flag):TestNonHelpFlag126,4568
  def testPrintsHelpWithFullFlag(self):testPrintsHelpWithFullFlag140,4981
  def testPrintsHelpWithShortFlag(self):testPrintsHelpWithShortFlag143,5054
  def testPrintsHelpWithQuestionFlag(self):testPrintsHelpWithQuestionFlag146,5124
  def testPrintsHelpWithWindowsStyleQuestionFlag(self):testPrintsHelpWithWindowsStyleQuestionFlag149,5197
  def testPrintsHelpWithUnrecognizedGoogleTestFlag(self):testPrintsHelpWithUnrecognizedGoogleTestFlag152,5282
  def testPrintsHelpWithIncorrectFlagStyle(self):testPrintsHelpWithIncorrectFlagStyle155,5377
  def testRunsTestsWithoutHelpFlag(self):testRunsTestsWithoutHelpFlag159,5519
  def testRunsTestsWithGtestInternalFlag(self):testRunsTestsWithGtestInternalFlag165,5709

test/googletest/googletest/test/googletest-catch-exceptions-test.py,2136
FLAG_PREFIX = '--gtest_'FLAG_PREFIX41,1805
LIST_TESTS_FLAG = FLAG_PREFIX + 'list_tests'LIST_TESTS_FLAG42,1830
FILTER_FLAG = FLAG_PREFIX + 'filter'FILTER_FLAG44,1937
EX_EXE_PATH = gtest_test_utils.GetTestExecutablePath(EX_EXE_PATH48,2070
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH53,2262
environ = gtest_test_utils.environenviron56,2361
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar57,2396
TEST_LIST = gtest_test_utils.Subprocess(TEST_LIST66,2769
SUPPORTS_SEH_EXCEPTIONS = 'ThrowsSehException' in TEST_LISTSUPPORTS_SEH_EXCEPTIONS69,2864
  BINARY_OUTPUT = gtest_test_utils.Subprocess([EXE_PATH], env=environ).outputBINARY_OUTPUT72,2953
EX_BINARY_OUTPUT = gtest_test_utils.Subprocess(EX_BINARY_OUTPUT74,3032
  class CatchSehExceptionsTest(gtest_test_utils.TestCase):CatchSehExceptionsTest81,3191
    def TestSehExceptions(self, test_output):TestSehExceptions85,3297
    def testCatchesSehExceptionsWithCxxExceptionsEnabled(self):testCatchesSehExceptionsWithCxxExceptionsEnabled103,4186
    def testCatchesSehExceptionsWithCxxExceptionsDisabled(self):testCatchesSehExceptionsWithCxxExceptionsDisabled106,4298
class CatchCxxExceptionsTest(gtest_test_utils.TestCase):CatchCxxExceptionsTest110,4409
  def testCatchesCxxExceptionsInFixtureConstructor(self):testCatchesCxxExceptionsInFixtureConstructor119,4730
    def testCatchesCxxExceptionsInFixtureDestructor(self):testCatchesCxxExceptionsInFixtureDestructor133,5338
  def testCatchesCxxExceptionsInSetUpTestCase(self):testCatchesCxxExceptionsInSetUpTestCase143,5762
  def testCatchesCxxExceptionsInTearDownTestCase(self):testCatchesCxxExceptionsInTearDownTestCase166,6861
  def testCatchesCxxExceptionsInSetUp(self):testCatchesCxxExceptionsInSetUp171,7085
  def testCatchesCxxExceptionsInTearDown(self):testCatchesCxxExceptionsInTearDown189,7956
  def testCatchesCxxExceptionsInTestBody(self):testCatchesCxxExceptionsInTestBody200,8451
  def testCatchesNonStdCxxExceptions(self):testCatchesNonStdCxxExceptions214,9089
  def testUnhandledCxxExceptionsAbortTheProgram(self):testUnhandledCxxExceptionsAbortTheProgram219,9258

test/googletest/googletest/test/googletest-options-test.cc,1218
namespace testing {testing52,2140
namespace internal {internal53,2160
FilePath GetAbsolutePathOf(const FilePath& relative_path) {GetAbsolutePathOf57,2250
TEST(XmlOutputTest, GetOutputFormatDefault) {TEST63,2447
TEST(XmlOutputTest, GetOutputFormat) {TEST68,2590
TEST(XmlOutputTest, GetOutputFileDefault) {TEST73,2741
TEST(XmlOutputTest, GetOutputFileSingleFile) {TEST79,2948
TEST(XmlOutputTest, GetOutputFileFromDirectoryPath) {TEST85,3171
TEST(OutputFileHelpersTest, GetCurrentExecutableName) {TEST100,3735
class XmlOutputChangeDirTest : public Test {XmlOutputChangeDirTest129,4829
  FilePath original_working_dir_;original_working_dir_143,5253
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefault) {TEST_F146,5291
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithDefaultXML) {TEST_F153,5587
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativeFile) {TEST_F160,5889
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithRelativePath) {TEST_F167,6203
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsoluteFile) {TEST_F183,6827
TEST_F(XmlOutputChangeDirTest, PreserveOriginalWorkingDirWithAbsolutePath) {TEST_F195,7277

test/googletest/googletest/test/googletest-death-test-test.cc,10839
namespace testing {testing76,2658
namespace internal {internal77,2678
class ReplaceDeathTestFactory {ReplaceDeathTestFactory81,2819
  explicit ReplaceDeathTestFactory(DeathTestFactory* new_factory)ReplaceDeathTestFactory83,2860
  ~ReplaceDeathTestFactory() {~ReplaceDeathTestFactory89,3104
  UnitTestImpl* unit_test_impl_;unit_test_impl_98,3428
  DeathTestFactory* old_factory_;old_factory_99,3461
void DieWithMessage(const ::std::string& message) {DieWithMessage107,3562
void DieInside(const ::std::string& function) {DieInside123,4201
class TestForDeathTest : public testing::Test {TestForDeathTest129,4339
  TestForDeathTest() : original_dir_(FilePath::GetCurrentDir()) {}TestForDeathTest131,4399
  static void StaticMemberFunction() { DieInside("StaticMemberFunction"); }StaticMemberFunction136,4594
  void MemberFunction() {MemberFunction139,4719
  bool should_die_;should_die_145,4860
  const FilePath original_dir_;original_dir_146,4880
class MayDie {MayDie150,4964
  explicit MayDie(bool should_die) : should_die_(should_die) {}MayDie152,4988
  void MemberFunction() const {MemberFunction155,5090
  bool should_die_;should_die_162,5255
void GlobalFunction() { DieInside("GlobalFunction"); }GlobalFunction166,5324
int NonVoidFunction() {NonVoidFunction169,5427
void DieIf(bool should_die) {DieIf175,5532
bool DieIfLessThan(int x, int y) {DieIfLessThan181,5642
void DeathTestSubroutine() {DeathTestSubroutine189,5826
int DieInDebugElse12(int* sideeffect) {DieInDebugElse12195,6002
int DieInCRTDebugElse12(int* sideeffect) {DieInCRTDebugElse12210,6252
TEST(ExitStatusPredicateTest, ExitedWithCode) {TEST230,6716
static int NormalExitStatus(int exit_code) {NormalExitStatus245,7313
static int KilledExitStatus(int signum) {KilledExitStatus260,7795
TEST(ExitStatusPredicateTest, ExitedWithCode) {TEST272,8033
TEST(ExitStatusPredicateTest, KilledBySignal) {TEST288,8582
TEST_F(TestForDeathTest, SingleStatement) {TEST_F311,9491
void DieWithEmbeddedNul() {DieWithEmbeddedNul337,10078
TEST_F(TestForDeathTest, EmbeddedNulInMessage) {TEST_F345,10293
TEST_F(TestForDeathTest, SwitchStatement) {TEST_F354,10579
TEST_F(TestForDeathTest, StaticMemberFunctionFastStyle) {TEST_F372,11102
TEST_F(TestForDeathTest, MemberFunctionFastStyle) {TEST_F379,11358
void ChangeToRootDir() { posix::ChDir(GTEST_PATH_SEP_); }ChangeToRootDir385,11539
TEST_F(TestForDeathTest, FastDeathTestInChangedDir) {TEST_F389,11680
void SigprofAction(int, siginfo_t*, void*) { /* no op */ }SigprofAction400,11932
void SetSigprofActionAndTimer() {SetSigprofActionAndTimer403,12054
void DisableSigprofActionAndTimer(struct sigaction* old_signal_action) {DisableSigprofActionAndTimer420,12775
TEST_F(TestForDeathTest, FastSigprofActionSet) {TEST_F434,13342
TEST_F(TestForDeathTest, ThreadSafeSigprofActionSet) {TEST_F443,13652
TEST_F(TestForDeathTest, StaticMemberFunctionThreadsafeStyle) {TEST_F455,14079
TEST_F(TestForDeathTest, MemberFunctionThreadsafeStyle) {TEST_F460,14259
TEST_F(TestForDeathTest, ThreadsafeDeathTestInLoop) {TEST_F466,14452
TEST_F(TestForDeathTest, ThreadsafeDeathTestInChangedDir) {TEST_F473,14666
TEST_F(TestForDeathTest, MixedStyles) {TEST_F483,14910
bool pthread_flag;pthread_flag492,15150
void SetPthreadFlag() {SetPthreadFlag494,15170
TEST_F(TestForDeathTest, DoesNotExecuteAtforkHooks) {TEST_F498,15220
TEST_F(TestForDeathTest, MethodOfAnotherClass) {TEST_F511,15657
TEST_F(TestForDeathTest, GlobalFunction) {TEST_F517,15860
TEST_F(TestForDeathTest, AcceptsAnythingConvertibleToRE) {TEST_F523,16050
TEST_F(TestForDeathTest, NonVoidFunction) {TEST_F543,16730
TEST_F(TestForDeathTest, FunctionWithParameter) {TEST_F548,16907
TEST_F(TestForDeathTest, OutsideFixture) {TEST_F554,17138
TEST_F(TestForDeathTest, InsideLoop) {TEST_F559,17262
TEST_F(TestForDeathTest, CompoundStatement) {TEST_F566,17483
TEST_F(TestForDeathTest, DoesNotDie) {TEST_F576,17721
TEST_F(TestForDeathTest, ErrorMessageMismatch) {TEST_F582,17942
void ExpectDeathTestHelper(bool* aborted) {ExpectDeathTestHelper590,18258
TEST_F(TestForDeathTest, EXPECT_DEATH) {TEST_F597,18477
TEST_F(TestForDeathTest, ASSERT_DEATH) {TEST_F605,18731
TEST_F(TestForDeathTest, SingleEvaluation) {TEST_F616,19060
TEST_F(TestForDeathTest, RunawayIsFailure) {TEST_F627,19374
TEST_F(TestForDeathTest, ReturnIsFailure) {TEST_F634,19620
TEST_F(TestForDeathTest, TestExpectDebugDeath) {TEST_F646,20020
TEST_F(TestForDeathTest, CRTDebugDeath) {TEST_F678,20913
TEST_F(TestForDeathTest, TestAssertDebugDeath) {TEST_F710,21743
void ExpectDebugDeathHelper(bool* aborted) {ExpectDebugDeathHelper731,22190
TEST(PopUpDeathTest, DoesNotShowPopUpOnAbort) {TEST738,22365
TEST_F(TestForDeathTest, ExpectDebugDeathDoesNotAbort) {TEST_F754,22752
void AssertDebugDeathHelper(bool* aborted) {AssertDebugDeathHelper760,22925
TEST_F(TestForDeathTest, AssertDebugDeathAborts) {TEST_F771,23311
TEST_F(TestForDeathTest, AssertDebugDeathAborts2) {TEST_F778,23493
TEST_F(TestForDeathTest, AssertDebugDeathAborts3) {TEST_F785,23676
TEST_F(TestForDeathTest, AssertDebugDeathAborts4) {TEST_F792,23859
TEST_F(TestForDeathTest, AssertDebugDeathAborts5) {TEST_F799,24042
TEST_F(TestForDeathTest, AssertDebugDeathAborts6) {TEST_F806,24225
TEST_F(TestForDeathTest, AssertDebugDeathAborts7) {TEST_F813,24408
TEST_F(TestForDeathTest, AssertDebugDeathAborts8) {TEST_F820,24591
TEST_F(TestForDeathTest, AssertDebugDeathAborts9) {TEST_F827,24774
TEST_F(TestForDeathTest, AssertDebugDeathAborts10) {TEST_F834,24957
static void TestExitMacros() {TestExitMacros844,25231
TEST_F(TestForDeathTest, ExitMacros) {TEST_F874,26259
TEST_F(TestForDeathTest, ExitMacrosUsingFork) {TEST_F878,26321
TEST_F(TestForDeathTest, InvalidStyle) {TEST_F883,26437
TEST_F(TestForDeathTest, DeathTestFailedOutput) {TEST_F890,26664
TEST_F(TestForDeathTest, DeathTestUnexpectedReturnOutput) {TEST_F899,26927
TEST_F(TestForDeathTest, DeathTestBadExitCodeOutput) {TEST_F912,27297
TEST_F(TestForDeathTest, DeathTestMultiLineMatchFail) {TEST_F924,27741
TEST_F(TestForDeathTest, DeathTestMultiLineMatchPass) {TEST_F935,28093
class MockDeathTestFactory : public DeathTestFactory {MockDeathTestFactory942,28350
              int line, DeathTest** test) override;override947,28555
  int AssumeRoleCalls() const { return assume_role_calls_; }AssumeRoleCalls954,28789
  int WaitCalls() const { return wait_calls_; }WaitCalls955,28850
  size_t PassedCalls() const { return passed_args_.size(); }PassedCalls956,28898
  bool PassedArgument(int n) const {PassedArgument957,28959
  size_t AbortCalls() const { return abort_args_.size(); }AbortCalls960,29049
  DeathTest::AbortReason AbortArgument(int n) const {AbortArgument961,29108
  bool TestDeleted() const { return test_deleted_; }TestDeleted964,29214
  bool create_;create_970,29390
  DeathTest::TestRole role_;role_972,29477
  int status_;status_974,29571
  bool passed_;passed_976,29653
  int assume_role_calls_;assume_role_calls_979,29714
  int wait_calls_;wait_calls_981,29778
  std::vector<bool> passed_args_;passed_args_984,29882
  std::vector<DeathTest::AbortReason> abort_args_;abort_args_987,30000
  bool test_deleted_;test_deleted_990,30129
class MockDeathTest : public DeathTest {MockDeathTest998,30377
  MockDeathTest(MockDeathTestFactory *parent,MockDeathTest1000,30427
  MockDeathTestFactory* const parent_;parent_1022,31063
  const TestRole role_;role_1023,31102
  const int status_;status_1024,31126
  const bool passed_;passed_1025,31147
MockDeathTestFactory::MockDeathTestFactory()MockDeathTestFactory1030,31211
void MockDeathTestFactory::SetParameters(bool create,SetParameters1043,31508
bool MockDeathTestFactory::Create(Create1061,32069
class MacroLogicDeathTest : public testing::Test {MacroLogicDeathTest1076,32564
  static testing::internal::ReplaceDeathTestFactory* replacer_;replacer_1078,32627
  static MockDeathTestFactory* factory_;factory_1079,32691
  static void SetUpTestSuite() {SetUpTestSuite1081,32733
  static void TearDownTestSuite() {TearDownTestSuite1086,32886
  static void RunReturningDeathTest(bool* flag) {RunReturningDeathTest1096,33231
testing::internal::ReplaceDeathTestFactory* MacroLogicDeathTest::replacer_ =replacer_1104,33365
MockDeathTestFactory* MacroLogicDeathTest::factory_ = nullptr;factory_1106,33455
TEST_F(MacroLogicDeathTest, NothingHappens) {TEST_F1109,33593
TEST_F(MacroLogicDeathTest, ChildExitsSuccessfully) {TEST_F1124,34162
TEST_F(MacroLogicDeathTest, ChildExitsUnsuccessfully) {TEST_F1139,34735
TEST_F(MacroLogicDeathTest, ChildPerformsReturn) {TEST_F1155,35347
TEST_F(MacroLogicDeathTest, ChildDoesNotDie) {TEST_F1171,35955
TEST(SuccessRegistrationDeathTest, NoSuccessPart) {TEST1194,36922
TEST(StreamingAssertionsDeathTest, DeathTest) {TEST1199,37085
TEST(GetLastErrnoDescription, GetLastErrnoDescriptionWorks) {TEST1212,37611
TEST(AutoHandleTest, AutoHandleWorks) {TEST1220,37839
typedef unsigned __int64 BiggestParsable;BiggestParsable1247,38858
typedef signed __int64 BiggestSignedParsable;BiggestSignedParsable1248,38900
typedef unsigned long long BiggestParsable;BiggestParsable1250,38953
typedef signed long long BiggestSignedParsable;BiggestSignedParsable1251,38997
const BiggestParsable kBiggestParsableMax = ULLONG_MAX;kBiggestParsableMax1256,39184
const BiggestSignedParsable kBiggestSignedParsableMax = LLONG_MAX;kBiggestSignedParsableMax1257,39240
TEST(ParseNaturalNumberTest, RejectsInvalidFormat) {TEST1259,39308
TEST(ParseNaturalNumberTest, RejectsOverflownNumbers) {TEST1276,39786
TEST(ParseNaturalNumberTest, AcceptsValidNumbers) {TEST1286,40050
TEST(ParseNaturalNumberTest, AcceptsTypeLimits) {TEST1303,40440
TEST(ParseNaturalNumberTest, WorksForShorterIntegers) {TEST1333,41226
TEST(EnvironmentTest, HandleFitsIntoSizeT) {TEST1344,41541
TEST(ConditionalDeathMacrosDeathTest, ExpectsDeathWhenDeathTestsAvailable) {TEST1351,41799
TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInFastStyle) {TEST1362,42348
TEST(InDeathTestChildDeathTest, ReportsDeathTestCorrectlyInThreadSafeStyle) {TEST1372,42634
void DieWithMessage(const char* message) {DieWithMessage1382,42932
TEST(MatcherDeathTest, DoesNotBreakBareRegexMatching) {TEST1388,43094
TEST(MatcherDeathTest, MonomorphicMatcherMatches) {TEST1398,43427
TEST(MatcherDeathTest, MonomorphicMatcherDoesNotMatch) {TEST1403,43612
TEST(MatcherDeathTest, PolymorphicMatcherMatches) {TEST1411,43910
TEST(MatcherDeathTest, PolymorphicMatcherDoesNotMatch) {TEST1416,44070
TEST(ConditionalDeathMacrosSyntaxDeathTest, SingleStatement) {TEST1495,46776
TEST(ConditionalDeathMacrosSyntaxDeathTest, SwitchStatement) {TEST1521,47541
TEST(NotADeathTest, Test) {TEST1540,48120

test/googletest/googletest/test/googletest-uninitialized-test.py,405
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-uninitialized-test_')COMMAND36,1657
def Assert(condition):Assert39,1742
def AssertEq(expected, actual):AssertEq44,1812
def TestExitCodeAndOutput(command):TestExitCodeAndOutput51,1974
class GTestUninitializedTest(gtest_test_utils.TestCase):GTestUninitializedTest61,2292
  def testExitCodeAndOutput(self):testExitCodeAndOutput62,2349

test/googletest/googletest/test/googletest-printers-test.cc,16020
enum AnonymousEnum {AnonymousEnum59,2153
  kAE1 = -1,kAE160,2174
  kAE2 = 1kAE261,2187
enum EnumWithoutPrinter {EnumWithoutPrinter65,2245
  kEWP1 = -2,kEWP166,2271
  kEWP2 = 42kEWP267,2285
enum EnumWithStreaming {EnumWithStreaming71,2333
  kEWS1 = 10kEWS172,2358
std::ostream& operator<<(std::ostream& os, EnumWithStreaming e) {operator <<75,2375
enum EnumWithPrintTo {EnumWithPrintTo80,2533
  kEWPT1 = 1kEWPT181,2556
void PrintTo(EnumWithPrintTo e, std::ostream* os) {PrintTo84,2573
class BiggestIntConvertible {BiggestIntConvertible89,2724
  operator ::testing::internal::BiggestInt() const { return 42; }BiggestInt91,2763
class ParentClass {};ParentClass96,2932
class ChildClassWithStreamOperator : public ParentClass {};ChildClassWithStreamOperator97,2954
class ChildClassWithoutStreamOperator : public ParentClass {};ChildClassWithoutStreamOperator98,3014
static void operator<<(std::ostream& os, const ParentClass&) {operator <<99,3077
static void operator<<(std::ostream& os, const ChildClassWithStreamOperator&) {operator <<102,3165
class UnprintableTemplateInGlobal {UnprintableTemplateInGlobal108,3380
  UnprintableTemplateInGlobal() : value_() {}UnprintableTemplateInGlobal110,3425
  T value_;value_112,3481
class StreamableInGlobal {StreamableInGlobal116,3556
  virtual ~StreamableInGlobal() {}~StreamableInGlobal118,3592
inline void operator<<(::std::ostream& os, const StreamableInGlobal& /* x */) {operator <<121,3631
void operator<<(::std::ostream& os, const StreamableInGlobal* /* x */) {operator <<125,3744
namespace foo {foo129,3851
class UnprintableInFoo {UnprintableInFoo132,3924
  UnprintableInFoo() : z_(0) { memcpy(xy_, "\xEF\x12\x0\x0\x34\xAB\x0\x0", 8); }UnprintableInFoo134,3958
  double z() const { return z_; }z135,4039
  char xy_[8];xy_137,4083
  double z_;z_138,4098
struct PrintableViaPrintTo {PrintableViaPrintTo142,4176
  PrintableViaPrintTo() : value() {}PrintableViaPrintTo143,4205
  int value;value144,4242
void PrintTo(const PrintableViaPrintTo& x, ::std::ostream* os) {PrintTo147,4259
struct PointerPrintable {PointerPrintable152,4431
::std::ostream& operator<<(::std::ostream& os,operator <<155,4461
class PrintableViaPrintToTemplate {PrintableViaPrintToTemplate162,4702
  explicit PrintableViaPrintToTemplate(const T& a_value) : value_(a_value) {}PrintableViaPrintToTemplate164,4747
  const T& value() const { return value_; }value166,4826
  T value_;value_168,4880
void PrintTo(const PrintableViaPrintToTemplate<T>& x, ::std::ostream* os) {PrintTo172,4918
class StreamableTemplateInFoo {StreamableTemplateInFoo178,5139
  StreamableTemplateInFoo() : value_() {}StreamableTemplateInFoo180,5180
  const T& value() const { return value_; }value182,5223
  T value_;value_184,5277
inline ::std::ostream& operator<<(::std::ostream& os,operator <<188,5315
struct TemplatedStreamableInFoo {};TemplatedStreamableInFoo195,5623
OutputStream& operator<<(OutputStream& os,operator <<198,5693
class PathLike {PathLike207,6020
  struct iterator {iterator209,6046
    typedef PathLike value_type;value_type210,6066
  PathLike() {}PathLike219,6224
  iterator begin() const { return iterator(); }begin221,6241
  iterator end() const { return iterator(); }end222,6289
  friend ::std::ostream& operator<<(::std::ostream& os, const PathLike&) {operator <<224,6336
namespace testing {testing231,6480
class Wrapper {Wrapper234,6534
  explicit Wrapper(T&& value) : value_(std::forward<T>(value)) {}Wrapper236,6559
  const T& value() const { return value_; }value238,6626
  T value_;value_241,6681
namespace internal {internal246,6714
class UniversalPrinter<Wrapper<T>> {UniversalPrinter248,6757
  static void Print(const Wrapper<T>& w, ::std::ostream* os) {Print250,6803
namespace gtest_printers_test {gtest_printers_test259,6974
std::string Print(const T& value) {Print284,7831
std::string PrintByRef(const T& value) {PrintByRef294,8150
TEST(PrintEnumTest, AnonymousEnum) {TEST302,8321
TEST(PrintEnumTest, EnumWithoutPrinter) {TEST307,8424
TEST(PrintEnumTest, EnumWithStreaming) {TEST312,8535
TEST(PrintEnumTest, EnumWithPrintTo) {TEST317,8681
TEST(PrintClassTest, BiggestIntConvertible) {TEST324,8890
TEST(PrintCharTest, PlainChar) {TEST331,9038
TEST(PrintCharTest, SignedChar) {TEST351,9778
TEST(PrintCharTest, UnsignedChar) {TEST358,9974
TEST(PrintCharTest, Char16) {TEST364,10159
TEST(PrintCharTest, Char32) {TEST368,10228
TEST(PrintCharTest, Char8) {TEST373,10318
TEST(PrintBuiltInTypeTest, Bool) {TEST381,10452
TEST(PrintBuiltInTypeTest, Wchar_t) {TEST387,10572
TEST(PrintTypeSizeTest, Wchar_t) {TEST409,11531
TEST(PrintBuiltInTypeTest, Integer) {TEST414,11642
TEST(PrintBuiltInTypeTest, Size_t) {TEST444,12995
TEST(PrintBuiltInTypeTest, FloatingPoints) {TEST453,13255
static std::string PrintPointer(const void* p) {PrintPointer461,13593
TEST(PrintCStringTest, Const) {TEST470,13807
TEST(PrintCStringTest, NonConst) {TEST476,13946
TEST(PrintCStringTest, Null) {TEST483,14117
TEST(PrintCStringTest, EscapesProperly) {TEST489,14255
TEST(PrintU8StringTest, Const) {TEST498,14524
TEST(PrintU8StringTest, NonConst) {TEST504,14682
TEST(PrintU8StringTest, Null) {TEST511,14879
TEST(PrintU8StringTest, EscapesProperly) {TEST517,15022
TEST(PrintU16StringTest, Const) {TEST527,15352
TEST(PrintU16StringTest, NonConst) {TEST533,15503
TEST(PrintU16StringTest, Null) {TEST540,15694
TEST(PrintU16StringTest, EscapesProperly) {TEST546,15840
TEST(PrintU32StringTest, Const) {TEST555,16147
TEST(PrintU32StringTest, NonConst) {TEST561,16310
TEST(PrintU32StringTest, Null) {TEST568,16503
TEST(PrintU32StringTest, EscapesProperly) {TEST574,16649
TEST(PrintWideCStringTest, Const) {TEST591,17409
TEST(PrintWideCStringTest, NonConst) {TEST597,17560
TEST(PrintWideCStringTest, Null) {TEST604,17748
TEST(PrintWideCStringTest, EscapesProperly) {TEST610,17898
TEST(PrintCharPointerTest, SignedChar) {TEST622,18370
TEST(PrintCharPointerTest, ConstSignedChar) {TEST630,18582
TEST(PrintCharPointerTest, UnsignedChar) {TEST638,18795
TEST(PrintCharPointerTest, ConstUnsignedChar) {TEST646,19015
TEST(PrintPointerToBuiltInTypeTest, Bool) {TEST656,19292
TEST(PrintPointerToBuiltInTypeTest, Void) {TEST664,19480
TEST(PrintPointerToBuiltInTypeTest, ConstVoid) {TEST672,19674
TEST(PrintPointerToPointerTest, IntPointerPointer) {TEST680,19909
void MyFunction(int /* n */) {}MyFunction689,20147
TEST(PrintPointerTest, NonMemberFunctionPointer) {TEST691,20180
AssertionResult HasPrefix(const StringType& str, const StringType& prefix) {HasPrefix707,20798
struct Foo {Foo723,21439
  virtual ~Foo() {}~Foo725,21461
  int MyMethod(char x) { return x + 1; }MyMethod726,21481
  virtual char MyVirtualMethod(int /* n */) { return 'a'; }MyVirtualMethod727,21522
  int value;value729,21583
TEST(PrintPointerTest, MemberVariablePointer) {TEST732,21600
TEST(PrintPointerTest, MemberFunctionPointer) {TEST744,22127
TEST(PrintArrayTest, OneDimensionalArray) {TEST765,22836
TEST(PrintArrayTest, TwoDimensionalArray) {TEST771,22996
TEST(PrintArrayTest, ConstArray) {TEST780,23217
TEST(PrintArrayTest, CharArrayWithNoTerminatingNul) {TEST786,23372
TEST(PrintArrayTest, CharArrayWithTerminatingNul) {TEST793,23634
TEST(PrintArrayTest, Char8ArrayWithNoTerminatingNul) {TEST800,23825
TEST(PrintArrayTest, Char8ArrayWithTerminatingNul) {TEST807,24106
TEST(PrintArrayTest, Char16ArrayWithNoTerminatingNul) {TEST816,24344
TEST(PrintArrayTest, Char16ArrayWithTerminatingNul) {TEST824,24697
TEST(PrintArrayTest, Char32ArrayWithNoTerminatingNul) {TEST830,24923
TEST(PrintArrayTest, Char32ArrayWithTerminatingNul) {TEST838,25235
TEST(PrintArrayTest, WCharArrayWithNoTerminatingNul) {TEST844,25434
TEST(PrintArrayTest, WCharArrayWithTerminatingNul) {TEST851,25711
TEST(PrintArrayTest, ObjectArray) {TEST857,25867
TEST(PrintArrayTest, BigArray) {TEST863,26054
TEST(PrintStringTest, StringInStdNamespace) {TEST872,26288
TEST(PrintStringTest, StringAmbiguousHex) {TEST879,26527
TEST(PrintWideStringTest, StringInStdNamespace) {TEST896,27302
TEST(PrintWideStringTest, StringAmbiguousHex) {TEST904,27608
TEST(PrintStringTest, U8String) {TEST916,28071
TEST(PrintStringTest, U16String) {TEST923,28297
TEST(PrintStringTest, U32String) {TEST929,28500
class AllowsGenericStreaming {};AllowsGenericStreaming941,28936
std::basic_ostream<Char, CharTraits>& operator<<(operator <<944,29016
TEST(PrintTypeWithGenericStreamingTest, NonTemplateType) {TEST950,29201
class AllowsGenericStreamingTemplate {};AllowsGenericStreamingTemplate958,29430
std::basic_ostream<Char, CharTraits>& operator<<(operator <<961,29530
TEST(PrintTypeWithGenericStreamingTest, TemplateType) {TEST967,29734
class AllowsGenericStreamingAndImplicitConversionTemplate {AllowsGenericStreamingAndImplicitConversionTemplate976,30033
  operator bool() const { return false; }operator bool978,30102
std::basic_ostream<Char, CharTraits>& operator<<(operator <<982,30206
TEST(PrintTypeWithGenericStreamingTest, TypeImplicitlyConvertible) {TEST988,30452
TEST(PrintStringViewTest, SimpleStringView) {TEST997,30741
TEST(PrintStringViewTest, UnprintableCharacters) {TEST1002,30870
TEST(PrintStlContainerTest, EmptyDeque) {TEST1012,31151
TEST(PrintStlContainerTest, NonEmptyDeque) {TEST1017,31250
TEST(PrintStlContainerTest, OneElementHashMap) {TEST1025,31418
TEST(PrintStlContainerTest, HashMultiMap) {TEST1031,31580
TEST(PrintStlContainerTest, HashSet) {TEST1045,32029
TEST(PrintStlContainerTest, HashMultiSet) {TEST1051,32158
TEST(PrintStlContainerTest, List) {TEST1081,33226
TEST(PrintStlContainerTest, Map) {TEST1087,33413
TEST(PrintStlContainerTest, MultiMap) {TEST1095,33595
TEST(PrintStlContainerTest, Set) {TEST1109,34230
TEST(PrintStlContainerTest, MultiSet) {TEST1115,34385
TEST(PrintStlContainerTest, SinglyLinkedList) {TEST1122,34545
TEST(PrintStlContainerTest, Pair) {TEST1128,34709
TEST(PrintStlContainerTest, Vector) {TEST1133,34820
TEST(PrintStlContainerTest, LongSequence) {TEST1140,34949
TEST(PrintStlContainerTest, NestedContainer) {TEST1147,35210
TEST(PrintStlContainerTest, OneDimensionalNativeArray) {TEST1159,35504
TEST(PrintStlContainerTest, TwoDimensionalNativeArray) {TEST1165,35691
struct iterator {iterator1173,35986
  char x;x1174,36004
TEST(PrintStlContainerTest, Iterator) {TEST1177,36018
struct const_iterator {const_iterator1184,36201
  char x;x1185,36225
TEST(PrintStlContainerTest, ConstIterator) {TEST1188,36239
TEST(PrintStdTupleTest, VariousSizes) {TEST1196,36423
TEST(PrintStdTupleTest, NestedTuple) {TEST1223,37296
TEST(PrintNullptrT, Basic) {TEST1229,37492
TEST(PrintReferenceWrapper, Printable) {TEST1233,37566
TEST(PrintReferenceWrapper, Unprintable) {TEST1239,37752
TEST(PrintUnprintableTypeTest, InGlobalNamespace) {TEST1254,38230
TEST(PrintUnprintableTypeTest, InUserNamespace) {TEST1260,38418
struct Big {Big1267,38663
  Big() { memset(array, 0, sizeof(array)); }Big1268,38676
  char array[257];array1269,38721
TEST(PrintUnpritableTypeTest, BigObject) {TEST1272,38744
TEST(PrintStreamableTypeTest, InGlobalNamespace) {TEST1286,39420
TEST(PrintStreamableTypeTest, TemplateTypeInUserNamespace) {TEST1293,39639
TEST(PrintStreamableTypeTest, TypeInUserNamespaceWithTemplatedStreamOperator) {TEST1298,39804
TEST(PrintStreamableTypeTest, SubclassUsesSuperclassStreamOperator) {TEST1303,39982
TEST(PrintStreamableTypeTest, PathLikeInUserNamespace) {TEST1314,40419
TEST(PrintPrintableTypeTest, InUserNamespace) {TEST1322,40690
TEST(PrintPrintableTypeTest, PointerInUserNamespace) {TEST1329,40923
TEST(PrintPrintableTypeTest, TemplateInUserNamespace) {TEST1335,41133
TEST(PrintReferenceTest, PrintsAddressAndValue) {TEST1342,41395
TEST(PrintReferenceTest, HandlesFunctionPointer) {TEST1361,41945
TEST(PrintReferenceTest, HandlesMemberFunctionPointer) {TEST1377,42659
TEST(PrintReferenceTest, HandlesMemberVariablePointer) {TEST1393,43233
TEST(FormatForComparisonFailureMessageTest, WorksForScalar) {TEST1405,43665
TEST(FormatForComparisonFailureMessageTest, WorksForNonCharPointer) {TEST1411,43841
TEST(FormatForComparisonFailureMessageTest, FormatsNonCharArrayAsPointer) {TEST1418,44039
TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsPointer) {TEST1431,44556
TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsPointer) {TEST1449,45196
TEST(FormatForComparisonFailureMessageTest, WorksForCharPointerVsStdString) {TEST1470,46002
TEST(FormatForComparisonFailureMessageTest, WorksForWCharPointerVsStdWString) {TEST1484,46540
TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsPointer) {TEST1502,47238
TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsCharArray) {TEST1510,47490
TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsPointer) {TEST1517,47731
TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsWCharArray) {TEST1525,47997
TEST(FormatForComparisonFailureMessageTest, WorksForCharArrayVsStdString) {TEST1535,48378
TEST(FormatForComparisonFailureMessageTest, WorksForWCharArrayVsStdWString) {TEST1543,48708
#define EXPECT_PRINT_TO_STRING_(EXPECT_PRINT_TO_STRING_1555,49227
TEST(PrintToStringTest, WorksForScalar) {TEST1559,49426
TEST(PrintToStringTest, WorksForPointerToConstChar) {TEST1563,49510
TEST(PrintToStringTest, WorksForPointerToNonConstChar) {TEST1568,49637
TEST(PrintToStringTest, EscapesForPointerToConstChar) {TEST1574,49777
TEST(PrintToStringTest, EscapesForPointerToNonConstChar) {TEST1579,49911
TEST(PrintToStringTest, WorksForArray) {TEST1585,50059
TEST(PrintToStringTest, WorksForCharArray) {TEST1590,50174
TEST(PrintToStringTest, WorksForCharArrayWithEmbeddedNul) {TEST1595,50287
  TEST(PrintToStringTest, ContainsNonLatin) {TEST1603,50581
TEST(IsValidUTF8Test, IllFormedUTF8) {TEST1615,51165
#undef EXPECT_PRINT_TO_STRING_EXPECT_PRINT_TO_STRING_1675,53898
TEST(UniversalTersePrintTest, WorksForNonReference) {TEST1677,53930
TEST(UniversalTersePrintTest, WorksForReference) {TEST1683,54076
TEST(UniversalTersePrintTest, WorksForCString) {TEST1690,54239
TEST(UniversalPrintTest, WorksForNonReference) {TEST1707,54665
TEST(UniversalPrintTest, WorksForReference) {TEST1713,54801
TEST(UniversalPrintTest, WorksForPairWithConst) {TEST1720,54954
TEST(UniversalPrintTest, WorksForCString) {TEST1727,55187
TEST(UniversalPrintTest, WorksForCharArray) {TEST1744,55683
TEST(UniversalPrintTest, IncompleteType) {TEST1756,56067
TEST(UniversalPrintTest, SmartPointers) {TEST1763,56263
TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsEmptyTuple) {TEST1813,58732
TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsOneTuple) {TEST1818,58925
TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsTwoTuple) {TEST1825,59153
TEST(UniversalTersePrintTupleFieldsToStringsTestWithStd, PrintsTersely) {TEST1833,59428
class PrintAnyTest : public ::testing::Test {PrintAnyTest1843,59759
  static std::string ExpectedTypeName() {ExpectedTypeName1846,59841
TEST_F(PrintAnyTest, Empty) {TEST_F1855,60010
TEST_F(PrintAnyTest, NonEmpty) {TEST_F1860,60109
TEST(PrintOptionalTest, Basic) {TEST1875,60501
struct NonPrintable {NonPrintable1887,60954
  unsigned char contents = 17;contents1888,60976
TEST(PrintOneofTest, Basic) {TEST1891,61011
class string_ptr {string_ptr1908,61618
  string_ptr(const char* data, size_t size) : data_(data), size_(size) {}string_ptr1910,61646
  string_ref operator*() const noexcept;noexcept1917,61802
  const char* data_;data_1920,61854
  size_t size_;size_1921,61875
class string_ref {string_ref1927,61960
  string_ref(const char* data, size_t size) : data_(data), size_(size) {}string_ref1929,61988
  const char* data_;data_1942,62381
  size_t size_;size_1943,62402
TEST(string_ref, compare) {TEST1948,62500

test/googletest/googletest/test/gtest_xml_output_unittest.py,1868
GTEST_FILTER_FLAG = '--gtest_filter'GTEST_FILTER_FLAG44,1750
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG45,1787
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG46,1832
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'GTEST_DEFAULT_OUTPUT_FILE47,1869
GTEST_PROGRAM_NAME = 'gtest_xml_output_unittest_'GTEST_PROGRAM_NAME48,1915
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG51,2018
TOTAL_SHARDS_ENV_VAR = 'GTEST_TOTAL_SHARDS'TOTAL_SHARDS_ENV_VAR54,2121
SHARD_INDEX_ENV_VAR = 'GTEST_SHARD_INDEX'SHARD_INDEX_ENV_VAR55,2165
SHARD_STATUS_FILE_ENV_VAR = 'GTEST_SHARD_STATUS_FILE'SHARD_STATUS_FILE_ENV_VAR56,2207
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES58,2262
  STACK_TRACE_TEMPLATE = '\nStack trace:\n*'STACK_TRACE_TEMPLATE61,2356
  STACK_TRACE_TEMPLATE = ''STACK_TRACE_TEMPLATE63,2407
GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)GTEST_PROGRAM_PATH234,13557
SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess(SUPPORTS_TYPED_TESTS236,13638
class GTestXMLOutputUnitTest(gtest_xml_test_utils.GTestXMLTestCase):GTestXMLOutputUnitTest240,13785
    def testNonEmptyXmlOutput(self):testNonEmptyXmlOutput248,14085
  def testNoTestXmlOutput(self):testNoTestXmlOutput255,14330
  def testTimestampValue(self):testTimestampValue264,14651
  def testDefaultOutputFile(self):testDefaultOutputFile289,15853
  def testSuppressedXmlOutput(self):testSuppressedXmlOutput312,16641
  def testFilteredTestXmlOutput(self):testFilteredTestXmlOutput341,17705
  def testShardedTestXmlOutput(self):testShardedTestXmlOutput351,18092
  def _GetXmlOutput(self, gtest_prog_name, extra_args, extra_env,_GetXmlOutput365,18525
  def _TestXmlOutput(self, gtest_prog_name, expected_xml,_TestXmlOutput394,19736

test/googletest/googletest/test/googletest-filter-unittest_.cc,947
class FooTest : public testing::Test {FooTest46,1950
TEST_F(FooTest, Abc) {TEST_F49,1993
TEST_F(FooTest, Xyz) {TEST_F52,2019
TEST(BarTest, TestOne) {TEST58,2101
TEST(BarTest, TestTwo) {TEST61,2129
TEST(BarTest, TestThree) {TEST64,2157
TEST(BarTest, DISABLED_TestFour) {TEST67,2187
TEST(BarTest, DISABLED_TestFive) {TEST71,2258
TEST(BazTest, TestOne) {TEST77,2352
TEST(BazTest, TestA) {TEST81,2413
TEST(BazTest, TestB) {TEST84,2439
TEST(BazTest, DISABLED_TestC) {TEST87,2465
TEST(HasDeathTest, Test1) {TEST93,2560
TEST(HasDeathTest, Test2) {TEST99,2739
TEST(DISABLED_FoobarTest, Test1) {TEST105,2839
TEST(DISABLED_FoobarTest, DISABLED_Test2) {TEST109,2910
TEST(DISABLED_FoobarbazTest, TestA) {TEST115,3018
class ParamTest : public testing::TestWithParam<int> {ParamTest119,3092
TEST_P(ParamTest, TestX) {TEST_P122,3151
TEST_P(ParamTest, TestY) {TEST_P125,3181
int main(int argc, char **argv) {main133,3361

test/googletest/googletest/test/googletest-json-output-unittest.py,1721
GTEST_FILTER_FLAG = '--gtest_filter'GTEST_FILTER_FLAG43,1729
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG44,1766
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG45,1811
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.json'GTEST_DEFAULT_OUTPUT_FILE46,1848
GTEST_PROGRAM_NAME = 'gtest_xml_output_unittest_'GTEST_PROGRAM_NAME47,1895
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG50,1998
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES52,2054
  STACK_TRACE_TEMPLATE = '\nStack trace:\n*'STACK_TRACE_TEMPLATE55,2148
  STACK_TRACE_TEMPLATE = ''STACK_TRACE_TEMPLATE57,2199
EXPECTED_NON_EMPTY = {EXPECTED_NON_EMPTY59,2228
EXPECTED_FILTERED = {EXPECTED_FILTERED572,15563
EXPECTED_NO_TEST = {EXPECTED_NO_TEST615,16361
GTEST_PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath(GTEST_PROGRAM_NAME)GTEST_PROGRAM_PATH670,17499
SUPPORTS_TYPED_TESTS = 'TypedTest' in gtest_test_utils.Subprocess(SUPPORTS_TYPED_TESTS672,17580
class GTestJsonOutputUnitTest(gtest_test_utils.TestCase):GTestJsonOutputUnitTest676,17727
    def testNonEmptyJsonOutput(self):testNonEmptyJsonOutput684,18015
  def testNoTestJsonOutput(self):testNoTestJsonOutput692,18329
  def testTimestampValue(self):testTimestampValue701,18651
  def testDefaultOutputFile(self):testDefaultOutputFile725,19796
  def testSuppressedJsonOutput(self):testSuppressedJsonOutput749,20625
  def testFilteredTestJsonOutput(self):testFilteredTestJsonOutput779,21743
  def _GetJsonOutput(self, gtest_prog_name, extra_args, expected_exit_code):_GetJsonOutput789,22126
  def _TestJsonOutput(self, gtest_prog_name, expected,_TestJsonOutput821,23389

test/googletest/googletest/test/gtest-unittest-api_test.cc,1221
namespace testing {testing42,1842
namespace internal {internal43,1862
struct LessByName {LessByName46,1906
  bool operator()(const T* a, const T* b) {operator ()47,1926
class UnitTestHelper {UnitTestHelper52,2023
  static TestSuite const** GetSortedTestSuites() {GetSortedTestSuites56,2196
  static const TestSuite* FindTestSuite(const char* name) {FindTestSuite72,2791
  static TestInfo const** GetSortedTests(const TestSuite* test_suite) {GetSortedTests85,3301
template <typename T> class TestSuiteWithCommentTest : public Test {};TestSuiteWithCommentTest98,3723
TYPED_TEST(TestSuiteWithCommentTest, Dummy) {}TYPED_TEST100,3850
const int kTypedTestSuites = 1;kTypedTestSuites102,3898
const int kTypedTests = 1;kTypedTests103,3930
TEST(ApiTest, UnitTestImmutableAccessorsWork) {TEST108,4178
AssertionResult IsNull(const char* str) {IsNull132,5094
TEST(ApiTest, TestSuiteImmutableAccessorsWork) {TEST139,5261
TEST(ApiTest, TestSuiteDisabledAccessorsWork) {TEST200,7647
TEST(ApiTest, DISABLED_Dummy1) {}TEST221,8551
TEST(DISABLED_Test, Dummy2) {}TEST222,8585
class FinalSuccessChecker : public Environment {FinalSuccessChecker224,8617
int main(int argc, char **argv) {main322,12891

test/googletest/googletest/test/gtest_skip_check_output_test.py,332
EXE_PATH = gtest_test_utils.GetTestExecutablePath('gtest_skip_test')EXE_PATH41,1799
OUTPUT = gtest_test_utils.Subprocess([EXE_PATH]).outputOUTPUT43,1869
class SkipEntireEnvironmentTest(gtest_test_utils.TestCase):SkipEntireEnvironmentTest47,1935
  def testSkipEntireEnvironmentTest(self):testSkipEntireEnvironmentTest49,1996

test/googletest/googletest/test/gtest_no_test_unittest.cc,47
int main(int argc, char **argv) {main35,1670

test/googletest/googletest/test/googletest-param-test-invalid-name1-test.py,429
binary_name = 'googletest-param-test-invalid-name1-test_'binary_name35,1654
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND36,1712
def Assert(condition):Assert39,1776
def TestExitCodeAndOutput(command):TestExitCodeAndOutput44,1846
class GTestParamTestInvalidName1Test(gtest_test_utils.TestCase):GTestParamTestInvalidName1Test56,2188
  def testExitCodeAndOutput(self):testExitCodeAndOutput58,2254

test/googletest/googletest/test/gtest_test_utils.py,1297
  _SUBPROCESS_MODULE_AVAILABLE = True_SUBPROCESS_MODULE_AVAILABLE48,1940
  _SUBPROCESS_MODULE_AVAILABLE = False_SUBPROCESS_MODULE_AVAILABLE51,2002
GTEST_OUTPUT_VAR_NAME = 'GTEST_OUTPUT'GTEST_OUTPUT_VAR_NAME54,2069
PREMATURE_EXIT_FILE_ENV_VAR = 'TEST_PREMATURE_EXIT_FILE'PREMATURE_EXIT_FILE_ENV_VAR57,2188
environ = os.environ.copy()environ59,2246
def SetEnvVar(env_var, value):SetEnvVar62,2276
TestCase = _test_module.TestCase  # pylint: disable=C6409TestCase74,2629
_flag_map = {'source_dir': os.path.dirname(sys.argv[0]),_flag_map78,2813
_gtest_flags_are_parsed = False_gtest_flags_are_parsed80,2926
def _ParseAndStripGTestFlags(argv):_ParseAndStripGTestFlags83,2960
def GetFlag(flag):GetFlag112,3904
def GetSourceDir():GetSourceDir123,4181
def GetBuildDir():GetBuildDir129,4328
_temp_dir = None_temp_dir135,4477
def _RemoveTempDir():_RemoveTempDir137,4495
def GetTempDir():GetTempDir144,4617
def GetTestExecutablePath(executable_name, build_dir=None):GetTestExecutablePath151,4730
def GetExitStatus(exit_code):GetExitStatus182,5741
class Subprocess:Subprocess202,6281
  def __init__(self, command, working_dir=None, capture_stderr=True, env=None):__init__203,6299
      def _ReplaceEnvDict(dest, src):_ReplaceEnvDict250,8426
def Main():Main300,10131

test/googletest/googletest/test/gtest_premature_exit_test.cc,634
class PrematureExitTest : public Test {PrematureExitTest46,1891
  static bool FileExists(const char* filepath) {FileExists49,1996
  PrematureExitTest() {PrematureExitTest55,2122
  bool PrematureExitFileExists() const {PrematureExitFileExists65,2427
  const char* premature_exit_file_path_;premature_exit_file_path_69,2523
typedef PrematureExitTest PrematureExitDeathTest;PrematureExitDeathTest72,2568
TEST_F(PrematureExitDeathTest, FileExistsDuringExecutionOfDeathTest) {TEST_F79,2848
TEST_F(PrematureExitTest, PrematureExitFileExistsDuringTestExecution) {TEST_F97,3452
int main(int argc, char **argv) {main109,3755

test/googletest/googletest/test/googletest-message-test.cc,882
TEST(MessageTest, DefaultConstructor) {TEST44,1764
TEST(MessageTest, CopyConstructor) {TEST50,1893
TEST(MessageTest, ConstructsFromCString) {TEST57,2081
TEST(MessageTest, StreamsFloat) {TEST63,2218
TEST(MessageTest, StreamsDouble) {TEST71,2560
TEST(MessageTest, StreamsPointer) {TEST80,2977
TEST(MessageTest, StreamsNullPointer) {TEST87,3141
TEST(MessageTest, StreamsCString) {TEST93,3288
TEST(MessageTest, StreamsNullCString) {TEST98,3417
TEST(MessageTest, StreamsString) {TEST104,3566
TEST(MessageTest, StreamsStringWithEmbeddedNUL) {TEST110,3756
TEST(MessageTest, StreamsNULChar) {TEST120,4162
TEST(MessageTest, StreamsInt) {TEST125,4278
TEST(MessageTest, StreamsBasicIoManip) {TEST131,4456
TEST(MessageTest, GetString) {TEST139,4758
TEST(MessageTest, StreamsToOStream) {TEST146,4921
TEST(MessageTest, DoesNotTakeUpMuchStackSpace) {TEST154,5162

test/googletest/googletest/test/gtest_environment_test.cc,1082
enum FailureType {FailureType40,1716
  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURENO_FAILURE41,1735
  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILURENON_FATAL_FAILURE41,1735
  NO_FAILURE, NON_FATAL_FAILURE, FATAL_FAILUREFATAL_FAILURE41,1735
class MyEnvironment : public testing::Environment {MyEnvironment45,1833
  MyEnvironment() { Reset(); }MyEnvironment47,1894
  void Reset() {Reset74,2656
  void set_failure_in_set_up(FailureType type) {set_failure_in_set_up82,2860
  bool set_up_was_run() const { return set_up_was_run_; }set_up_was_run87,2967
  bool tear_down_was_run() const { return tear_down_was_run_; }tear_down_was_run90,3051
  FailureType failure_in_set_up_;failure_in_set_up_93,3126
  bool set_up_was_run_;set_up_was_run_94,3160
  bool tear_down_was_run_;tear_down_was_run_95,3184
bool test_was_run;test_was_run99,3236
TEST(FooTest, Bar) {TEST103,3337
void Check(bool condition, const char* msg) {Check108,3452
int RunAllTests(MyEnvironment* env, FailureType failure) {RunAllTests119,3766
int main(int argc, char **argv) {main129,4014

test/googletest/googletest/test/googletest-uninitialized-test_.cc,64
TEST(DummyTest, Dummy) {TEST33,1584
int main() {main40,1837

test/googletest/googletest/test/googletest-failfast-unittest_.cc,2575
class HasFixtureTest : public testing::Test {};HasFixtureTest46,1952
TEST_F(HasFixtureTest, Test0) {}TEST_F48,2001
TEST_F(HasFixtureTest, Test1) { FAIL() << "Expected failure."; }TEST_F50,2035
TEST_F(HasFixtureTest, Test2) { FAIL() << "Expected failure."; }TEST_F52,2101
TEST_F(HasFixtureTest, Test3) { FAIL() << "Expected failure."; }TEST_F54,2167
TEST_F(HasFixtureTest, Test4) { FAIL() << "Expected failure."; }TEST_F56,2233
TEST(HasSimpleTest, Test0) {}TEST60,2323
TEST(HasSimpleTest, Test1) { FAIL() << "Expected failure."; }TEST62,2354
TEST(HasSimpleTest, Test2) { FAIL() << "Expected failure."; }TEST64,2417
TEST(HasSimpleTest, Test3) { FAIL() << "Expected failure."; }TEST66,2480
TEST(HasSimpleTest, Test4) { FAIL() << "Expected failure."; }TEST68,2543
TEST(HasDisabledTest, Test0) {}TEST72,2632
TEST(HasDisabledTest, DISABLED_Test1) { FAIL() << "Expected failure."; }TEST74,2665
TEST(HasDisabledTest, Test2) { FAIL() << "Expected failure."; }TEST76,2739
TEST(HasDisabledTest, Test3) { FAIL() << "Expected failure."; }TEST78,2804
TEST(HasDisabledTest, Test4) { FAIL() << "Expected failure."; }TEST80,2869
TEST(HasDeathTest, Test0) { EXPECT_DEATH_IF_SUPPORTED(exit(1), ".*"); }TEST84,2956
TEST(HasDeathTest, Test1) {TEST86,3029
TEST(HasDeathTest, Test2) {TEST90,3126
TEST(HasDeathTest, Test3) {TEST94,3223
TEST(HasDeathTest, Test4) {TEST98,3320
TEST(DISABLED_HasDisabledSuite, Test0) {}TEST104,3452
TEST(DISABLED_HasDisabledSuite, Test1) { FAIL() << "Expected failure."; }TEST106,3495
TEST(DISABLED_HasDisabledSuite, Test2) { FAIL() << "Expected failure."; }TEST108,3570
TEST(DISABLED_HasDisabledSuite, Test3) { FAIL() << "Expected failure."; }TEST110,3645
TEST(DISABLED_HasDisabledSuite, Test4) { FAIL() << "Expected failure."; }TEST112,3720
class HasParametersTest : public testing::TestWithParam<int> {};HasParametersTest116,3822
TEST_P(HasParametersTest, Test1) { FAIL() << "Expected failure."; }TEST_P118,3888
TEST_P(HasParametersTest, Test2) { FAIL() << "Expected failure."; }TEST_P120,3957
class MyTestListener : public ::testing::EmptyTestEventListener {MyTestListener125,4140
TEST(HasSkipTest, Test0) { SUCCEED() << "Expected success."; }TEST151,5083
TEST(HasSkipTest, Test1) { GTEST_SKIP() << "Expected skip."; }TEST153,5147
TEST(HasSkipTest, Test2) { FAIL() << "Expected failure."; }TEST155,5211
TEST(HasSkipTest, Test3) { FAIL() << "Expected failure."; }TEST157,5272
TEST(HasSkipTest, Test4) { FAIL() << "Expected failure."; }TEST159,5333
int main(int argc, char **argv) {main163,5411

test/googletest/googletest/test/googletest-listener-test.cc,1214
namespace testing {testing53,2167
namespace internal {internal54,2187
class EventRecordingListener : public TestEventListener {EventRecordingListener56,2209
  explicit EventRecordingListener(const char* name) : name_(name) {}EventRecordingListener58,2276
  std::string GetFullMethodName(const char* name) {GetFullMethodName125,4638
  std::string name_;name_129,4726
class EventRecordingListener2 : public TestEventListener {EventRecordingListener2133,4814
  explicit EventRecordingListener2(const char* name) : name_(name) {}EventRecordingListener2135,4882
  std::string GetFullMethodName(const char* name) { return name_ + "." + name; }GetFullMethodName199,7079
  std::string name_;name_201,7161
class EnvironmentInvocationCatcher : public Environment {EnvironmentInvocationCatcher204,7186
class ListenerTest : public Test {ListenerTest211,7409
  static void SetUpTestSuite() {SetUpTestSuite213,7456
  static void TearDownTestSuite() {TearDownTestSuite217,7551
TEST_F(ListenerTest, DoesFoo) {TEST_F226,7807
TEST_F(ListenerTest, DoesBar) {TEST_F233,8045
void VerifyResults(const std::vector<std::string>& data,VerifyResults246,8388
int main(int argc, char **argv) {main270,9213

test/googletest/googletest/test/gtest_skip_environment_check_output_test.py,314
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH39,1788
OUTPUT = gtest_test_utils.Subprocess([EXE_PATH]).outputOUTPUT42,1884
class SkipEntireEnvironmentTest(gtest_test_utils.TestCase):SkipEntireEnvironmentTest46,1950
  def testSkipEntireEnvironmentTest(self):testSkipEntireEnvironmentTest48,2011

test/googletest/googletest/test/gtest_testbridge_test.py,399
binary_name = 'gtest_testbridge_test_'binary_name36,1655
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND37,1694
TESTBRIDGE_NAME = 'TESTBRIDGE_TEST_ONLY'TESTBRIDGE_NAME38,1756
def Assert(condition):Assert41,1799
class GTestTestFilterTest(gtest_test_utils.TestCase):GTestTestFilterTest46,1869
  def testTestExecutionIsFiltered(self):testTestExecutionIsFiltered48,1924

test/googletest/googletest/test/gtest_testbridge_test_.cc,106
TEST(TestFilterTest, TestThatSucceeds) {}TEST39,1782
TEST(TestFilterTest, TestThatFails) {TEST41,1825

test/googletest/googletest/test/gtest_json_test_utils.py,87
def normalize(obj):normalize35,1591
  def _normalize(key, value):_normalize45,1834

test/googletest/googletest/test/gtest_all_test.cc,0

test/googletest/googletest/test/googletest-output-test_.cc,10134
void TestEq1(int x) {TestEq159,2389
void TryTestSubroutine() {TryTestSubroutine65,2542
TEST(PassingTest, PassingTest1) {TEST79,2958
TEST(PassingTest, PassingTest2) {TEST82,2995
class FailingParamTest : public testing::TestWithParam<int> {};FailingParamTest87,3132
TEST_P(FailingParamTest, Fails) {TEST_P89,3197
class EmptyBasenameParamInst : public testing::TestWithParam<int> {};EmptyBasenameParamInst101,3644
TEST_P(EmptyBasenameParamInst, Passes) { EXPECT_EQ(1, GetParam()); }TEST_P103,3715
static const char kGoldenString[] = "\"Line\0 1\"\nLine 2";kGoldenString107,3858
TEST(NonfatalFailureTest, EscapesStringOperands) {TEST109,3919
TEST(NonfatalFailureTest, DiffForLongStrings) {TEST117,4121
TEST(FatalFailureTest, FatalFailureInSubroutine) {TEST123,4326
TEST(FatalFailureTest, FatalFailureInNestedSubroutine) {TEST130,4518
TEST(FatalFailureTest, NonfatalFailureInSubroutine) {TEST147,5069
TEST(LoggingTest, InterleavingLoggingAndAssertions) {TEST154,5350
void SubWithoutTrace(int n) {SubWithoutTrace169,5717
void SubWithTrace(int n) {SubWithTrace175,5841
TEST(SCOPED_TRACETest, AcceptedValues) {TEST181,5945
TEST(SCOPED_TRACETest, ObeysScopes) {TEST192,6294
TEST(SCOPED_TRACETest, WorksInLoop) {TEST211,6947
TEST(SCOPED_TRACETest, WorksInSubroutine) {TEST222,7188
TEST(SCOPED_TRACETest, CanBeNested) {TEST230,7350
TEST(SCOPED_TRACETest, CanBeRepeated) {TEST239,7565
struct CheckPoints {CheckPoints291,9604
  Notification n1;n1292,9625
  Notification n2;n2293,9644
  Notification n3;n3294,9663
static void ThreadWithScopedTrace(CheckPoints* check_points) {ThreadWithScopedTrace297,9686
TEST(SCOPED_TRACETest, WorksConcurrently) {TEST313,10178
TEST(ScopedTraceTest, WithExplicitFileAndLine) {TEST339,11022
TEST(DisabledTestsWarningTest,TEST344,11236
void AdHocTest() {AdHocTest355,11662
int RunAllTests() {RunAllTests362,11857
class NonFatalFailureInFixtureConstructorTest : public testing::Test {NonFatalFailureInFixtureConstructorTest368,11977
  NonFatalFailureInFixtureConstructorTest() {NonFatalFailureInFixtureConstructorTest370,12060
TEST_F(NonFatalFailureInFixtureConstructorTest, FailureInConstructor) {TEST_F386,12533
class FatalFailureInFixtureConstructorTest : public testing::Test {FatalFailureInFixtureConstructorTest391,12721
  FatalFailureInFixtureConstructorTest() {FatalFailureInFixtureConstructorTest393,12801
  void Init() {Init415,13463
TEST_F(FatalFailureInFixtureConstructorTest, FailureInConstructor) {TEST_F420,13552
class NonFatalFailureInSetUpTest : public testing::Test {NonFatalFailureInSetUpTest427,13841
  void Deinit() {Deinit439,14186
TEST_F(NonFatalFailureInSetUpTest, FailureInSetUp) {TEST_F444,14277
class FatalFailureInSetUpTest : public testing::Test {FatalFailureInSetUpTest449,14427
  void Deinit() {Deinit461,14759
TEST_F(FatalFailureInSetUpTest, FailureInSetUp) {TEST_F466,14850
TEST(AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber) {TEST471,15020
TEST(GtestFailAtTest, MessageContainsSpecifiedFileAndLineNumber) {TEST475,15164
namespace foo {foo489,15798
class MixedUpTestSuiteTest : public testing::Test {MixedUpTestSuiteTest491,15815
TEST_F(MixedUpTestSuiteTest, FirstTestFromNamespaceFoo) {}TEST_F494,15871
TEST_F(MixedUpTestSuiteTest, SecondTestFromNamespaceFoo) {}TEST_F495,15930
class MixedUpTestSuiteWithSameTestNameTest : public testing::Test {MixedUpTestSuiteWithSameTestNameTest497,15991
TEST_F(MixedUpTestSuiteWithSameTestNameTest,TEST_F500,16063
namespace bar {bar505,16177
class MixedUpTestSuiteTest : public testing::Test {MixedUpTestSuiteTest507,16194
TEST_F(MixedUpTestSuiteTest, ThisShouldFail) {}TEST_F512,16391
TEST_F(MixedUpTestSuiteTest, ThisShouldFailToo) {}TEST_F513,16439
class MixedUpTestSuiteWithSameTestNameTest : public testing::Test {MixedUpTestSuiteWithSameTestNameTest515,16491
TEST_F(MixedUpTestSuiteWithSameTestNameTest,TEST_F520,16676
class TEST_F_before_TEST_in_same_test_case : public testing::Test {TEST_F_before_TEST_in_same_test_case530,17063
TEST_F(TEST_F_before_TEST_in_same_test_case, DefinedUsingTEST_F) {}TEST_F533,17135
TEST(TEST_F_before_TEST_in_same_test_case, DefinedUsingTESTAndShouldFail) {}TEST537,17317
class TEST_before_TEST_F_in_same_test_case : public testing::Test {TEST_before_TEST_F_in_same_test_case539,17395
TEST(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST) {}TEST542,17467
TEST_F(TEST_before_TEST_F_in_same_test_case, DefinedUsingTEST_FAndShouldFail) {TEST_F546,17645
int global_integer = 0;global_integer550,17802
TEST(ExpectNonfatalFailureTest, CanReferenceGlobalVariables) {TEST553,17899
TEST(ExpectNonfatalFailureTest, CanReferenceLocalVariables) {TEST562,18209
TEST(ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure) {TEST573,18549
TEST(ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure) {TEST581,18827
TEST(ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures) {TEST589,19062
TEST(ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure) {TEST599,19402
TEST(ExpectNonfatalFailureTest, FailsWhenStatementReturns) {TEST608,19678
TEST(ExpectNonfatalFailureTest, FailsWhenStatementThrows) {TEST619,19944
TEST(ExpectFatalFailureTest, CanReferenceGlobalVariables) {TEST632,20243
TEST(ExpectFatalFailureTest, CanReferenceLocalStaticVariables) {TEST641,20527
TEST(ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure) {TEST651,20843
TEST(ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure) {TEST659,21090
void FatalFailure() {FatalFailure666,21272
TEST(ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures) {TEST672,21417
TEST(ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure) {TEST682,21681
TEST(ExpectFatalFailureTest, FailsWhenStatementReturns) {TEST691,21962
TEST(ExpectFatalFailureTest, FailsWhenStatementThrows) {TEST702,22219
std::string ParamNameFunc(const testing::TestParamInfo<std::string>& info) {ParamNameFunc716,22512
class ParamTest : public testing::TestWithParam<std::string> {ParamTest720,22613
TEST_P(ParamTest, Success) {TEST_P723,22680
TEST_P(ParamTest, Failure) {TEST_P727,22742
class DetectNotInstantiatedTest : public testing::TestWithParam<int> {};DetectNotInstantiatedTest741,23239
TEST_P(DetectNotInstantiatedTest, Used) { }TEST_P742,23312
class TypedTest : public testing::Test {TypedTest748,23521
TYPED_TEST(TypedTest, Success) {TYPED_TEST753,23617
TYPED_TEST(TypedTest, Failure) {TYPED_TEST757,23682
typedef testing::Types<char, int> TypesForTestWithNames;TypesForTestWithNames761,23769
class TypedTestWithNames : public testing::Test {};TypedTestWithNames764,23849
class TypedTestNames {TypedTestNames766,23902
  static std::string GetName(int i) {GetName769,23958
TYPED_TEST(TypedTestWithNames, Success) {}TYPED_TEST779,24284
TYPED_TEST(TypedTestWithNames, Failure) { FAIL(); }TYPED_TEST781,24328
class TypedTestP : public testing::Test {TypedTestP784,24403
TYPED_TEST_SUITE_P(TypedTestP);TypedTestP787,24449
TYPED_TEST_P(TypedTestP, Success) {TYPED_TEST_P789,24482
TYPED_TEST_P(TypedTestP, Failure) {TYPED_TEST_P793,24551
typedef testing::Types<unsigned char, unsigned int> UnsignedTypes;UnsignedTypes799,24702
class TypedTestPNames {TypedTestPNames802,24839
  static std::string GetName(int i) {GetName805,24896
class DetectNotInstantiatedTypesTest : public testing::Test {};DetectNotInstantiatedTypesTest819,25343
TYPED_TEST_SUITE_P(DetectNotInstantiatedTypesTest);DetectNotInstantiatedTypesTest820,25407
TYPED_TEST_P(DetectNotInstantiatedTypesTest, Used) {TYPED_TEST_P821,25459
TEST(ADeathTest, ShouldRunFirst) {TEST838,26053
class ATypedDeathTest : public testing::Test {ATypedDeathTest845,26230
typedef testing::Types<int, double> NumericTypes;NumericTypes848,26281
TYPED_TEST(ATypedDeathTest, ShouldRunFirst) {TYPED_TEST851,26381
class ATypeParamDeathTest : public testing::Test {ATypeParamDeathTest859,26583
TYPED_TEST_SUITE_P(ATypeParamDeathTest);ATypeParamDeathTest862,26638
TYPED_TEST_P(ATypeParamDeathTest, ShouldRunFirst) {TYPED_TEST_P864,26680
class ExpectFailureTest : public testing::Test {ExpectFailureTest875,26995
  enum FailureMode {FailureMode877,27117
    FATAL_FAILURE,FATAL_FAILURE878,27138
    NONFATAL_FAILURENONFATAL_FAILURE879,27157
  static void AddFailure(FailureMode failure) {AddFailure881,27183
TEST_F(ExpectFailureTest, ExpectFatalFailure) {TEST_F890,27391
TEST_F(ExpectFailureTest, ExpectNonFatalFailure) {TEST_F904,27962
class ExpectFailureWithThreadsTest : public ExpectFailureTest {ExpectFailureWithThreadsTest919,28546
  static void AddFailureInOtherThread(FailureMode failure) {AddFailureInOtherThread921,28622
TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailure) {TEST_F927,28782
TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailure) {TEST_F934,29039
typedef ExpectFailureWithThreadsTest ScopedFakeTestPartResultReporterTest;ScopedFakeTestPartResultReporterTest941,29312
TEST_F(ScopedFakeTestPartResultReporterTest, InterceptOnlyCurrentThread) {TEST_F945,29546
TEST_F(ExpectFailureTest, ExpectFatalFailureOnAllThreads) {TEST_F961,30077
TEST_F(ExpectFailureTest, ExpectNonFatalFailureOnAllThreads) {TEST_F975,30729
class DynamicFixture : public testing::Test {DynamicFixture990,31442
  DynamicFixture() { printf("DynamicFixture()\n"); }DynamicFixture992,31500
  static void SetUpTestSuite() { printf("DynamicFixture::SetUpTestSuite\n"); }SetUpTestSuite997,31750
  static void TearDownTestSuite() {TearDownTestSuite998,31829
class DynamicTest : public DynamicFixture {DynamicTest1004,31945
auto dynamic_test = (dynamic_test1009,32052
class FooEnvironment : public testing::Environment {FooEnvironment1043,33709
class BarEnvironment : public testing::Environment {BarEnvironment1053,33987
class TestSuiteThatFailsToSetUp : public testing::Test {TestSuiteThatFailsToSetUp1063,34276
  static void SetUpTestSuite() { EXPECT_TRUE(false); }SetUpTestSuite1065,34342
TEST_F(TestSuiteThatFailsToSetUp, ShouldNotRun) {TEST_F1067,34400
int main(int argc, char **argv) {main1076,34666

test/googletest/googletest/test/gtest_test_macro_stack_footprint_test.cc,182
#define TEN_TESTS_(TEN_TESTS_41,2050
#define HUNDRED_TESTS_(HUNDRED_TESTS_54,2445
#define THOUSAND_TESTS_(THOUSAND_TESTS_67,2962
int main(int argc, char **argv) {main83,3576

test/googletest/googletest/test/gtest_xml_test_utils.py,422
GTEST_DEFAULT_OUTPUT_FILE = 'test_detail.xml'GTEST_DEFAULT_OUTPUT_FILE36,1646
class GTestXMLTestCase(gtest_test_utils.TestCase):GTestXMLTestCase38,1693
  def AssertEquivalentNodes(self, expected_node, actual_node):AssertEquivalentNodes44,1824
  identifying_attribute = {identifying_attribute103,4698
  def _GetChildren(self, element):_GetChildren112,4894
  def NormalizeXml(self, element):NormalizeXml153,6925

test/googletest/googletest/test/googletest-catch-exceptions-test_.cc,3390
class SehExceptionInConstructorTest : public Test {SehExceptionInConstructorTest53,1999
  SehExceptionInConstructorTest() { RaiseException(42, 0, 0, NULL); }SehExceptionInConstructorTest55,2060
TEST_F(SehExceptionInConstructorTest, ThrowsExceptionInConstructor) {}TEST_F58,2134
class SehExceptionInDestructorTest : public Test {SehExceptionInDestructorTest60,2206
  ~SehExceptionInDestructorTest() { RaiseException(42, 0, 0, NULL); }~SehExceptionInDestructorTest62,2266
TEST_F(SehExceptionInDestructorTest, ThrowsExceptionInDestructor) {}TEST_F65,2340
class SehExceptionInSetUpTestSuiteTest : public Test {SehExceptionInSetUpTestSuiteTest67,2410
  static void SetUpTestSuite() { RaiseException(42, 0, 0, NULL); }SetUpTestSuite69,2474
TEST_F(SehExceptionInSetUpTestSuiteTest, ThrowsExceptionInSetUpTestSuite) {}TEST_F72,2545
class SehExceptionInTearDownTestSuiteTest : public Test {SehExceptionInTearDownTestSuiteTest74,2623
  static void TearDownTestSuite() { RaiseException(42, 0, 0, NULL); }TearDownTestSuite76,2690
TEST_F(SehExceptionInTearDownTestSuiteTest,TEST_F79,2764
class SehExceptionInSetUpTest : public Test {SehExceptionInSetUpTest82,2855
  virtual void SetUp() { RaiseException(42, 0, 0, NULL); }SetUp84,2913
TEST_F(SehExceptionInSetUpTest, ThrowsExceptionInSetUp) {}TEST_F87,2976
class SehExceptionInTearDownTest : public Test {SehExceptionInTearDownTest89,3036
  virtual void TearDown() { RaiseException(42, 0, 0, NULL); }TearDown91,3097
TEST_F(SehExceptionInTearDownTest, ThrowsExceptionInTearDown) {}TEST_F94,3163
TEST(SehExceptionTest, ThrowsSehException) {TEST96,3229
class CxxExceptionInConstructorTest : public Test {CxxExceptionInConstructorTest104,3363
  CxxExceptionInConstructorTest() {CxxExceptionInConstructorTest106,3424
  static void TearDownTestSuite() {TearDownTestSuite113,3680
TEST_F(CxxExceptionInConstructorTest, ThrowsExceptionInConstructor) {TEST_F136,4300
class CxxExceptionInSetUpTestSuiteTest : public Test {CxxExceptionInSetUpTestSuiteTest141,4478
  CxxExceptionInSetUpTestSuiteTest() {CxxExceptionInSetUpTestSuiteTest143,4542
  static void SetUpTestSuite() {SetUpTestSuite149,4699
  static void TearDownTestSuite() {TearDownTestSuite153,4793
TEST_F(CxxExceptionInSetUpTestSuiteTest, ThrowsExceptionInSetUpTestSuite) {TEST_F179,5425
class CxxExceptionInTearDownTestSuiteTest : public Test {CxxExceptionInTearDownTestSuiteTest185,5609
  static void TearDownTestSuite() {TearDownTestSuite187,5676
TEST_F(CxxExceptionInTearDownTestSuiteTest,TEST_F192,5776
class CxxExceptionInSetUpTest : public Test {CxxExceptionInSetUpTest195,5867
  static void TearDownTestSuite() {TearDownTestSuite197,5922
TEST_F(CxxExceptionInSetUpTest, ThrowsExceptionInSetUp) {TEST_F219,6458
class CxxExceptionInTearDownTest : public Test {CxxExceptionInTearDownTest224,6618
  static void TearDownTestSuite() {TearDownTestSuite226,6676
TEST_F(CxxExceptionInTearDownTest, ThrowsExceptionInTearDown) {}TEST_F244,7092
class CxxExceptionInTestBodyTest : public Test {CxxExceptionInTestBodyTest246,7158
  static void TearDownTestSuite() {TearDownTestSuite248,7216
TEST_F(CxxExceptionInTestBodyTest, ThrowsStdCxxException) {TEST_F268,7683
TEST(CxxExceptionTest, ThrowsNonStdCxxException) {TEST272,7800
void TerminateHandler() {TerminateHandler279,8040
int main(int argc, char** argv) {main287,8211

test/googletest/googletest/test/gtest_throw_on_failure_ex_test.cc,166
void Fail(const char* msg) {Fail44,1943
void TestFailureThrowsRuntimeError() {TestFailureThrowsRuntimeError52,2115
int main(int argc, char** argv) {main79,2951

test/googletest/googletest/test/gtest_xml_outfile1_test_.cc,120
class PropertyOne : public testing::Test {PropertyOne35,1685
TEST_F(PropertyOne, TestSomeProperties) {TEST_F41,1870

test/googletest/googletest/test/gtest_assert_by_exception_test.cc,351
class ThrowListener : public testing::EmptyTestEventListener {ThrowListener40,1739
void Fail(const char* msg) {Fail52,2213
static void AssertFalse() {AssertFalse58,2306
TEST(Test, Test) {TEST64,2457
int kTestForContinuingTest = 0;kTestForContinuingTest96,3337
TEST(Test, Test2) {TEST98,3370
int main(int argc, char** argv) {main102,3423

test/googletest/googletest/test/googletest-param-test-invalid-name1-test_.cc,176
class DummyTest : public ::testing::TestWithParam<const char *> {};DummyTest34,1596
TEST_P(DummyTest, Dummy) {TEST_P36,1665
int main(int argc, char *argv[]) {main46,1919

test/googletest/googletest/test/googletest-break-on-failure-unittest_.cc,142
TEST(Foo, Bar) {TEST51,2101
LONG WINAPI ExitWithExceptionCode(ExitWithExceptionCode57,2252
int main(int argc, char **argv) {main65,2428

test/googletest/googletest/test/gtest_help_test_.cc,142
TEST(HelpFlagTest, ShouldNotBeRun) {TEST39,1861
TEST(DeathTest, UsedByPythonScriptToDetectSupportForDeathTestsInThisBinary) {}TEST44,2002

test/googletest/googletest/test/googletest-port-test.cc,10087
namespace testing {testing51,1987
namespace internal {internal52,2007
TEST(IsXDigitTest, WorksForNarrowAscii) {TEST54,2029
TEST(IsXDigitTest, ReturnsFalseForNarrowNonAscii) {TEST67,2348
TEST(IsXDigitTest, WorksForWideAscii) {TEST72,2515
TEST(IsXDigitTest, ReturnsFalseForWideNonAscii) {TEST85,2841
class Base {Base91,3071
  Base() : member_(0) {}Base93,3093
  explicit Base(int n) : member_(n) {}Base94,3118
  virtual ~Base() {}~Base97,3230
  int member() { return member_; }member98,3251
  int member_;member_101,3297
class Derived : public Base {Derived104,3316
  explicit Derived(int n) : Base(n) {}Derived106,3355
TEST(ImplicitCastTest, ConvertsPointers) {TEST109,3398
TEST(ImplicitCastTest, CanUseInheritance) {TEST114,3546
class Castable {Castable120,3726
  explicit Castable(bool* converted) : converted_(converted) {}Castable122,3752
  operator Base() {operator Base123,3816
  bool* converted_;converted_129,3894
TEST(ImplicitCastTest, CanUseNonConstCastOperator) {TEST132,3918
class ConstCastable {ConstCastable139,4125
  explicit ConstCastable(bool* converted) : converted_(converted) {}ConstCastable141,4156
  operator Base() const {operator Base142,4225
  bool* converted_;converted_148,4309
TEST(ImplicitCastTest, CanUseConstCastOperatorOnConstValues) {TEST151,4333
class ConstAndNonConstCastable {ConstAndNonConstCastable158,4573
  ConstAndNonConstCastable(bool* converted, bool* const_converted)ConstAndNonConstCastable160,4615
  operator Base() {operator Base162,4750
  operator Base() const {operator Base166,4817
  bool* converted_;converted_172,4907
  bool* const_converted_;const_converted_173,4927
TEST(ImplicitCastTest, CanSelectBetweenConstAndNonConstCasrAppropriately) {TEST176,4957
class To {To192,5540
  To(bool* converted) { *converted = true; }  // NOLINTTo194,5560
TEST(ImplicitCastTest, CanUseImplicitConstructor) {TEST197,5620
TEST(GtestCheckSyntaxTest, BehavesLikeASingleStatement) {TEST211,6053
TEST(GtestCheckSyntaxTest, WorksWithSwitch) {TEST230,6451
TEST(FormatFileLocationTest, FormatsFileLocation) {TEST244,6712
TEST(FormatFileLocationTest, FormatsUnknownFile) {TEST249,6923
TEST(FormatFileLocationTest, FormatsUknownLine) {TEST255,7159
TEST(FormatFileLocationTest, FormatsUknownFileAndLine) {TEST259,7270
TEST(FormatCompilerIndependentFileLocationTest, FormatsFileLocation) {TEST264,7456
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFile) {TEST268,7609
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownLine) {TEST273,7777
TEST(FormatCompilerIndependentFileLocationTest, FormatsUknownFileAndLine) {TEST277,7925
void* ThreadFunc(void* data) {ThreadFunc284,8295
TEST(GetThreadCountTest, ReturnsCorrectValue) {TEST291,8447
TEST(GetThreadCountTest, ReturnsZeroWhenUnableToCountThreads) {TEST349,10433
TEST(GtestCheckDeathTest, DiesWithCorrectOutputOnFailure) {TEST354,10613
TEST(GtestCheckDeathTest, LivesSilentlyOnSuccess) {TEST372,11111
TEST(RegexEngineSelectionTest, SelectsCorrectRegexEngine) {TEST385,11577
class RETest : public ::testing::Test {};RETest402,11854
typedef testing::Types< ::std::string, const char*> StringTypes;StringTypes406,11979
TYPED_TEST(RETest, ImplicitConstructorWorks) {TYPED_TEST411,12122
TYPED_TEST(RETest, RejectsInvalidRegex) {TYPED_TEST423,12482
TYPED_TEST(RETest, FullMatchWorks) {TYPED_TEST430,12684
TYPED_TEST(RETest, PartialMatchWorks) {TYPED_TEST443,13137
TEST(IsInSetTest, NulCharIsNotInAnySet) {TEST458,13663
TEST(IsInSetTest, WorksForNonNulChars) {TEST464,13816
TEST(IsAsciiDigitTest, IsFalseForNonDigit) {TEST472,14002
TEST(IsAsciiDigitTest, IsTrueForDigit) {TEST481,14261
TEST(IsAsciiPunctTest, IsFalseForNonPunct) {TEST488,14441
TEST(IsAsciiPunctTest, IsTrueForPunct) {TEST496,14666
TEST(IsRepeatTest, IsFalseForNonRepeatChar) {TEST502,14822
TEST(IsRepeatTest, IsTrueForRepeatChar) {TEST510,15027
TEST(IsAsciiWhiteSpaceTest, IsFalseForNonWhiteSpace) {TEST516,15162
TEST(IsAsciiWhiteSpaceTest, IsTrueForWhiteSpace) {TEST524,15421
TEST(IsAsciiWordCharTest, IsFalseForNonWordChar) {TEST533,15714
TEST(IsAsciiWordCharTest, IsTrueForLetter) {TEST541,15960
TEST(IsAsciiWordCharTest, IsTrueForDigit) {TEST548,16156
TEST(IsAsciiWordCharTest, IsTrueForUnderscore) {TEST555,16351
TEST(IsValidEscapeTest, IsFalseForNonPrintable) {TEST559,16440
TEST(IsValidEscapeTest, IsFalseForDigit) {TEST564,16569
TEST(IsValidEscapeTest, IsFalseForWhiteSpace) {TEST569,16687
TEST(IsValidEscapeTest, IsFalseForSomeLetter) {TEST574,16811
TEST(IsValidEscapeTest, IsTrueForPunct) {TEST579,16934
TEST(IsValidEscapeTest, IsTrueForSomeLetter) {TEST590,17259
TEST(AtomMatchesCharTest, EscapedPunct) {TEST599,17519
TEST(AtomMatchesCharTest, Escaped_d) {TEST611,17958
TEST(AtomMatchesCharTest, Escaped_D) {TEST620,18245
TEST(AtomMatchesCharTest, Escaped_s) {TEST629,18531
TEST(AtomMatchesCharTest, Escaped_S) {TEST640,18917
TEST(AtomMatchesCharTest, Escaped_w) {TEST649,19204
TEST(AtomMatchesCharTest, Escaped_W) {TEST661,19637
TEST(AtomMatchesCharTest, EscapedWhiteSpace) {TEST672,20022
TEST(AtomMatchesCharTest, UnescapedDot) {TEST691,20816
TEST(AtomMatchesCharTest, UnescapedChar) {TEST700,21110
TEST(ValidateRegexTest, GeneratesFailureAndReturnsFalseForInvalid) {TEST710,21455
TEST(ValidateRegexTest, ReturnsTrueForValid) {TEST746,23517
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrOne) {TEST757,23891
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForZeroOrMany) {TEST769,24408
TEST(MatchRepetitionAndRegexAtHeadTest, WorksForOneOrMany) {TEST780,24857
TEST(MatchRegexAtHeadTest, ReturnsTrueForEmptyRegex) {TEST791,25306
TEST(MatchRegexAtHeadTest, WorksWhenDollarIsInRegex) {TEST796,25448
TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithEscapeSequence) {TEST803,25637
TEST(MatchRegexAtHeadTest, WorksWhenRegexStartsWithRepetition) {TEST811,25898
TEST(MatchRegexAtHeadTest,TEST820,26205
TEST(MatchRegexAtHeadTest, MatchesSequentially) {TEST831,26591
TEST(MatchRegexAnywhereTest, ReturnsFalseWhenStringIsNull) {TEST837,26749
TEST(MatchRegexAnywhereTest, WorksWhenRegexStartsWithCaret) {TEST841,26859
TEST(MatchRegexAnywhereTest, ReturnsFalseWhenNoMatch) {TEST850,27158
TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingPrefix) {TEST855,27329
TEST(MatchRegexAnywhereTest, ReturnsTrueWhenMatchingNonPrefix) {TEST861,27555
TEST(RETest, ImplicitConstructorWorks) {TEST867,27774
TEST(RETest, RejectsInvalidRegex) {TEST876,28017
TEST(RETest, FullMatchWorks) {TEST891,28386
TEST(RETest, PartialMatchWorks) {TEST907,28807
TEST(CaptureTest, CapturesStdout) {TEST924,29262
TEST(CaptureTest, CapturesStderr) {TEST934,29534
TEST(CaptureTest, CapturesStdoutAndStderr) {TEST945,29879
TEST(CaptureDeathTest, CannotReenterStdoutCapture) {TEST954,30121
TEST(ThreadLocalTest, DefaultConstructorInitializesToDefaultValues) {TEST966,30466
TEST(ThreadLocalTest, SingleParamConstructorInitializesToParam) {TEST974,30650
class NoDefaultContructor {NoDefaultContructor983,30844
  explicit NoDefaultContructor(const char*) {}NoDefaultContructor985,30881
  NoDefaultContructor(const NoDefaultContructor&) {}NoDefaultContructor986,30928
TEST(ThreadLocalTest, ValueDefaultContructorIsNotRequiredForParamVersion) {TEST989,30985
TEST(ThreadLocalTest, GetAndPointerReturnSameValue) {TEST994,31149
TEST(ThreadLocalTest, PointerAndConstPointerReturnSameValue) {TEST1004,31497
void AddTwo(int* param) { *param += 2; }AddTwo1017,31923
TEST(ThreadWithParamTest, ConstructorExecutesThreadFunc) {TEST1019,31965
TEST(MutexDeathTest, AssertHeldShouldAssertWhenNotLocked) {TEST1026,32132
TEST(MutexTest, AssertHeldShouldNotAssertWhenLocked) {TEST1037,32438
class AtomicCounterWithMutex {AtomicCounterWithMutex1043,32547
  explicit AtomicCounterWithMutex(Mutex* mutex) :AtomicCounterWithMutex1045,32587
  void Increment() {Increment1048,32683
  int value() const { return value_; }value1080,34003
  volatile int value_;value_1083,34053
  Mutex* const mutex_;  // Protects value_.mutex_1084,34076
  Random       random_;random_1085,34120
void CountingThreadFunc(pair<AtomicCounterWithMutex*, int> param) {CountingThreadFunc1088,34148
TEST(MutexTest, OnlyOneThreadCanLockAtATime) {TEST1094,34359
void RunFromThread(void (func)(T), T param) {RunFromThread1123,35551
void RetrieveThreadLocalValue(RetrieveThreadLocalValue1128,35668
TEST(ThreadLocalTest, ParameterizedConstructorSetsDefault) {TEST1133,35799
class DestructorCall {DestructorCall1148,36377
  DestructorCall() {DestructorCall1150,36409
  bool CheckDestroyed() const {CheckDestroyed1158,36593
  void ReportDestroyed() {ReportDestroyed1166,36772
  static std::vector<DestructorCall*>& List() { return *list_; }List1173,36888
  static void ResetList() {ResetList1175,36954
  bool invoked_;invoked_1183,37099
  AutoHandle wait_event_;wait_event_1185,37137
  static std::vector<DestructorCall*>* const list_;list_1187,37170
std::vector<DestructorCall*>* const DestructorCall::list_ =list_1192,37278
class DestructorTracker {DestructorTracker1197,37459
  DestructorTracker() : index_(GetNewIndex()) {}DestructorTracker1199,37494
  DestructorTracker(const DestructorTracker& /* rhs */)DestructorTracker1200,37543
  ~DestructorTracker() {~DestructorTracker1202,37632
  static size_t GetNewIndex() {GetNewIndex1209,37848
  const size_t index_;index_1213,37988
typedef ThreadLocal<DestructorTracker>* ThreadParam;ThreadParam1216,38015
void CallThreadLocalGet(ThreadParam thread_local_param) {CallThreadLocalGet1218,38069
TEST(ThreadLocalTest, DestroysManagedObjectForOwnThreadWhenDying) {TEST1224,38268
TEST(ThreadLocalTest, DestroysManagedObjectAtThreadExit) {TEST1246,38979
TEST(ThreadLocalTest, ThreadLocalMutationsAffectOnlyCurrentThread) {TEST1270,39808
TEST(WindowsTypesTest, HANDLEIsVoidStar) {TEST1284,40229
TEST(WindowsTypesTest, _CRITICAL_SECTIONIs_CRITICAL_SECTION) {TEST1289,40378
TEST(WindowsTypesTest, CRITICAL_SECTIONIs_RTL_CRITICAL_SECTION) {TEST1293,40510

test/googletest/googletest/test/googletest-test-part-test.cc,1595
class TestPartResultTest : public Test {TestPartResultTest44,1828
  TestPartResultTest()TestPartResultTest46,1881
  TestPartResult r1_, r2_, r3_, r4_;r1_52,2187
  TestPartResult r1_, r2_, r3_, r4_;r2_52,2187
  TestPartResult r1_, r2_, r3_, r4_;r3_52,2187
  TestPartResult r1_, r2_, r3_, r4_;r4_52,2187
TEST_F(TestPartResultTest, ConstructorWorks) {TEST_F56,2229
TEST_F(TestPartResultTest, ResultAccessorsWork) {TEST_F74,2951
TEST_F(TestPartResultTest, type) {TEST_F114,4536
TEST_F(TestPartResultTest, file_name) {TEST_F122,4826
TEST_F(TestPartResultTest, line_number) {TEST_F129,5045
TEST_F(TestPartResultTest, message) {TEST_F136,5233
TEST_F(TestPartResultTest, Passed) {TEST_F142,5395
TEST_F(TestPartResultTest, Failed) {TEST_F150,5589
TEST_F(TestPartResultTest, Skipped) {TEST_F158,5782
TEST_F(TestPartResultTest, FatallyFailed) {TEST_F166,5989
TEST_F(TestPartResultTest, NonfatallyFailed) {TEST_F174,6233
class TestPartResultArrayTest : public Test {TestPartResultArrayTest183,6487
  TestPartResultArrayTest()TestPartResultArrayTest185,6545
  const TestPartResult r1_, r2_;r1_189,6729
  const TestPartResult r1_, r2_;r2_189,6729
TEST_F(TestPartResultArrayTest, InitialSizeIsZero) {TEST_F193,6822
TEST_F(TestPartResultArrayTest, ContainsGivenResultAfterAppend) {TEST_F200,7042
TEST_F(TestPartResultArrayTest, ContainsGivenResultsAfterTwoAppends) {TEST_F209,7369
typedef TestPartResultArrayTest TestPartResultArrayDeathTest;TestPartResultArrayDeathTest218,7690
TEST_F(TestPartResultArrayDeathTest, DiesWhenIndexIsOutOfBound) {TEST_F222,7845

test/googletest/googletest/test/gtest_repeat_test.cc,1417
#define GTEST_CHECK_INT_EQ_(GTEST_CHECK_INT_EQ_42,1822
int g_environment_set_up_count = 0;g_environment_set_up_count59,2448
int g_environment_tear_down_count = 0;g_environment_tear_down_count60,2484
class MyEnvironment : public testing::Environment {MyEnvironment62,2524
  MyEnvironment() {}MyEnvironment64,2585
int g_should_fail_count = 0;g_should_fail_count71,2761
TEST(FooTest, ShouldFail) {TEST73,2791
int g_should_pass_count = 0;g_should_pass_count80,2918
TEST(FooTest, ShouldPass) {TEST82,2948
int g_death_test_count = 0;g_death_test_count89,3097
TEST(BarDeathTest, ThreadSafeAndFast) {TEST91,3126
int g_param_test_count = 0;g_param_test_count101,3429
const int kNumberOfParamTests = 10;kNumberOfParamTests103,3458
class MyParamTest : public testing::TestWithParam<int> {};MyParamTest105,3495
TEST_P(MyParamTest, ShouldPass) {TEST_P107,3555
void ResetCounts() {ResetCounts116,3874
void CheckCounts(int expected) {CheckCounts126,4127
void TestRepeatUnspecified() {TestRepeatUnspecified136,4599
void TestRepeat(int repeat) {TestRepeat143,4789
void TestRepeatWithEmptyFilter(int repeat) {TestRepeatWithEmptyFilter153,5043
void TestRepeatWithFilterForSuccessfulTests(int repeat) {TestRepeatWithFilterForSuccessfulTests164,5328
void TestRepeatWithFilterForFailedTests(int repeat) {TestRepeatWithFilterForFailedTests180,5957
int main(int argc, char **argv) {main196,6479

test/googletest/googletest/test/googletest-setuptestsuite-test.py,239
COMMAND = gtest_test_utils.GetTestExecutablePath(COMMAND36,1656
class GTestSetUpTestSuiteTest(gtest_test_utils.TestCase):GTestSetUpTestSuiteTest40,1747
  def testSetupErrorAndTearDownError(self):testSetupErrorAndTearDownError42,1806

test/googletest/googletest/test/gtest-typed-test_test.cc,4233
class CommonTest : public Test {CommonTest49,2010
  static void SetUpTestSuite() {SetUpTestSuite53,2146
  static void TearDownTestSuite() {TearDownTestSuite57,2208
  typedef std::vector<T> Vector;Vector67,2546
  typedef std::set<int> IntSet;IntSet68,2579
  CommonTest() : value_(1) {}CommonTest70,2612
  T value_;value_84,2840
  static T* shared_;shared_85,2852
T* CommonTest<T>::shared_ = nullptr;shared_89,2899
typedef Types<char, int> TwoTypes;TwoTypes96,3088
TYPED_TEST(CommonTest, ValuesAreCorrect) {TYPED_TEST99,3164
TYPED_TEST(CommonTest, ValuesAreStillCorrect) {TYPED_TEST119,3823
class TypedTest1 : public Test {TypedTest1133,4261
TYPED_TEST(TypedTest1, A) {}TYPED_TEST139,4415
class TypedTest2 : public Test {TypedTest2142,4467
TYPED_TEST(TypedTest2, A) {}TYPED_TEST151,4731
namespace library1 {library1155,4825
class NumericTest : public Test {NumericTest158,4869
typedef Types<int, long> NumericTypes;NumericTypes161,4907
TYPED_TEST(NumericTest, DefaultIsZero) {TYPED_TEST164,4992
class TypedTestWithNames : public Test {};TypedTestWithNames172,5146
class TypedTestNames {TypedTestNames174,5190
  static std::string GetName(int i) {GetName177,5246
TYPED_TEST(TypedTestWithNames, TestSuiteName) {TYPED_TEST189,5575
class TypedTestSuitePStateTest : public Test {TypedTestSuitePStateTest209,6192
  TypedTestSuitePState state_;state_217,6441
TEST_F(TypedTestSuitePStateTest, SucceedsForMatchingList) {TEST_F220,6476
TEST_F(TypedTestSuitePStateTest, IgnoresOrderAndSpaces) {TEST_F228,6754
TEST_F(TypedTestSuitePStateDeathTest, DetectsDuplicates) {TEST_F236,7009
TEST_F(TypedTestSuitePStateDeathTest, DetectsExtraTest) {TEST_F242,7235
TEST_F(TypedTestSuitePStateDeathTest, DetectsMissedTest) {TEST_F248,7476
TEST_F(TypedTestSuitePStateDeathTest, DetectsTestAfterRegistration) {TEST_F256,7818
class DerivedTest : public CommonTest<T> {DerivedTest268,8326
TYPED_TEST_SUITE_P(DerivedTest);DerivedTest271,8373
TYPED_TEST_P(DerivedTest, ValuesAreCorrect) {TYPED_TEST_P273,8407
TYPED_TEST_P(DerivedTest, ValuesAreStillCorrect) {TYPED_TEST_P285,8822
typedef Types<short, long> MyTwoTypes;MyTwoTypes296,9177
class TypeParametrizedTestWithNames : public Test {};TypeParametrizedTestWithNames302,9404
TYPED_TEST_SUITE_P(TypeParametrizedTestWithNames);TypeParametrizedTestWithNames304,9459
TYPED_TEST_P(TypeParametrizedTestWithNames, TestSuiteName) {TYPED_TEST_P306,9511
class TypeParametrizedTestNames {TypeParametrizedTestNames323,10165
  static std::string GetName(int i) {GetName326,10232
class TypedTestP1 : public Test {TypedTestP1343,10760
TYPED_TEST_SUITE_P(TypedTestP1);TypedTestP1346,10798
TYPED_TEST_P(TypedTestP1, A) {}TYPED_TEST_P352,10982
TYPED_TEST_P(TypedTestP1, B) {}TYPED_TEST_P353,11014
class TypedTestP2 : public Test {TypedTestP2362,11286
TYPED_TEST_SUITE_P(TypedTestP2);TypedTestP2365,11324
TYPED_TEST_P(TypedTestP2, A) {}TYPED_TEST_P369,11464
IntAfterTypedTestSuiteP after = 0;after375,11667
IntBeforeRegisterTypedTestSuiteP before = 0;before376,11702
typedef Types<std::vector<double>, std::set<char> > MyContainers;MyContainers390,12376
namespace library2 {library2396,12605
class NumericTest : public Test {NumericTest399,12649
TYPED_TEST_P(NumericTest, DefaultIsZero) {TYPED_TEST_P404,12721
TYPED_TEST_P(NumericTest, ZeroIsLessThanOne) {TYPED_TEST_P408,12796
typedef Types<int, double> NumericTypes;NumericTypes414,12990
static const char* GetTestName() {GetTestName417,13095
template <typename T> class TrimmedTest : public Test { };TrimmedTest421,13251
TYPED_TEST_P(TrimmedTest, Test1) { EXPECT_STREQ("Test1", GetTestName()); }TYPED_TEST_P423,13343
TYPED_TEST_P(TrimmedTest, Test2) { EXPECT_STREQ("Test2", GetTestName()); }TYPED_TEST_P424,13418
TYPED_TEST_P(TrimmedTest, Test3) { EXPECT_STREQ("Test3", GetTestName()); }TYPED_TEST_P425,13493
TYPED_TEST_P(TrimmedTest, Test4) { EXPECT_STREQ("Test4", GetTestName()); }TYPED_TEST_P426,13568
TYPED_TEST_P(TrimmedTest, Test5) { EXPECT_STREQ("Test5", GetTestName()); }TYPED_TEST_P427,13643
template <typename T1, typename T2> struct MyPair {};MyPair431,13816
typedef Types<int, double, MyPair<int, int> > TrimTypes;TrimTypes433,13945

test/googletest/googletest/test/googletest-death-test_ex_test.cc,327
TEST(CxxExceptionDeathTest, ExceptionIsFailure) {TEST50,2027
class TestException : public std::exception {TestException60,2381
TEST(CxxExceptionDeathTest, PrintsMessageForStdExceptions) {TEST65,2519
TEST(SehExceptionDeasTest, CatchExceptionsDoesNotInterfere) {TEST79,3163
int main(int argc, char** argv) {main88,3426

test/googletest/googletest/test/googletest-filepath-test.cc,5234
namespace testing {testing48,2070
namespace internal {internal49,2090
int remove(const char* path) {remove55,2203
int _rmdir(const char* path) {_rmdir62,2404
TEST(IsEmptyTest, ReturnsTrueForEmptyPath) {TEST97,3235
TEST(IsEmptyTest, ReturnsFalseForNonEmptyPath) {TEST101,3322
TEST(RemoveDirectoryNameTest, WhenEmptyName) {TEST109,3577
TEST(RemoveDirectoryNameTest, ButNoDirectory) {TEST114,3731
TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileName) {TEST120,3903
TEST(RemoveDirectoryNameTest, WhereThereIsNoFileName) {TEST126,4097
TEST(RemoveDirectoryNameTest, ShouldGiveFileName) {TEST132,4291
TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileName) {TEST138,4501
TEST(RemoveDirectoryNameTest, RootFileShouldGiveFileNameForAlternateSeparator) {TEST150,4853
TEST(RemoveDirectoryNameTest, WhereThereIsNoFileNameForAlternateSeparator) {TEST155,5048
TEST(RemoveDirectoryNameTest, ShouldGiveFileNameForAlternateSeparator) {TEST160,5243
TEST(RemoveDirectoryNameTest, ShouldAlsoGiveFileNameForAlternateSeparator) {TEST165,5451
TEST(RemoveFileNameTest, EmptyName) {TEST173,5664
TEST(RemoveFileNameTest, ButNoFile) {TEST183,5989
TEST(RemoveFileNameTest, GivesDirName) {TEST189,6175
TEST(RemoveFileNameTest, GivesDirAndSubDirName) {TEST195,6392
TEST(RemoveFileNameTest, GivesRootDir) {TEST202,6647
TEST(RemoveFileNameTest, ButNoFileForAlternateSeparator) {TEST213,6937
TEST(RemoveFileNameTest, GivesDirNameForAlternateSeparator) {TEST219,7136
TEST(RemoveFileNameTest, GivesDirAndSubDirNameForAlternateSeparator) {TEST225,7357
TEST(RemoveFileNameTest, GivesRootDirForAlternateSeparator) {TEST231,7597
TEST(MakeFileNameTest, GenerateWhenNumberIsZero) {TEST237,7746
TEST(MakeFileNameTest, GenerateFileNameNumberGtZero) {TEST243,7957
TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberIsZero) {TEST249,8176
TEST(MakeFileNameTest, GenerateFileNameWithSlashNumberGtZero) {TEST255,8416
TEST(MakeFileNameTest, GenerateWhenNumberIsZeroAndDirIsEmpty) {TEST261,8660
TEST(MakeFileNameTest, GenerateWhenNumberIsNotZeroAndDirIsEmpty) {TEST267,8859
TEST(ConcatPathsTest, WorksWhenDirDoesNotEndWithPathSep) {TEST273,9065
TEST(ConcatPathsTest, WorksWhenPath1EndsWithPathSep) {TEST279,9313
TEST(ConcatPathsTest, Path1BeingEmpty) {TEST285,9573
TEST(ConcatPathsTest, Path2BeingEmpty) {TEST291,9778
TEST(ConcatPathsTest, BothPathBeingEmpty) {TEST296,9949
TEST(ConcatPathsTest, Path1ContainsPathSep) {TEST302,10143
TEST(ConcatPathsTest, Path2ContainsPathSep) {TEST309,10440
TEST(ConcatPathsTest, Path2EndsWithPathSep) {TEST317,10718
TEST(RemoveTrailingPathSeparatorTest, EmptyString) {TEST324,11017
TEST(RemoveTrailingPathSeparatorTest, FileNoSlashString) {TEST329,11189
TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveTrailingSeparator) {TEST334,11374
TEST(RemoveTrailingPathSeparatorTest, ShouldRemoveLastSeparator) {TEST343,11714
TEST(RemoveTrailingPathSeparatorTest, ShouldReturnUnmodified) {TEST350,12003
TEST(DirectoryTest, RootDirectoryExists) {TEST356,12219
TEST(DirectoryTest, RootOfWrongDriveDoesNotExists) {TEST370,12657
TEST(DirectoryTest, EmptyPathDirectoryDoesNotExist) {TEST389,13291
TEST(DirectoryTest, CurrentDirectoryExists) {TEST394,13432
TEST(NormalizeTest, MultipleConsecutiveSepaparatorsInMidstring) {TEST409,13887
TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringStart) {TEST420,14363
TEST(NormalizeTest, MultipleConsecutiveSepaparatorsAtStringEnd) {TEST430,14760
TEST(NormalizeTest, MixAlternateSeparatorAtStringEnd) {TEST444,15292
TEST(AssignmentOperatorTest, DefaultAssignedToNonDefault) {TEST455,15620
TEST(AssignmentOperatorTest, NonDefaultAssignedToDefault) {TEST463,15890
TEST(AssignmentOperatorTest, ConstAssignedToNonConst) {TEST471,16168
class DirectoryCreationTest : public Test {DirectoryCreationTest478,16410
  void CreateTextFile(const char* filename) {CreateTextFile504,17264
  FilePath testdata_path_;  // "/tmp/directory_creation/test/"testdata_path_513,17609
  FilePath testdata_file_;  // "/tmp/directory_creation/test"testdata_file_514,17672
  FilePath unique_file0_;  // "/tmp/directory_creation/test/unique.txt"unique_file0_515,17734
  FilePath unique_file1_;  // "/tmp/directory_creation/test/unique_1.txt"unique_file1_516,17806
TEST_F(DirectoryCreationTest, CreateDirectoriesRecursively) {TEST_F519,17884
TEST_F(DirectoryCreationTest, CreateDirectoriesForAlreadyExistingPath) {TEST_F525,18137
TEST_F(DirectoryCreationTest, CreateDirectoriesAndUniqueFilename) {TEST_F532,18464
TEST_F(DirectoryCreationTest, CreateDirectoriesFail) {TEST_F551,19305
TEST(NoDirectoryCreationTest, CreateNoDirectoriesForDefaultXmlFile) {TEST559,19653
TEST(FilePathTest, DefaultConstructor) {TEST564,19843
TEST(FilePathTest, CharAndCopyConstructors) {TEST569,19932
TEST(FilePathTest, StringConstructor) {TEST577,20117
TEST(FilePathTest, Set) {TEST582,20238
TEST(FilePathTest, ToString) {TEST590,20477
TEST(FilePathTest, RemoveExtension) {TEST595,20580
TEST(FilePathTest, RemoveExtensionWhenThereIsNoExtension) {TEST601,20838
TEST(FilePathTest, IsDirectory) {TEST605,20970
TEST(FilePathTest, IsAbsolutePath) {TEST613,21203
TEST(FilePathTest, IsRootDirectory) {TEST628,21854

test/googletest/googletest/test/gtest_skip_test.cc,184
TEST(SkipTest, DoesSkip) {TEST37,1665
class Fixture : public Test {Fixture42,1756
TEST_F(Fixture, SkipsOneTest) {TEST_F49,1891
TEST_F(Fixture, SkipsAnotherTest) {TEST_F53,1945

test/googletest/googletest/test/googletest-global-environment-unittest_.cc,248
class FailingEnvironment final : public ::testing::Environment {final40,1795
auto* const g_environment_ =g_environment_46,1974
TEST(SomeTest, DoesFoo) { FAIL() << "Unexpected call"; }TEST50,2106
int main(int argc, char** argv) {main54,2181

test/googletest/googletest/test/gtest_sole_header_test.cc,163
void Subroutine() {Subroutine38,1707
TEST(NoFatalFailureTest, ExpectNoFatalFailure) {TEST42,1751
TEST(NoFatalFailureTest, AssertNoFatalFailure) {TEST49,1955

test/googletest/googletest/test/gtest-typed-test2_test.cc,0

test/googletest/googletest/test/gtest_unittest.cc,55514
TEST(CommandLineFlagsTest, CanBeAccessedInCodeOnceGTestHIsIncluded) {TEST39,1843
namespace testing {testing72,3039
namespace internal {internal73,3059
class StreamingListenerTest : public Test {StreamingListenerTest77,3112
  class FakeSocketWriter : public StreamingListener::AbstractSocketWriter {FakeSocketWriter79,3165
    std::string output_;output_84,3365
  StreamingListenerTest()StreamingListenerTest87,3396
  std::string* output() { return &(fake_sock_writer_->output_); }output94,3659
  FakeSocketWriter* const fake_sock_writer_;fake_sock_writer_96,3726
  StreamingListener streamer_;streamer_97,3771
  UnitTest unit_test_;unit_test_98,3802
  TestInfo test_info_obj_;  // The name test_info_ was taken by testing::Test.test_info_obj_99,3825
TEST_F(StreamingListenerTest, OnTestProgramEnd) {TEST_F102,3908
TEST_F(StreamingListenerTest, OnTestIterationEnd) {TEST_F108,4080
TEST_F(StreamingListenerTest, OnTestCaseStart) {TEST_F114,4279
TEST_F(StreamingListenerTest, OnTestCaseEnd) {TEST_F120,4486
TEST_F(StreamingListenerTest, OnTestStart) {TEST_F126,4700
TEST_F(StreamingListenerTest, OnTestEnd) {TEST_F132,4861
TEST_F(StreamingListenerTest, OnTestPartResult) {TEST_F138,5033
class TestEventListenersAccessor {TestEventListenersAccessor153,5547
  static TestEventListener* GetRepeater(TestEventListeners* listeners) {GetRepeater155,5591
  static void SetDefaultResultPrinter(TestEventListeners* listeners,SetDefaultResultPrinter159,5703
  static void SetDefaultXmlGenerator(TestEventListeners* listeners,SetDefaultXmlGenerator163,5895
  static bool EventForwardingEnabled(const TestEventListeners& listeners) {EventForwardingEnabled168,6085
  static void SuppressEventForwarding(TestEventListeners* listeners) {SuppressEventForwarding172,6213
class UnitTestRecordPropertyTestHelper : public Test {UnitTestRecordPropertyTestHelper177,6334
  UnitTestRecordPropertyTestHelper() {}UnitTestRecordPropertyTestHelper179,6401
  void UnitTestRecordProperty(const char* key, const std::string& value) {UnitTestRecordProperty182,6513
  UnitTest unit_test_;unit_test_186,6636
class TestingVector : public std::vector<int> {TestingVector275,9787
::std::ostream& operator<<(::std::ostream& os,operator <<278,9839
TEST(GetRandomSeedFromFlagTest, HandlesZero) {TEST291,10148
TEST(GetRandomSeedFromFlagTest, PreservesValidSeed) {TEST297,10318
TEST(GetRandomSeedFromFlagTest, NormalizesInvalidSeed) {TEST305,10633
TEST(GetNextRandomSeedTest, WorksForValidInput) {TEST315,10958
static void ClearCurrentTestPartResults() {ClearCurrentTestPartResults328,11463
TEST(GetTypeIdTest, ReturnsSameValueForSameType) {TEST335,11624
class SubClassOfTest : public Test {};SubClassOfTest340,11778
class AnotherSubClassOfTest : public Test {};AnotherSubClassOfTest341,11817
TEST(GetTypeIdTest, ReturnsDifferentValuesForDifferentTypes) {TEST343,11864
TEST(GetTestTypeIdTest, ReturnsTheSameValueInsideOrOutsideOfGoogleTest) {TEST354,12411
TEST(CanonicalizeForStdLibVersioning, LeavesUnversionedNamesUnchanged) {TEST362,12647
TEST(CanonicalizeForStdLibVersioning, ElidesDoubleUnderNames) {TEST371,13147
TEST(FormatTimeInMillisAsSecondsTest, FormatsZero) {TEST385,13723
TEST(FormatTimeInMillisAsSecondsTest, FormatsPositiveNumber) {TEST389,13829
TEST(FormatTimeInMillisAsSecondsTest, FormatsNegativeNumber) {TEST397,14165
class FormatEpochTimeInMillisAsIso8601Test : public Test {FormatEpochTimeInMillisAsIso8601Test411,14850
  static const TimeInMillis kMillisPerSec = 1000;kMillisPerSec416,15116
  static void SetTimeZone(const char* time_zone) {SetTimeZone439,15742
  const char* saved_tz_;saved_tz_462,16502
const TimeInMillis FormatEpochTimeInMillisAsIso8601Test::kMillisPerSec;kMillisPerSec465,16531
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsTwoDigitSegments) {TEST_F467,16604
TEST_F(FormatEpochTimeInMillisAsIso8601Test, IncludesMillisecondsAfterDot) {TEST_F472,16792
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsLeadingZeroes) {TEST_F478,16993
TEST_F(FormatEpochTimeInMillisAsIso8601Test, Prints24HourTime) {TEST_F483,17178
TEST_F(FormatEpochTimeInMillisAsIso8601Test, PrintsEpochStart) {TEST_F488,17360
TEST(NullLiteralTest, LHSAllowsNullLiterals) {TEST499,17753
struct ConvertToAll {ConvertToAll516,18356
  operator T() const {  // NOLINToperator T518,18402
struct ConvertToPointer {ConvertToPointer523,18460
  operator T*() const {  // NOLINToperator T*525,18507
struct ConvertToAllButNoPointers {ConvertToAllButNoPointers530,18570
  operator T() const {  // NOLINToperator T533,18709
struct MyType {};MyType538,18767
inline bool operator==(MyType const&, MyType const&) { return true; }operator ==539,18785
TEST(NullLiteralTest, ImplicitConversion) {TEST541,18856
TEST(NullLiteralTest, NoConversionNoWarning) {TEST558,19395
TEST(CodePointToUtf8Test, CanEncodeNul) {TEST578,19895
TEST(CodePointToUtf8Test, CanEncodeAscii) {TEST583,20035
TEST(CodePointToUtf8Test, CanEncode8To11Bits) {TEST592,20346
TEST(CodePointToUtf8Test, CanEncode12To16Bits) {TEST606,20927
TEST(CodePointToUtf8Test, CanEncode17To21Bits) {TEST623,21607
TEST(CodePointToUtf8Test, CanEncodeInvalidCodePoint) {TEST635,22149
TEST(WideStringToUtf8Test, CanEncodeNul) {TEST644,22417
TEST(WideStringToUtf8Test, CanEncodeAscii) {TEST650,22623
TEST(WideStringToUtf8Test, CanEncode8To11Bits) {TEST659,22995
TEST(WideStringToUtf8Test, CanEncode12To16Bits) {TEST672,23529
TEST(WideStringToUtf8Test, StopsOnNulCharacter) {TEST685,24120
TEST(WideStringToUtf8Test, StopsWhenLengthLimitReached) {TEST691,24351
TEST(WideStringToUtf8Test, CanEncode17To21Bits) {TEST699,24690
TEST(WideStringToUtf8Test, CanEncodeInvalidCodePoint) {TEST710,25282
TEST(WideStringToUtf8Test, CanEncodeValidUtf16SUrrogatePairs) {TEST717,25598
TEST(WideStringToUtf8Test, CanEncodeInvalidUtf16SurrogatePair) {TEST724,25872
TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {TEST739,26597
TEST(WideStringToUtf8Test, ConcatenatesCodepointsCorrectly) {TEST751,26943
TEST(RandomDeathTest, GeneratesCrashesOnInvalidRange) {TEST761,27246
TEST(RandomTest, GeneratesNumbersWithinRange) {TEST772,27691
TEST(RandomTest, RepeatsWhenReseeded) {TEST785,28121
static bool IsPositive(int n) { return n > 0; }IsPositive806,28627
TEST(ContainerUtilityTest, CountIf) {TEST808,28676
static int g_sum = 0;g_sum824,29045
static void Accumulate(int n) { g_sum += n; }Accumulate825,29067
TEST(ContainerUtilityTest, ForEach) {TEST827,29114
TEST(ContainerUtilityTest, GetElementOr) {TEST846,29527
TEST(ContainerUtilityDeathTest, ShuffleRange) {TEST858,29853
class VectorShuffleTest : public Test {VectorShuffleTest879,30572
  static const size_t kVectorSize = 20;kVectorSize881,30624
  VectorShuffleTest() : random_(1) {VectorShuffleTest883,30665
  static bool VectorIsCorrupt(const TestingVector& vector) {VectorIsCorrupt889,30803
  static bool VectorIsNotCorrupt(const TestingVector& vector) {VectorIsNotCorrupt908,31360
  static bool RangeIsShuffled(const TestingVector& vector, int begin, int end) {RangeIsShuffled912,31466
  static bool RangeIsUnshuffled(RangeIsUnshuffled921,31694
  static bool VectorIsShuffled(const TestingVector& vector) {VectorIsShuffled926,31838
  static bool VectorIsUnshuffled(const TestingVector& vector) {VectorIsUnshuffled930,31977
  testing::internal::Random random_;random_934,32084
  TestingVector vector_;vector_935,32121
const size_t VectorShuffleTest::kVectorSize;kVectorSize938,32178
TEST_F(VectorShuffleTest, HandlesEmptyRange) {TEST_F940,32224
TEST_F(VectorShuffleTest, HandlesRangeOfSizeOne) {TEST_F962,32996
TEST_F(VectorShuffleTest, ShufflesEntireVector) {TEST_F982,33734
TEST_F(VectorShuffleTest, ShufflesStartOfVector) {TEST_F993,34154
TEST_F(VectorShuffleTest, ShufflesEndOfVector) {TEST_F1004,34505
TEST_F(VectorShuffleTest, ShufflesMiddleOfVector) {TEST_F1014,34865
TEST_F(VectorShuffleTest, ShufflesRepeatably) {TEST_F1025,35321
TEST(AssertHelperTest, AssertHelperIsSmall) {TEST1046,35850
TEST(StringTest, EndsWithCaseInsensitive) {TEST1053,36134
static const wchar_t* const kNull = nullptr;kNull1067,36795
TEST(StringTest, CaseInsensitiveWideCStringEquals) {TEST1070,36891
TEST(StringTest, ShowWideCString) {TEST1084,37609
TEST(StringTest, AnsiAndUtf16Null) {TEST1092,37879
TEST(StringTest, AnsiAndUtf16ConvertBasic) {TEST1097,38011
TEST(StringTest, AnsiAndUtf16ConvertPathChars) {TEST1106,38269
TEST(TestPropertyTest, StringValue) {TEST1119,38656
TEST(TestPropertyTest, ReplaceStringValue) {TEST1126,38853
static void AddFatalFailure() {AddFatalFailure1136,39224
static void AddNonfatalFailure() {AddNonfatalFailure1140,39298
class ScopedFakeTestPartResultReporterTest : public Test {ScopedFakeTestPartResultReporterTest1144,39386
  enum FailureMode {FailureMode1146,39518
    FATAL_FAILURE,FATAL_FAILURE1147,39539
    NONFATAL_FAILURENONFATAL_FAILURE1148,39558
  static void AddFailure(FailureMode failure) {AddFailure1150,39584
TEST_F(ScopedFakeTestPartResultReporterTest, InterceptsTestFailures) {TEST_F1161,39824
TEST_F(ScopedFakeTestPartResultReporterTest, DeprecatedConstructor) {TEST_F1176,40301
class ScopedFakeTestPartResultReporterWithThreadsTestScopedFakeTestPartResultReporterWithThreadsTest1188,40620
  static void AddFailureInOtherThread(FailureMode failure) {AddFailureInOtherThread1191,40736
TEST_F(ScopedFakeTestPartResultReporterWithThreadsTest,TEST_F1197,40896
typedef ScopedFakeTestPartResultReporterTest ExpectFatalFailureTest;ExpectFatalFailureTest1222,41806
TEST_F(ExpectFatalFailureTest, CatchesFatalFaliure) {TEST_F1224,41876
TEST_F(ExpectFatalFailureTest, AcceptsStdStringObject) {TEST_F1228,42003
TEST_F(ExpectFatalFailureTest, CatchesFatalFailureOnAllThreads) {TEST_F1233,42171
int NonVoidFunction() {NonVoidFunction1248,42707
TEST_F(ExpectFatalFailureTest, CanBeUsedInNonVoidFunction) {TEST_F1254,42845
void DoesNotAbortHelper(bool* aborted) {DoesNotAbortHelper1261,43071
TEST_F(ExpectFatalFailureTest, DoesNotAbort) {TEST_F1273,43358
static int global_var = 0;global_var1283,43649
#define GTEST_USE_UNPROTECTED_COMMA_ GTEST_USE_UNPROTECTED_COMMA_1284,43676
TEST_F(ExpectFatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {TEST_F1286,43741
typedef ScopedFakeTestPartResultReporterTest ExpectNonfatalFailureTest;ExpectNonfatalFailureTest1303,44126
TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailure) {TEST_F1305,44199
TEST_F(ExpectNonfatalFailureTest, AcceptsStdStringObject) {TEST_F1310,44368
TEST_F(ExpectNonfatalFailureTest, CatchesNonfatalFailureOnAllThreads) {TEST_F1315,44552
TEST_F(ExpectNonfatalFailureTest, AcceptsMacroThatExpandsToUnprotectedComma) {TEST_F1325,45044
    ExpectFailureWithThreadsTest;ExpectFailureWithThreadsTest1340,45419
TEST_F(ExpectFailureWithThreadsTest, ExpectFatalFailureOnAllThreads) {TEST_F1342,45454
TEST_F(ExpectFailureWithThreadsTest, ExpectNonFatalFailureOnAllThreads) {TEST_F1347,45672
TEST(TestPropertyTest, ConstructorWorks) {TEST1356,45938
TEST(TestPropertyTest, SetValue) {TEST1362,46113
class TestResultTest : public Test {TestResultTest1373,46424
  typedef std::vector<TestPartResult> TPRVector;TPRVector1375,46473
  TestPartResult * pr1, * pr2;pr11378,46569
  TestPartResult * pr1, * pr2;pr21378,46569
  TestResult * r0, * r1, * r2;r01381,46636
  TestResult * r0, * r1, * r2;r11381,46636
  TestResult * r0, * r1, * r2;r21381,46636
  static void CompareTestPartResult(const TestPartResult& expected,CompareTestPartResult1430,48128
TEST_F(TestResultTest, total_part_count) {TEST_F1445,48835
TEST_F(TestResultTest, Passed) {TEST_F1452,49032
TEST_F(TestResultTest, Failed) {TEST_F1459,49187
typedef TestResultTest TestResultDeathTest;TestResultDeathTest1467,49355
TEST_F(TestResultDeathTest, GetTestPartResult) {TEST_F1469,49400
TEST(TestResultPropertyTest, NoPropertiesFoundWhenNoneAreAdded) {TEST1477,49744
TEST(TestResultPropertyTest, OnePropertyFoundWhenAdded) {TEST1483,49948
TEST(TestResultPropertyTest, MultiplePropertiesFoundWhenAdded) {TEST1494,50421
TEST(TestResultPropertyTest, OverridesValuesForDuplicateKeys) {TEST1511,51220
TEST(TestResultPropertyTest, GetTestProperty) {TEST1533,52238
class GTestFlagSaverTest : public Test {GTestFlagSaverTest1571,53763
  static void SetUpTestSuite() {SetUpTestSuite1576,54009
  static void TearDownTestSuite() {TearDownTestSuite1601,54971
  void VerifyAndModifyFlags() {VerifyAndModifyFlags1608,55158
  static GTestFlagSaver* saver_;saver_1650,56968
GTestFlagSaver* GTestFlagSaverTest::saver_ = nullptr;saver_1653,57005
TEST_F(GTestFlagSaverTest, ModifyGTestFlags) {TEST_F1659,57242
TEST_F(GTestFlagSaverTest, VerifyGTestFlags) {TEST_F1665,57433
static void SetEnv(const char* name, const char* value) {SetEnv1672,57708
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenVariableIsNotSet) {TEST1716,59337
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueOverflows) {TEST1725,59659
TEST(Int32FromGTestEnvTest, ReturnsDefaultWhenValueIsInvalid) {TEST1737,60128
TEST(Int32FromGTestEnvTest, ParsesAndReturnsValidValue) {TEST1752,60645
TEST(ParseInt32FlagTest, ReturnsFalseForInvalidFlag) {TEST1765,61079
TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueOverflows) {TEST1776,61427
TEST(ParseInt32FlagTest, ReturnsDefaultWhenValueIsInvalid) {TEST1790,61888
TEST(ParseInt32FlagTest, ParsesAndReturnsValidValue) {TEST1804,62332
TEST(Int32FromEnvOrDieTest, ParsesAndReturnsValidValue) {TEST1817,62802
TEST(Int32FromEnvOrDieDeathTest, AbortsOnFailure) {TEST1828,63347
TEST(Int32FromEnvOrDieDeathTest, AbortsOnInt32Overflow) {TEST1837,63674
TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereIsOneShard) {TEST1846,63989
class ShouldShardTest : public testing::Test {ShouldShardTest1854,64287
  const char* index_var_;index_var_1866,64569
  const char* total_var_;total_var_1867,64595
TEST_F(ShouldShardTest, ReturnsFalseWhenNeitherEnvVarIsSet) {TEST_F1872,64712
TEST_F(ShouldShardTest, ReturnsFalseWhenTotalShardIsOne) {TEST_F1881,65010
TEST_F(ShouldShardTest, WorksWhenShardEnvVarsAreValid) {TEST_F1892,65432
typedef ShouldShardTest ShouldShardDeathTest;ShouldShardDeathTest1912,66117
TEST_F(ShouldShardDeathTest, AbortsWhenShardingEnvVarsAreInvalid) {TEST_F1914,66164
TEST(ShouldRunTestOnShardTest, IsPartitionWhenThereAreFiveShards) {TEST1934,66846
TEST(UnitTestTest, CanGetOriginalWorkingDir) {TEST1976,68402
TEST(UnitTestTest, ReturnsPlausibleTimestamp) {TEST1981,68596
void ExpectNonFatalFailureRecordingPropertyWithReservedKey(ExpectNonFatalFailureRecordingPropertyWithReservedKey1989,68972
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest(ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTest1996,69326
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestSuite(ExpectNonFatalFailureRecordingPropertyWithReservedKeyForCurrentTestSuite2004,69679
void ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestSuite(ExpectNonFatalFailureRecordingPropertyWithReservedKeyOutsideOfTestSuite2013,70019
class UnitTestRecordPropertyTest :UnitTestRecordPropertyTest2022,70458
  static void SetUpTestSuite() {SetUpTestSuite2025,70567
TEST_F(UnitTestRecordPropertyTest, OnePropertyFoundWhenAdded) {TEST_F2055,71727
TEST_F(UnitTestRecordPropertyTest, MultiplePropertiesFoundWhenAdded) {TEST_F2067,72157
TEST_F(UnitTestRecordPropertyTest, OverridesValuesForDuplicateKeys) {TEST_F2083,72818
TEST_F(UnitTestRecordPropertyTest,TEST_F2102,73517
TEST_F(UnitTestRecordPropertyTest,TEST_F2118,74153
class UnitTestRecordPropertyTestEnvironment : public Environment {UnitTestRecordPropertyTestEnvironment2126,74442
static Environment* record_property_env GTEST_ATTRIBUTE_UNUSED_ =GTEST_ATTRIBUTE_UNUSED_2149,75401
bool IsEven(int n) {IsEven2161,75995
struct IsEvenFunctor {IsEvenFunctor2166,76120
  bool operator()(int n) { return IsEven(n); }operator ()2167,76143
AssertionResult AssertIsEven(const char* expr, int n) {AssertIsEven2172,76276
AssertionResult ResultIsEven(int n) {ResultIsEven2184,76596
AssertionResult ResultIsEvenNoExplanation(int n) {ResultIsEvenNoExplanation2194,76939
struct AssertIsEvenFunctor {AssertIsEvenFunctor2203,77178
  AssertionResult operator()(const char* expr, int n) {operator ()2204,77207
bool SumIsEven2(int n1, int n2) {SumIsEven22210,77380
struct SumIsEven3Functor {SumIsEven3Functor2216,77536
  bool operator()(int n1, int n2, int n3) {operator ()2217,77563
AssertionResult AssertSumIsEven4(AssertSumIsEven42224,77742
struct AssertSumIsEven5Functor {AssertSumIsEven5Functor2241,78302
  AssertionResult operator()(operator ()2242,78335
TEST(Pred1Test, WithoutFormat) {TEST2263,79002
TEST(Pred1Test, WithFormat) {TEST2277,79477
TEST(Pred1Test, SingleEvaluationOnFailure) {TEST2294,80064
TEST(PredTest, WithoutFormat) {TEST2312,80621
TEST(PredTest, WithFormat) {TEST2329,81164
TEST(PredTest, SingleEvaluationOnFailure) {TEST2351,81872
TEST(PredTest, ExpectPredEvalFailure) {TEST2395,83643
bool IsPositive(double x) {IsPositive2408,84173
bool IsNegative(T x) {IsNegative2413,84242
bool GreaterThan(T1 x1, T2 x2) {GreaterThan2418,84320
TEST(PredicateAssertionTest, AcceptsOverloadedFunction) {TEST2424,84484
TEST(PredicateAssertionTest, AcceptsTemplateFunction) {TEST2432,84840
AssertionResult IsPositiveFormat(const char* /* expr */, int n) {IsPositiveFormat2443,85191
AssertionResult IsPositiveFormat(const char* /* expr */, double x) {IsPositiveFormat2448,85346
AssertionResult IsNegativeFormat(const char* /* expr */, T x) {IsNegativeFormat2454,85526
AssertionResult EqualsFormat(const char* /* expr1 */, const char* /* expr2 */,EqualsFormat2460,85715
TEST(PredicateFormatAssertionTest, AcceptsOverloadedFunction) {TEST2468,86056
TEST(PredicateFormatAssertionTest, AcceptsTemplateFunction) {TEST2475,86322
TEST(StringAssertionTest, ASSERT_STREQ) {TEST2484,86552
TEST(StringAssertionTest, ASSERT_STREQ_Null) {TEST2497,86925
TEST(StringAssertionTest, ASSERT_STREQ_Null2) {TEST2503,87149
TEST(StringAssertionTest, ASSERT_STRNE) {TEST2508,87294
TEST(StringAssertionTest, ASSERT_STRCASEEQ) {TEST2521,87659
TEST(StringAssertionTest, ASSERT_STRCASENE) {TEST2531,87955
TEST(StringAssertionTest, STREQ_Wide) {TEST2544,88364
TEST(StringAssertionTest, STRNE_Wide) {TEST2572,89141
TEST(IsSubstringTest, ReturnsCorrectResultForCString) {TEST2606,90064
TEST(IsSubstringTest, ReturnsCorrectResultForWideCString) {TEST2617,90532
TEST(IsSubstringTest, GeneratesCorrectMessageForCString) {TEST2629,91016
TEST(IsSubstringTest, ReturnsCorrectResultsForStdString) {TEST2640,91489
TEST(IsSubstringTest, ReturnsCorrectResultForStdWstring) {TEST2648,91818
TEST(IsSubstringTest, GeneratesCorrectMessageForWstring) {TEST2655,92145
TEST(IsNotSubstringTest, ReturnsCorrectResultForCString) {TEST2671,92730
TEST(IsNotSubstringTest, ReturnsCorrectResultForWideCString) {TEST2678,93027
TEST(IsNotSubstringTest, GeneratesCorrectMessageForWideCString) {TEST2685,93335
TEST(IsNotSubstringTest, ReturnsCorrectResultsForStdString) {TEST2697,93847
TEST(IsNotSubstringTest, GeneratesCorrectMessageForStdString) {TEST2704,94166
TEST(IsNotSubstringTest, ReturnsCorrectResultForStdWstring) {TEST2718,94715
class FloatingPointTest : public Test {FloatingPointTest2729,95048
  struct TestValues {TestValues2732,95153
    RawType close_to_positive_zero;close_to_positive_zero2733,95175
    RawType close_to_negative_zero;close_to_negative_zero2734,95211
    RawType further_from_negative_zero;further_from_negative_zero2735,95247
    RawType close_to_one;close_to_one2737,95288
    RawType further_from_one;further_from_one2738,95314
    RawType infinity;infinity2740,95345
    RawType close_to_infinity;close_to_infinity2741,95367
    RawType further_from_infinity;further_from_infinity2742,95398
    RawType nan1;nan12744,95434
    RawType nan2;nan22745,95452
  typedef typename testing::internal::FloatingPoint<RawType> Floating;Floating2748,95476
  typedef typename Floating::Bits Bits;Bits2749,95547
  void TestSize() {TestSize2794,97350
  static TestValues values_;values_2798,97421
    FloatingPointTest<RawType>::values_;values_2803,97530
typedef FloatingPointTest<float> FloatTest;FloatTest2806,97630
TEST_F(FloatTest, Size) {TEST_F2809,97740
TEST_F(FloatTest, Zeros) {TEST_F2814,97818
TEST_F(FloatTest, AlmostZeros) {TEST_F2827,98236
TEST_F(FloatTest, SmallDiff) {TEST_F2847,99085
TEST_F(FloatTest, LargeDiff) {TEST_F2854,99332
TEST_F(FloatTest, Infinity) {TEST_F2863,99592
TEST_F(FloatTest, NaN) {TEST_F2876,100153
TEST_F(FloatTest, Reflexive) {TEST_F2897,101026
TEST_F(FloatTest, Commutative) {TEST_F2904,101215
TEST_F(FloatTest, EXPECT_NEAR) {TEST_F2914,101566
TEST_F(FloatTest, ASSERT_NEAR) {TEST_F2923,101885
TEST_F(FloatTest, FloatLESucceeds) {TEST_F2932,102224
TEST_F(FloatTest, FloatLEFails) {TEST_F2941,102574
typedef FloatingPointTest<double> DoubleTest;DoubleTest2963,103483
TEST_F(DoubleTest, Size) {TEST_F2966,103597
TEST_F(DoubleTest, Zeros) {TEST_F2971,103676
TEST_F(DoubleTest, AlmostZeros) {TEST_F2984,104099
TEST_F(DoubleTest, SmallDiff) {TEST_F3004,104955
TEST_F(DoubleTest, LargeDiff) {TEST_F3011,105205
TEST_F(DoubleTest, Infinity) {TEST_F3020,105467
TEST_F(DoubleTest, NaN) {TEST_F3033,106035
TEST_F(DoubleTest, Reflexive) {TEST_F3046,106565
TEST_F(DoubleTest, Commutative) {TEST_F3053,106759
TEST_F(DoubleTest, EXPECT_NEAR) {TEST_F3063,107115
TEST_F(DoubleTest, ASSERT_NEAR) {TEST_F3079,107819
TEST_F(DoubleTest, DoubleLESucceeds) {TEST_F3088,108148
TEST_F(DoubleTest, DoubleLEFails) {TEST_F3097,108499
TEST(DisabledTest, DISABLED_TestShouldNotRun) {TEST3124,109501
TEST(DisabledTest, NotDISABLED_TestShouldRun) {TEST3130,109687
TEST(DISABLED_TestSuite, TestShouldNotRun) {TEST3136,109825
TEST(DISABLED_TestSuite, DISABLED_TestShouldNotRun) {TEST3142,110031
class DisabledTestsTest : public Test {DisabledTestsTest3148,110287
  static void SetUpTestSuite() {SetUpTestSuite3150,110339
  static void TearDownTestSuite() {TearDownTestSuite3155,110503
TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_1) {TEST_F3161,110676
TEST_F(DisabledTestsTest, DISABLED_TestShouldNotRun_2) {TEST_F3165,110804
class TypedTest : public Test {TypedTest3172,111002
typedef testing::Types<int, double> NumericTypes;NumericTypes3175,111038
TYPED_TEST(TypedTest, DISABLED_ShouldNotRun) {TYPED_TEST3178,111132
class DISABLED_TypedTest : public Test {DISABLED_TypedTest3183,111275
TYPED_TEST(DISABLED_TypedTest, ShouldNotRun) {TYPED_TEST3188,111373
class TypedTestP : public Test {TypedTestP3195,111577
TYPED_TEST_P(TypedTestP, DISABLED_ShouldNotRun) {TYPED_TEST_P3200,111647
class DISABLED_TypedTestP : public Test {DISABLED_TypedTestP3210,111949
TYPED_TEST_P(DISABLED_TypedTestP, ShouldNotRun) {TYPED_TEST_P3215,112037
class SingleEvaluationTest : public Test {SingleEvaluationTest3226,112397
  static void CompareAndIncrementCharPtrs() {CompareAndIncrementCharPtrs3231,112670
  static void CompareAndIncrementInts() {CompareAndIncrementInts3237,112902
  SingleEvaluationTest() {SingleEvaluationTest3242,112988
  static const char* const s1_;s1_3249,113074
  static const char* const s2_;s2_3250,113106
  static const char* p1_;p1_3251,113138
  static const char* p2_;p2_3252,113164
  static int a_;a_3254,113191
  static int b_;b_3255,113208
const char* const SingleEvaluationTest::s1_ = "01234";s1_3258,113229
const char* const SingleEvaluationTest::s2_ = "abcde";s2_3259,113284
const char* SingleEvaluationTest::p1_;p1_3260,113339
const char* SingleEvaluationTest::p2_;p2_3261,113378
int SingleEvaluationTest::a_;a_3262,113417
int SingleEvaluationTest::b_;b_3263,113447
TEST_F(SingleEvaluationTest, FailedASSERT_STREQ) {TEST_F3267,113561
TEST_F(SingleEvaluationTest, ASSERT_STR) {TEST_F3275,113847
TEST_F(SingleEvaluationTest, FailedASSERT_NE) {TEST_F3290,114272
TEST_F(SingleEvaluationTest, OtherCases) {TEST_F3298,114541
#define ERROR_DESC ERROR_DESC3332,115246
#define ERROR_DESC ERROR_DESC3334,115298
#define ERROR_DESC ERROR_DESC3339,115372
void ThrowAnInteger() {ThrowAnInteger3343,115453
void ThrowRuntimeError(const char* what) {ThrowRuntimeError3346,115490
TEST_F(SingleEvaluationTest, ExceptionTests) {TEST_F3351,115632
class NoFatalFailureTest : public Test {NoFatalFailureTest3403,116915
  void Succeeds() {}Succeeds3405,116968
  void FailsNonFatal() {FailsNonFatal3406,116989
  void Fails() {Fails3409,117065
  void DoAssertNoFatalFailureOnFails() {DoAssertNoFatalFailureOnFails3413,117123
  void DoExpectNoFatalFailureOnFails() {DoExpectNoFatalFailureOnFails3418,117254
TEST_F(NoFatalFailureTest, NoFailure) {TEST_F3424,117379
TEST_F(NoFatalFailureTest, NonFatalIsNoFailure) {TEST_F3429,117500
TEST_F(NoFatalFailureTest, AssertNoFatalFailureOnFatalFailure) {TEST_F3438,117769
TEST_F(NoFatalFailureTest, ExpectNoFatalFailureOnFatalFailure) {TEST_F3455,118490
TEST_F(NoFatalFailureTest, MessageIsStreamable) {TEST_F3476,119448
std::string EditsToString(const std::vector<EditType>& edits) {EditsToString3495,120206
std::vector<size_t> CharsToIndices(const std::string& str) {CharsToIndices3504,120434
std::vector<std::string> CharsToLines(const std::string& str) {CharsToLines3512,120635
TEST(EditDistance, TestSuites) {TEST3520,120833
TEST(AssertionTest, EqFailure) {TEST3569,123060
TEST(AssertionTest, EqFailureWithDiff) {TEST3624,124468
TEST(AssertionTest, AppendUserMessage) {TEST3644,125309
TEST(AssertionTest, ASSERT_TRUE) {TEST3662,125727
TEST(AssertionTest, AssertTrueWithAssertionResult) {TEST3669,125948
TEST(AssertionTest, ASSERT_FALSE) {TEST3686,126588
TEST(AssertionTest, AssertFalseWithAssertionResult) {TEST3695,126908
TEST(ExpectTest, ASSERT_EQ_Double) {TEST3719,127816
TEST(AssertionTest, ASSERT_EQ) {TEST3729,128007
TEST(AssertionTest, ASSERT_EQ_NULL) {TEST3739,128312
TEST(ExpectTest, ASSERT_EQ_0) {TEST3753,128783
TEST(AssertionTest, ASSERT_NE) {TEST3765,128984
TEST(AssertionTest, ASSERT_LE) {TEST3773,129223
TEST(AssertionTest, ASSERT_LT) {TEST3781,129421
TEST(AssertionTest, ASSERT_GE) {TEST3788,129599
TEST(AssertionTest, ASSERT_GT) {TEST3796,129797
void ThrowNothing() {}ThrowNothing3804,129981
TEST(AssertionTest, ASSERT_THROW) {TEST3807,130028
TEST(AssertionTest, ASSERT_NO_THROW) {TEST3832,130866
TEST(AssertionTest, ASSERT_ANY_THROW) {TEST3845,131486
TEST(AssertionTest, AssertPrecedence) {TEST3857,131831
void TestEq1(int x) {TestEq13864,132013
TEST(AssertionTest, NonFixtureSubroutine) {TEST3869,132122
class Uncopyable {Uncopyable3875,132276
  explicit Uncopyable(int a_value) : value_(a_value) {}Uncopyable3877,132304
  int value() const { return value_; }value3879,132361
  bool operator==(const Uncopyable& rhs) const {operator ==3880,132400
  int value_;value_3888,132650
::std::ostream& operator<<(::std::ostream& os, const Uncopyable& value) {operator <<3891,132668
bool IsPositiveUncopyable(const Uncopyable& x) {IsPositiveUncopyable3896,132776
void TestAssertNonPositive() {TestAssertNonPositive3901,132896
void TestAssertEqualsUncopyable() {TestAssertEqualsUncopyable3906,133034
TEST(AssertionTest, AssertWorksWithUncopyableObject) {TEST3913,133191
TEST(AssertionTest, ExpectWorksWithUncopyableObject) {TEST3925,133696
enum NamedEnum {NamedEnum3937,134177
  kE1 = 0,kE13938,134194
  kE2 = 1kE23939,134205
TEST(AssertionTest, NamedEnum) {TEST3942,134219
  kCaseA = -1,kCaseA3954,134574
  kCaseB = testing::internal::kMaxBiggestInt,kCaseB3967,135089
  kCaseC = 42kCaseC3975,135193
TEST(AssertionTest, AnonymousEnum) {TEST3978,135211
static HRESULT UnexpectedHRESULTFailure() {UnexpectedHRESULTFailure4020,136337
static HRESULT OkHRESULTSuccess() {OkHRESULTSuccess4024,136407
static HRESULT FalseHRESULTSuccess() {FalseHRESULTSuccess4028,136461
TEST(HRESULTAssertionTest, EXPECT_HRESULT_SUCCEEDED) {TEST4036,136678
TEST(HRESULTAssertionTest, ASSERT_HRESULT_SUCCEEDED) {TEST4045,136974
TEST(HRESULTAssertionTest, EXPECT_HRESULT_FAILED) {TEST4054,137267
TEST(HRESULTAssertionTest, ASSERT_HRESULT_FAILED) {TEST4065,137642
TEST(HRESULTAssertionTest, Streaming) {TEST4082,138136
TEST(AssertionSyntaxTest, BasicAssertionsBehavesLikeSingleStatement) {TEST4119,139303
TEST(ExpectThrowTest, DoesNotGenerateUnreachableCodeWarning) {TEST4144,139910
TEST(ExpectThrowTest, DoesNotGenerateDuplicateCatchClauseWarning) {TEST4156,140306
TEST(AssertionSyntaxTest, ExceptionAssertionsBehavesLikeSingleStatement) {TEST4167,140685
TEST(AssertionSyntaxTest, NoFatalFailureAssertionsBehavesLikeSingleStatement) {TEST4205,141533
TEST(AssertionSyntaxTest, WorksWithSwitch) {TEST4232,142185
void ThrowAString() {ThrowAString4259,142732
TEST(AssertionSyntaxTest, WorksWithConst) {TEST4265,142873
namespace testing {testing4275,143065
TEST(SuccessfulAssertionTest, SUCCEED) {TEST4278,143129
TEST(SuccessfulAssertionTest, EXPECT) {TEST4285,143346
TEST(SuccessfulAssertionTest, EXPECT_STR) {TEST4291,143552
TEST(SuccessfulAssertionTest, ASSERT) {TEST4297,143762
TEST(SuccessfulAssertionTest, ASSERT_STR) {TEST4303,143968
TEST(AssertionWithMessageTest, EXPECT) {TEST4314,144212
TEST(AssertionWithMessageTest, ASSERT) {TEST4338,145352
TEST(AssertionWithMessageTest, ASSERT_STR) {TEST4348,145729
TEST(AssertionWithMessageTest, ASSERT_FLOATING) {TEST4356,146056
TEST(AssertionWithMessageTest, ASSERT_FALSE) {TEST4364,146389
TEST(AssertionWithMessageTest, FAIL) {TEST4373,146713
TEST(AssertionWithMessageTest, SUCCEED) {TEST4379,146868
TEST(AssertionWithMessageTest, ASSERT_TRUE) {TEST4384,147000
TEST(AssertionWithMessageTest, WideStringMessage) {TEST4397,147395
TEST(ExpectTest, EXPECT_TRUE) {TEST4409,147800
TEST(ExpectTest, ExpectTrueWithAssertionResult) {TEST4425,148511
TEST(ExpectTest, EXPECT_FALSE) {TEST4439,149142
TEST(ExpectTest, ExpectFalseWithAssertionResult) {TEST4455,149860
TEST(ExpectTest, EXPECT_EQ) {TEST4474,150581
TEST(ExpectTest, EXPECT_EQ_Double) {TEST4488,151120
TEST(ExpectTest, EXPECT_EQ_NULL) {TEST4498,151332
TEST(ExpectTest, EXPECT_EQ_0) {TEST4512,151796
TEST(ExpectTest, EXPECT_NE) {TEST4524,152003
TEST(ExpectTest, EXPECT_LE) {TEST4546,152809
TEST(ExpectTest, EXPECT_LT) {TEST4556,153102
TEST(ExpectTest, EXPECT_GE) {TEST4565,153366
TEST(ExpectTest, EXPECT_GT) {TEST4575,153659
TEST(ExpectTest, EXPECT_THROW) {TEST4586,153952
TEST(ExpectTest, EXPECT_NO_THROW) {TEST4604,154868
TEST(ExpectTest, EXPECT_ANY_THROW) {TEST4617,155509
TEST(ExpectTest, ExpectPrecedence) {TEST4628,155823
TEST(StreamableToStringTest, Scalar) {TEST4638,156109
TEST(StreamableToStringTest, Pointer) {TEST4643,156262
TEST(StreamableToStringTest, NullPointer) {TEST4650,156454
TEST(StreamableToStringTest, CString) {TEST4656,156629
TEST(StreamableToStringTest, NullCString) {TEST4661,156786
TEST(StreamableTest, string) {TEST4669,157020
TEST(StreamableTest, stringWithEmbeddedNUL) {TEST4678,157357
TEST(StreamableTest, NULChar) {TEST4689,157860
TEST(StreamableTest, int) {TEST4696,158072
TEST(StreamableTest, NullCharPtr) {TEST4706,158420
TEST(StreamableTest, BasicIoManip) {TEST4712,158638
void AddFailureHelper(bool* aborted) {AddFailureHelper4721,158923
TEST(MacroTest, ADD_FAILURE) {TEST4728,159069
TEST(MacroTest, ADD_FAILURE_AT) {TEST4736,159281
TEST(MacroTest, FAIL) {TEST4751,159932
TEST(MacroTest, GTEST_FAIL_AT) {TEST4759,160153
TEST(MacroTest, SUCCEED) {TEST4772,160681
TEST(EqAssertionTest, Bool) {TEST4785,161011
TEST(EqAssertionTest, Int) {TEST4794,161266
TEST(EqAssertionTest, Time_T) {TEST4801,161457
TEST(EqAssertionTest, Char) {TEST4810,161765
TEST(EqAssertionTest, WideChar) {TEST4820,162098
TEST(EqAssertionTest, StdString) {TEST4840,162799
TEST(EqAssertionTest, StdWideString) {TEST4871,163920
TEST(EqAssertionTest, CharPointer) {TEST4906,165133
TEST(EqAssertionTest, WideCharPointer) {TEST4928,166023
TEST(EqAssertionTest, OtherPointer) {TEST4953,167054
class UnprintableChar {UnprintableChar4961,167421
  explicit UnprintableChar(char ch) : char_(ch) {}UnprintableChar4963,167454
  bool operator==(const UnprintableChar& rhs) const {operator ==4965,167506
  bool operator!=(const UnprintableChar& rhs) const {operator !=4968,167595
  bool operator<(const UnprintableChar& rhs) const {operator <4971,167684
  bool operator<=(const UnprintableChar& rhs) const {operator <=4974,167771
  bool operator>(const UnprintableChar& rhs) const {operator >4977,167860
  bool operator>=(const UnprintableChar& rhs) const {operator >=4980,167947
  char char_;char_4985,168047
TEST(ComparisonAssertionTest, AcceptsUnprintableArgs) {TEST4990,168151
class Foo {Foo5026,169642
  Foo() {}Foo5028,169663
  int Bar() const { return 1; }Bar5031,169685
TEST(FRIEND_TEST_Test, TEST) {TEST5041,169999
class FRIEND_TEST_Test2 : public Test {FRIEND_TEST_Test25046,170123
  Foo foo;foo5048,170175
TEST_F(FRIEND_TEST_Test2, TEST_F) {TEST_F5053,170310
class TestLifeCycleTest : public Test {TestLifeCycleTest5063,170565
  TestLifeCycleTest() { count_++; }TestLifeCycleTest5067,170703
  int count() const { return count_; }count5074,170941
  static int count_;count_5077,170991
int TestLifeCycleTest::count_ = 0;count_5080,171016
TEST_F(TestLifeCycleTest, Test1) {TEST_F5083,171093
TEST_F(TestLifeCycleTest, Test2) {TEST_F5090,171286
TEST(AssertionResultTest, CopyConstructorWorksWhenNotOptimied) {TEST5101,171611
TEST(AssertionResultTest, ConstructionWorks) {TEST5117,172201
TEST(AssertionResultTest, NegationWorks) {TEST5140,172860
TEST(AssertionResultTest, StreamingWorks) {TEST5150,173132
TEST(AssertionResultTest, CanStreamOstreamManipulators) {TEST5156,173297
TEST(AssertionResultTest, ConstructibleFromContextuallyConvertibleToBool) {TEST5164,173586
struct ConvertibleToAssertionResult {ConvertibleToAssertionResult5175,173904
  operator AssertionResult() const { return AssertionResult(true); }operator AssertionResult5176,173942
TEST(AssertionResultTest, ConstructibleFromImplicitlyConvertible) {TEST5179,174015
class Base {Base5186,174243
  explicit Base(int an_x) : x_(an_x) {}Base5188,174265
  int x() const { return x_; }x5189,174305
  int x_;x_5191,174346
std::ostream& operator<<(std::ostream& os,operator <<5193,174359
std::ostream& operator<<(std::ostream& os,operator <<5197,174472
TEST(MessageTest, CanStreamUserTypeInGlobalNameSpace) {TEST5202,174609
class MyTypeInUnnamedNameSpace : public Base {MyTypeInUnnamedNameSpace5213,174899
  explicit MyTypeInUnnamedNameSpace(int an_x): Base(an_x) {}MyTypeInUnnamedNameSpace5215,174955
std::ostream& operator<<(std::ostream& os,operator <<5217,175019
std::ostream& operator<<(std::ostream& os,operator <<5221,175152
TEST(MessageTest, CanStreamUserTypeInUnnamedNameSpace) {TEST5227,175325
namespace namespace1 {namespace15237,175639
class MyTypeInNameSpace1 : public Base {MyTypeInNameSpace15238,175662
  explicit MyTypeInNameSpace1(int an_x): Base(an_x) {}MyTypeInNameSpace15240,175712
std::ostream& operator<<(std::ostream& os,operator <<5242,175770
std::ostream& operator<<(std::ostream& os,operator <<5246,175897
TEST(MessageTest, CanStreamUserTypeInUserNameSpace) {TEST5252,176075
namespace namespace2 {namespace25262,176410
class MyTypeInNameSpace2 : public ::Base {MyTypeInNameSpace25263,176433
  explicit MyTypeInNameSpace2(int an_x): Base(an_x) {}MyTypeInNameSpace25265,176485
std::ostream& operator<<(std::ostream& os,operator <<5268,176570
std::ostream& operator<<(std::ostream& os,operator <<5272,176709
TEST(MessageTest, CanStreamUserTypeInUserNameSpaceWithStreamOperatorInGlobal) {TEST5277,176872
TEST(MessageTest, NullPointers) {TEST5286,177154
TEST(MessageTest, WideStrings) {TEST5301,177556
namespace testing {testing5325,178334
class TestInfoTest : public Test {TestInfoTest5329,178385
  static const TestInfo* GetTestInfo(const char* test_name) {GetTestInfo5331,178432
  static const TestResult* GetTestResult(GetTestResult5343,178855
TEST_F(TestInfoTest, Names) {TEST_F5350,179030
TEST_F(TestInfoTest, result) {TEST_F5358,179257
#define VERIFY_CODE_LOCATION VERIFY_CODE_LOCATION5368,179590
TEST(CodeLocationForTEST, Verify) {TEST5375,179865
class CodeLocationForTESTF : public Test {CodeLocationForTESTF5379,179928
TEST_F(CodeLocationForTESTF, Verify) {TEST_F5382,179975
class CodeLocationForTESTP : public TestWithParam<int> {CodeLocationForTESTP5386,180041
TEST_P(CodeLocationForTESTP, Verify) {TEST_P5389,180102
class CodeLocationForTYPEDTEST : public Test {CodeLocationForTYPEDTEST5396,180252
TYPED_TEST(CodeLocationForTYPEDTEST, Verify) {TYPED_TEST5401,180353
class CodeLocationForTYPEDTESTP : public Test {CodeLocationForTYPEDTESTP5406,180449
TYPED_TEST_P(CodeLocationForTYPEDTESTP, Verify) {TYPED_TEST_P5411,180549
#undef VERIFY_CODE_LOCATIONVERIFY_CODE_LOCATION5419,180760
class SetUpTestCaseTest : public Test {SetUpTestCaseTest5424,180929
  static void SetUpTestCase() {SetUpTestCase5428,181064
  static void TearDownTestCase() {TearDownTestCase5445,181575
  static int counter_;counter_5466,182161
  static const char* shared_resource_;shared_resource_5469,182249
int SetUpTestCaseTest::counter_ = 0;counter_5472,182292
const char* SetUpTestCaseTest::shared_resource_ = nullptr;shared_resource_5473,182329
TEST_F(SetUpTestCaseTest, Test1) { EXPECT_STRNE(nullptr, shared_resource_); }TEST_F5476,182430
TEST_F(SetUpTestCaseTest, Test2) {TEST_F5479,182556
class SetUpTestSuiteTest : public Test {SetUpTestSuiteTest5485,182724
  static void SetUpTestSuite() {SetUpTestSuite5489,182860
  static void TearDownTestSuite() {TearDownTestSuite5506,183374
  static int counter_;counter_5527,183966
  static const char* shared_resource_;shared_resource_5530,184054
int SetUpTestSuiteTest::counter_ = 0;counter_5533,184097
const char* SetUpTestSuiteTest::shared_resource_ = nullptr;shared_resource_5534,184135
TEST_F(SetUpTestSuiteTest, TestSetupTestSuite1) {TEST_F5537,184237
TEST_F(SetUpTestSuiteTest, TestSetupTestSuite2) {TEST_F5542,184380
struct Flags {Flags5549,184599
  Flags()Flags5551,184684
  static Flags AlsoRunDisabledTests(bool also_run_disabled_tests) {AlsoRunDisabledTests5574,185332
  static Flags BreakOnFailure(bool break_on_failure) {BreakOnFailure5582,185593
  static Flags CatchExceptions(bool catch_exceptions) {CatchExceptions5590,185827
  static Flags DeathTestUseFork(bool death_test_use_fork) {DeathTestUseFork5598,186065
  static Flags FailFast(bool fail_fast) {FailFast5606,186303
  static Flags Filter(const char* filter) {Filter5614,186500
  static Flags ListTests(bool list_tests) {ListTests5622,186697
  static Flags Output(const char* output) {Output5630,186898
  static Flags Brief(bool brief) {Brief5638,187090
  static Flags PrintTime(bool print_time) {PrintTime5646,187276
  static Flags RandomSeed(int32_t random_seed) {RandomSeed5654,187482
  static Flags Repeat(int32_t repeat) {Repeat5662,187690
  static Flags RecreateEnvironmentsWhenRepeating(RecreateEnvironmentsWhenRepeating5670,187909
  static Flags Shuffle(bool shuffle) {Shuffle5680,188228
  static Flags StackTraceDepth(int32_t stack_trace_depth) {StackTraceDepth5688,188435
  static Flags StreamResultTo(const char* stream_result_to) {StreamResultTo5696,188682
  static Flags ThrowOnFailure(bool throw_on_failure) {ThrowOnFailure5704,188923
  bool also_run_disabled_tests;also_run_disabled_tests5711,189106
  bool break_on_failure;break_on_failure5712,189138
  bool catch_exceptions;catch_exceptions5713,189163
  bool death_test_use_fork;death_test_use_fork5714,189188
  bool fail_fast;fail_fast5715,189216
  const char* filter;filter5716,189234
  bool list_tests;list_tests5717,189256
  const char* output;output5718,189275
  bool brief;brief5719,189297
  bool print_time;print_time5720,189311
  int32_t random_seed;random_seed5721,189330
  int32_t repeat;repeat5722,189353
  bool recreate_environments_when_repeating;recreate_environments_when_repeating5723,189371
  bool shuffle;shuffle5724,189416
  int32_t stack_trace_depth;stack_trace_depth5725,189432
  const char* stream_result_to;stream_result_to5726,189461
  bool throw_on_failure;throw_on_failure5727,189493
class ParseFlagsTest : public Test {ParseFlagsTest5731,189573
  static void AssertStringArrayEq(int size1, CharType** array1, int size2,AssertStringArrayEq5756,190503
  static void CheckFlags(const Flags& expected) {CheckFlags5766,190869
  static void TestParsingFlags(int argc1, const CharType** argv1,TestParsingFlags5794,192435
# define GTEST_TEST_PARSING_FLAGS_(GTEST_TEST_PARSING_FLAGS_5839,194018
TEST_F(ParseFlagsTest, Empty) {TEST_F5846,194314
TEST_F(ParseFlagsTest, NoFlag) {TEST_F5855,194528
TEST_F(ParseFlagsTest, FailFast) {TEST_F5864,194751
TEST_F(ParseFlagsTest, FilterBad) {TEST_F5873,195019
TEST_F(ParseFlagsTest, FilterEmpty) {TEST_F5882,195301
TEST_F(ParseFlagsTest, FilterNonEmpty) {TEST_F5891,195572
TEST_F(ParseFlagsTest, BreakOnFailureWithoutValue) {TEST_F5900,195845
TEST_F(ParseFlagsTest, BreakOnFailureFalse_0) {TEST_F5909,196145
TEST_F(ParseFlagsTest, BreakOnFailureFalse_f) {TEST_F5918,196443
TEST_F(ParseFlagsTest, BreakOnFailureFalse_F) {TEST_F5927,196741
TEST_F(ParseFlagsTest, BreakOnFailureTrue) {TEST_F5937,197076
TEST_F(ParseFlagsTest, CatchExceptions) {TEST_F5946,197368
TEST_F(ParseFlagsTest, DeathTestUseFork) {TEST_F5955,197659
TEST_F(ParseFlagsTest, DuplicatedFlags) {TEST_F5965,198040
TEST_F(ParseFlagsTest, UnrecognizedFlag) {TEST_F5975,198369
TEST_F(ParseFlagsTest, ListTestsFlag) {TEST_F5989,198819
TEST_F(ParseFlagsTest, ListTestsTrue) {TEST_F5998,199112
TEST_F(ParseFlagsTest, ListTestsFalse) {TEST_F6007,199408
TEST_F(ParseFlagsTest, ListTestsFalse_f) {TEST_F6016,199682
TEST_F(ParseFlagsTest, ListTestsFalse_F) {TEST_F6025,199958
TEST_F(ParseFlagsTest, OutputEmpty) {TEST_F6034,200238
TEST_F(ParseFlagsTest, OutputXml) {TEST_F6043,200501
TEST_F(ParseFlagsTest, OutputXmlFile) {TEST_F6052,200767
TEST_F(ParseFlagsTest, OutputXmlDirectory) {TEST_F6061,201058
TEST_F(ParseFlagsTest, BriefFlag) {TEST_F6072,201413
TEST_F(ParseFlagsTest, BriefFlagTrue) {TEST_F6081,201688
TEST_F(ParseFlagsTest, BriefFlagFalse) {TEST_F6090,201970
TEST_F(ParseFlagsTest, PrintTimeFlag) {TEST_F6099,202238
TEST_F(ParseFlagsTest, PrintTimeTrue) {TEST_F6108,202531
TEST_F(ParseFlagsTest, PrintTimeFalse) {TEST_F6117,202827
TEST_F(ParseFlagsTest, PrintTimeFalse_f) {TEST_F6126,203101
TEST_F(ParseFlagsTest, PrintTimeFalse_F) {TEST_F6135,203377
TEST_F(ParseFlagsTest, RandomSeed) {TEST_F6144,203658
TEST_F(ParseFlagsTest, Repeat) {TEST_F6153,203932
TEST_F(ParseFlagsTest, RecreateEnvironmentsWhenRepeating) {TEST_F6162,204216
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsFlag) {TEST_F6176,204605
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsTrue) {TEST_F6186,204974
TEST_F(ParseFlagsTest, AlsoRunDisabledTestsFalse) {TEST_F6197,205370
TEST_F(ParseFlagsTest, ShuffleWithoutValue) {TEST_F6208,205726
TEST_F(ParseFlagsTest, ShuffleFalse_0) {TEST_F6217,205994
TEST_F(ParseFlagsTest, ShuffleTrue) {TEST_F6226,206294
TEST_F(ParseFlagsTest, StackTraceDepth) {TEST_F6235,206571
TEST_F(ParseFlagsTest, StreamResultTo) {TEST_F6243,206816
TEST_F(ParseFlagsTest, ThrowOnFailureWithoutValue) {TEST_F6254,207160
TEST_F(ParseFlagsTest, ThrowOnFailureFalse_0) {TEST_F6263,207460
TEST_F(ParseFlagsTest, ThrowOnFailureTrue) {TEST_F6273,207795
TEST_F(ParseFlagsTest, WideStrings) {TEST_F6283,208097
class FlagfileTest : public ParseFlagsTest {FlagfileTest6309,208661
  internal::FilePath CreateFlagfile(const char* contents) {CreateFlagfile6326,209160
  internal::FilePath testdata_path_;testdata_path_6336,209515
TEST_F(FlagfileTest, Empty) {TEST_F6340,209584
TEST_F(FlagfileTest, FilterNonEmpty) {TEST_F6353,210029
TEST_F(FlagfileTest, SeveralFlags) {TEST_F6367,210521
class CurrentTestInfoTest : public Test {CurrentTestInfoTest6389,211270
  static void SetUpTestSuite() {SetUpTestSuite6393,211425
  static void TearDownTestSuite() {TearDownTestSuite6403,211802
TEST_F(CurrentTestInfoTest, WorksForFirstTestInATestSuite) {TEST_F6413,212170
TEST_F(CurrentTestInfoTest, WorksForSecondTestInATestSuite) {TEST_F6428,212928
namespace my_namespace {my_namespace6444,213602
namespace testing {testing6445,213627
class Test {};Test6449,213746
class Message {};Message6453,213874
class AssertionResult {};AssertionResult6458,214024
TEST(NestedTestingNamespaceTest, Success) {TEST6461,214117
TEST(NestedTestingNamespaceTest, Failure) {TEST6466,214272
class ProtectedFixtureMethodsTest : public Test {ProtectedFixtureMethodsTest6478,214683
TEST(StreamingAssertionsTest, Unconditional) {TEST6486,214942
TEST(StreamingAssertionsTest, Truth) {TEST6499,215366
TEST(StreamingAssertionsTest, Truth2) {TEST6508,215722
TEST(StreamingAssertionsTest, IntegerEquals) {TEST6522,216205
TEST(StreamingAssertionsTest, IntegerLessThan) {TEST6531,216559
TEST(StreamingAssertionsTest, StringsEqual) {TEST6540,216915
TEST(StreamingAssertionsTest, StringsNotEqual) {TEST6549,217312
TEST(StreamingAssertionsTest, StringsEqualIgnoringCase) {TEST6558,217712
TEST(StreamingAssertionsTest, StringNotEqualIgnoringCase) {TEST6567,218137
TEST(StreamingAssertionsTest, FloatingPointEquals) {TEST6576,218564
TEST(StreamingAssertionsTest, Throw) {TEST6587,218990
TEST(StreamingAssertionsTest, NoThrow) {TEST6596,219418
TEST(StreamingAssertionsTest, AnyThrow) {TEST6605,219834
TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsYes) {TEST6618,220370
TEST(ColoredOutputTest, UsesColorsWhenGTestColorFlagIsAliasOfYes) {TEST6630,220822
TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsNo) {TEST6643,221237
TEST(ColoredOutputTest, UsesNoColorWhenGTestColorFlagIsInvalid) {TEST6655,221692
TEST(ColoredOutputTest, UsesColorsWhenStdoutIsTty) {TEST6668,222090
TEST(ColoredOutputTest, UsesColorsWhenTermSupportsColors) {TEST6676,222357
static bool dummy1 GTEST_ATTRIBUTE_UNUSED_ = StaticAssertTypeEq<bool, bool>();GTEST_ATTRIBUTE_UNUSED_6743,224794
static bool dummy2 GTEST_ATTRIBUTE_UNUSED_ =GTEST_ATTRIBUTE_UNUSED_6744,224873
class StaticAssertTypeEqTestHelper {StaticAssertTypeEqTestHelper6750,225044
  StaticAssertTypeEqTestHelper() { StaticAssertTypeEq<bool, T>(); }StaticAssertTypeEqTestHelper6752,225090
TEST(StaticAssertTypeEqTest, WorksInClass) {TEST6755,225162
typedef int IntAlias;IntAlias6761,225312
TEST(StaticAssertTypeEqTest, CompilesForEqualTypes) {TEST6763,225335
TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsNoFailure) {TEST6768,225472
static void FailFatally() { FAIL(); }FailFatally6772,225578
TEST(HasNonfatalFailureTest, ReturnsFalseWhenThereIsOnlyFatalFailure) {TEST6774,225617
TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {TEST6781,225838
TEST(HasNonfatalFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {TEST6788,226056
static bool HasNonfatalFailureHelper() {HasNonfatalFailureHelper6797,226369
TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody) {TEST6801,226459
TEST(HasNonfatalFailureTest, WorksOutsideOfTestBody2) {TEST6805,226561
TEST(HasFailureTest, ReturnsFalseWhenThereIsNoFailure) {TEST6812,226771
TEST(HasFailureTest, ReturnsTrueWhenThereIsFatalFailure) {TEST6816,226861
TEST(HasFailureTest, ReturnsTrueWhenThereIsNonfatalFailure) {TEST6823,227042
TEST(HasFailureTest, ReturnsTrueWhenThereAreFatalAndNonfatalFailures) {TEST6830,227226
static bool HasFailureHelper() { return testing::Test::HasFailure(); }HasFailureHelper6839,227497
TEST(HasFailureTest, WorksOutsideOfTestBody) {TEST6841,227569
TEST(HasFailureTest, WorksOutsideOfTestBody2) {TEST6845,227655
class TestListener : public EmptyTestEventListener {TestListener6852,227831
  TestListener() : on_start_counter_(nullptr), is_destroyed_(nullptr) {}TestListener6854,227893
  TestListener(int* on_start_counter, bool* is_destroyed)TestListener6855,227966
  int* on_start_counter_;on_start_counter_6870,228352
  bool* is_destroyed_;is_destroyed_6871,228378
TEST(TestEventListenersTest, ConstructionWorks) {TEST6875,228431
TEST(TestEventListenersTest, DestructionWorks) {TEST6885,228805
TEST(TestEventListenersTest, Append) {TEST6911,229927
class SequenceTestingListener : public EmptyTestEventListener {SequenceTestingListener6928,230517
  SequenceTestingListener(std::vector<std::string>* vector, const char* id)SequenceTestingListener6930,230590
  std::string GetEventDescription(const char* method) {GetEventDescription6953,231377
  std::vector<std::string>* vector_;vector_6959,231528
  const char* const id_;id_6960,231565
TEST(EventListenerTest, AppendKeepsOrder) {TEST6965,231655
TEST(TestEventListenersTest, Release) {TEST7006,233388
TEST(EventListenerTest, SuppressEventForwarding) {TEST7027,234179
TEST(EventListenerDeathTest, EventsNotForwardedInDeathTestSubprecesses) {TEST7043,234858
TEST(EventListenerTest, default_result_printer) {TEST7053,235355
TEST(EventListenerTest, RemovingDefaultResultPrinterWorks) {TEST7084,236545
TEST(EventListenerTest, default_xml_generator) {TEST7112,237733
TEST(EventListenerTest, RemovingDefaultXmlGeneratorWorks) {TEST7143,238916
GTEST_TEST(AlternativeNameTest, Works) {  // GTEST_TEST is the same as TEST.GTEST_TEST7173,240188
class ConversionHelperBase {};ConversionHelperBase7219,241917
class ConversionHelperDerived : public ConversionHelperBase {};ConversionHelperDerived7220,241948
struct HasDebugStringMethods {HasDebugStringMethods7222,242013
  std::string DebugString() const { return ""; }DebugString7223,242044
  std::string ShortDebugString() const { return ""; }ShortDebugString7224,242093
struct InheritsDebugStringMethods : public HasDebugStringMethods {};InheritsDebugStringMethods7227,242151
struct WrongTypeDebugStringMethod {WrongTypeDebugStringMethod7229,242221
  std::string DebugString() const { return ""; }DebugString7230,242257
  int ShortDebugString() const { return 1; }ShortDebugString7231,242306
struct NotConstDebugStringMethod {NotConstDebugStringMethod7234,242355
  std::string DebugString() { return ""; }DebugString7235,242390
  std::string ShortDebugString() const { return ""; }ShortDebugString7236,242433
struct MissingDebugStringMethod {MissingDebugStringMethod7239,242491
  std::string DebugString() { return ""; }DebugString7240,242525
TEST(HasDebugStringAndShortDebugStringTest, ValueIsCompileTimeConstant) {TEST7247,242685
TEST(HasDebugStringAndShortDebugStringTest,TEST7274,243836
TEST(HasDebugStringAndShortDebugStringTest,TEST7282,244142
void TestGTestRemoveReferenceAndConst() {TestGTestRemoveReferenceAndConst7292,244476
TEST(RemoveReferenceToConstTest, Works) {TEST7297,244663
void TestGTestReferenceToConst() {TestGTestReferenceToConst7308,245061
TEST(GTestReferenceToConstTest, Works) {TEST7313,245225
class NonContainer {};NonContainer7323,245526
TEST(IsContainerTestTest, WorksForNonContainer) {TEST7325,245550
TEST(IsContainerTestTest, WorksForContainer) {TEST7331,245826
struct ConstOnlyContainerWithPointerIterator {ConstOnlyContainerWithPointerIterator7338,246068
struct ConstOnlyContainerWithClassIterator {ConstOnlyContainerWithClassIterator7344,246212
  struct const_iterator {const_iterator7345,246257
TEST(IsContainerTestTest, ConstOnlyContainer) {TEST7353,246441
struct AHashTable {AHashTable7361,246738
  typedef void hasher;hasher7362,246758
struct NotReallyAHashTable {NotReallyAHashTable7364,246784
  typedef void hasher;hasher7365,246813
  typedef void reverse_iterator;reverse_iterator7366,246836
TEST(IsHashTable, Basic) {TEST7368,246872
TEST(ArrayEqTest, WorksForDegeneratedArrays) {TEST7377,247217
TEST(ArrayEqTest, WorksForOneDimensionalArrays) {TEST7382,247331
TEST(ArrayEqTest, WorksForTwoDimensionalArrays) {TEST7394,247634
TEST(ArrayAwareFindTest, WorksForOneDimensionalArray) {TEST7408,247959
TEST(ArrayAwareFindTest, WorksForTwoDimensionalArray) {TEST7414,248148
TEST(CopyArrayTest, WorksForDegeneratedArrays) {TEST7425,248436
TEST(CopyArrayTest, WorksForOneDimensionalArrays) {TEST7431,248544
TEST(CopyArrayTest, WorksForTwoDimensionalArrays) {TEST7444,248838
TEST(NativeArrayTest, ConstructorFromArrayWorks) {TEST7459,249187
TEST(NativeArrayTest, CreatesAndDeletesCopyOfArrayWhenAskedTo) {TEST7466,249387
TEST(NativeArrayTest, TypeMembersAreCorrect) {TEST7481,249779
TEST(NativeArrayTest, MethodsWork) {TEST7489,250108
TEST(NativeArrayTest, WorksForTwoDimensionalArray) {TEST7515,250796
TEST(IndexSequence, MakeIndexSequence) {TEST7523,251026
TEST(ElemFromList, Basic) {TEST7539,251640
TEST(FlatTuple, Basic) {TEST7553,252178
std::string AddIntToString(int i, const std::string& s) {AddIntToString7572,252699
TEST(FlatTuple, Apply) {TEST7577,252808
struct ConstructionCounting {ConstructionCounting7600,253377
  ConstructionCounting() { ++default_ctor_calls; }ConstructionCounting7601,253407
  ~ConstructionCounting() { ++dtor_calls; }~ConstructionCounting7602,253458
  ConstructionCounting(const ConstructionCounting&) { ++copy_ctor_calls; }ConstructionCounting7603,253502
  ConstructionCounting& operator=(const ConstructionCounting&) {operator =7605,253656
  static void Reset() {Reset7614,253893
  static int default_ctor_calls;default_ctor_calls7623,254082
  static int dtor_calls;dtor_calls7624,254115
  static int copy_ctor_calls;copy_ctor_calls7625,254140
  static int move_ctor_calls;move_ctor_calls7626,254170
  static int copy_assignment_calls;copy_assignment_calls7627,254200
  static int move_assignment_calls;move_assignment_calls7628,254236
int ConstructionCounting::default_ctor_calls = 0;default_ctor_calls7631,254276
int ConstructionCounting::dtor_calls = 0;dtor_calls7632,254326
int ConstructionCounting::copy_ctor_calls = 0;copy_ctor_calls7633,254368
int ConstructionCounting::move_ctor_calls = 0;move_ctor_calls7634,254415
int ConstructionCounting::copy_assignment_calls = 0;copy_assignment_calls7635,254462
int ConstructionCounting::move_assignment_calls = 0;move_assignment_calls7636,254515
TEST(FlatTuple, ConstructorCalls) {TEST7638,254569
TEST(FlatTuple, ManyTypes) {TEST7712,257378
#define GTEST_FLAT_TUPLE_INT8 GTEST_FLAT_TUPLE_INT87718,257619
#define GTEST_FLAT_TUPLE_INT16 GTEST_FLAT_TUPLE_INT167719,257689
#define GTEST_FLAT_TUPLE_INT32 GTEST_FLAT_TUPLE_INT327720,257764
#define GTEST_FLAT_TUPLE_INT64 GTEST_FLAT_TUPLE_INT647721,257841
#define GTEST_FLAT_TUPLE_INT128 GTEST_FLAT_TUPLE_INT1287722,257918
#define GTEST_FLAT_TUPLE_INT256 GTEST_FLAT_TUPLE_INT2567723,257996
TEST(SkipPrefixTest, SkipsWhenPrefixMatches) {TEST7739,258451
TEST(SkipPrefixTest, DoesNotSkipWhenPrefixDoesNotMatch) {TEST7751,258692
TEST(AdHocTestResultTest, AdHocTestResultForUnitTestDoesNotShowFailure) {TEST7764,258976
class DynamicUnitTestFixture : public testing::Test {};DynamicUnitTestFixture7770,259196
class DynamicTest : public DynamicUnitTestFixture {DynamicTest7772,259253
auto* dynamic_test = testing::RegisterTest(dynamic_test7776,259359
TEST(RegisterTest, WasRegistered) {TEST7780,259552

test/googletest/googletest/test/production.cc,58
PrivateCode::PrivateCode() : x_(0) {}PrivateCode35,1637

test/googletest/googletest/test/googletest-param-test-test.h,317
#define GOOGLETEST_TEST_GOOGLETEST_PARAM_TEST_TEST_H_GOOGLETEST_TEST_GOOGLETEST_PARAM_TEST_TEST_H_36,1781
class ExternalInstantiationTest : public ::testing::TestWithParam<int> {ExternalInstantiationTest42,1963
class InstantiationInMultipleTranslationUnitsTestInstantiationInMultipleTranslationUnitsTest47,2126

test/googletest/googletest/test/gtest_stress_test.cc,1441
namespace testing {testing42,1788
const int kThreadCount = 50;kThreadCount54,2173
std::string IdToKey(int id, const char* suffix) {IdToKey56,2203
std::string IdToString(int id) {IdToString62,2337
void ExpectKeyAndValueWereRecordedForId(ExpectKeyAndValueWereRecordedForId68,2448
void ManyAsserts(int id) {ManyAsserts81,3022
void CheckTestFailureCount(int expected_failures) {CheckTestFailureCount109,4031
TEST(StressTest, CanUseScopedTraceAndAssertionsInManyThreads) {TEST119,4487
void FailingThread(bool is_fatal) {FailingThread155,5885
void GenerateFatalFailureInAnotherThread(bool is_fatal) {GenerateFatalFailureInAnotherThread164,6161
TEST(NoFatalFailureTest, ExpectNoFatalFailureIgnoresFailuresInOtherThreads) {TEST169,6306
void AssertNoFatalFailureIgnoresFailuresInOtherThreads() {AssertNoFatalFailureIgnoresFailuresInOtherThreads177,6636
TEST(NoFatalFailureTest, AssertNoFatalFailureIgnoresFailuresInOtherThreads) {TEST180,6767
TEST(FatalFailureTest, ExpectFatalFailureIgnoresFailuresInOtherThreads) {TEST189,7146
TEST(FatalFailureOnAllThreadsTest, ExpectFatalFailureOnAllThreads) {TEST196,7450
TEST(NonFatalFailureTest, ExpectNonFatalFailureIgnoresFailuresInOtherThreads) {TEST207,7948
TEST(NonFatalFailureOnAllThreadsTest, ExpectNonFatalFailureOnAllThreads) {TEST215,8288
int main(int argc, char **argv) {main229,8837
TEST(StressTest,TEST240,9091
int main(int argc, char **argv) {main244,9185

test/googletest/googletest/test/googletest-shuffle-test_.cc,792
class A : public Test {};A48,1974
TEST_F(A, A) {}TEST_F49,2000
TEST_F(A, B) {}TEST_F50,2016
TEST(ADeathTest, A) {}TEST52,2033
TEST(ADeathTest, B) {}TEST53,2056
TEST(ADeathTest, C) {}TEST54,2079
TEST(B, A) {}TEST56,2103
TEST(B, B) {}TEST57,2117
TEST(B, C) {}TEST58,2131
TEST(B, DISABLED_D) {}TEST59,2145
TEST(B, DISABLED_E) {}TEST60,2168
TEST(BDeathTest, A) {}TEST62,2192
TEST(BDeathTest, B) {}TEST63,2215
TEST(C, A) {}TEST65,2239
TEST(C, B) {}TEST66,2253
TEST(C, C) {}TEST67,2267
TEST(C, DISABLED_D) {}TEST68,2281
TEST(CDeathTest, A) {}TEST70,2305
TEST(DISABLED_D, A) {}TEST72,2329
TEST(DISABLED_D, DISABLED_B) {}TEST73,2352
class TestNamePrinter : public EmptyTestEventListener {TestNamePrinter77,2488
int main(int argc, char **argv) {main91,2853

test/googletest/googletest/test/googletest-throw-on-failure-test.py,683
THROW_ON_FAILURE = 'gtest_throw_on_failure'THROW_ON_FAILURE45,1897
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH49,2036
def SetEnvVar(env_var, value):SetEnvVar56,2145
def Run(command):Run68,2421
class ThrowOnFailureTest(gtest_test_utils.TestCase):ThrowOnFailureTest77,2658
  def RunAndVerify(self, env_var_value, flag_value, should_fail):RunAndVerify80,2753
  def testDefaultBehavior(self):testDefaultBehavior125,4121
  def testThrowOnFailureEnvVar(self):testThrowOnFailureEnvVar130,4284
  def testThrowOnFailureFlag(self):testThrowOnFailureFlag140,4636
  def testThrowOnFailureFlagOverridesEnvVar(self):testThrowOnFailureFlagOverridesEnvVar150,4972

test/googletest/googletest/test/gtest_xml_output_unittest_.cc,2653
class SuccessfulTest : public Test {SuccessfulTest48,2087
TEST_F(SuccessfulTest, Succeeds) {TEST_F51,2128
class FailedTest : public Test {FailedTest56,2222
TEST_F(FailedTest, Fails) {TEST_F59,2259
class DisabledTest : public Test {DisabledTest63,2309
TEST_F(DisabledTest, DISABLED_test_not_run) {TEST_F66,2348
class SkippedTest : public Test {SkippedTest70,2464
TEST_F(SkippedTest, Skipped) {TEST_F73,2502
TEST_F(SkippedTest, SkippedWithMessage) {TEST_F77,2552
TEST_F(SkippedTest, SkippedAfterFailure) {TEST_F81,2667
TEST(MixedResultTest, Succeeds) {TEST86,2802
TEST(MixedResultTest, Fails) {TEST91,2877
TEST(MixedResultTest, DISABLED_test) {TEST96,2949
TEST(XmlQuotingTest, OutputsCData) {TEST100,3058
TEST(InvalidCharactersTest, InvalidCharactersInMessage) {TEST107,3299
class PropertyRecordingTest : public Test {PropertyRecordingTest111,3415
  static void SetUpTestSuite() { RecordProperty("SetUpTestSuite", "yes"); }SetUpTestSuite113,3468
  static void TearDownTestSuite() {TearDownTestSuite114,3544
TEST_F(PropertyRecordingTest, OneProperty) {TEST_F119,3636
TEST_F(PropertyRecordingTest, IntValuedProperty) {TEST_F123,3716
TEST_F(PropertyRecordingTest, ThreeProperties) {TEST_F127,3802
TEST_F(PropertyRecordingTest, TwoValuesForOneKeyUsesLastValue) {TEST_F133,3950
TEST(NoFixtureTest, RecordProperty) {TEST138,4082
void ExternalUtilityThatCallsRecordProperty(const std::string& key, int value) {ExternalUtilityThatCallsRecordProperty142,4153
void ExternalUtilityThatCallsRecordProperty(const std::string& key,ExternalUtilityThatCallsRecordProperty146,4282
TEST(NoFixtureTest, ExternalUtilityThatCallsRecordIntValuedProperty) {TEST151,4470
TEST(NoFixtureTest, ExternalUtilityThatCallsRecordStringValuedProperty) {TEST155,4612
class ValueParamTest : public TestWithParam<int> {};ValueParamTest161,4883
TEST_P(ValueParamTest, HasValueParamAttribute) {}TEST_P162,4936
TEST_P(ValueParamTest, AnotherTestThatHasValueParamAttribute) {}TEST_P163,4986
template <typename T> class TypedTest : public Test {};TypedTest168,5223
typedef testing::Types<int, long> TypedTestTypes;TypedTestTypes169,5279
TYPED_TEST(TypedTest, HasTypeParamAttribute) {}TYPED_TEST171,5374
class TypeParameterizedTestSuite : public Test {};TypeParameterizedTestSuite176,5563
TYPED_TEST_SUITE_P(TypeParameterizedTestSuite);TypeParameterizedTestSuite177,5614
TYPED_TEST_P(TypeParameterizedTestSuite, HasTypeParamAttribute) {}TYPED_TEST_P178,5662
typedef testing::Types<int, long> TypeParameterizedTestSuiteTypes;  // NOLINTTypeParameterizedTestSuiteTypes180,5809
int main(int argc, char** argv) {main184,6020

test/googletest/googletest/test/gtest_main_unittest.cc,50
TEST(GTestMainTest, ShouldSucceed) {TEST38,1691

test/googletest/googletest/test/gtest_skip_in_environment_setup_test.cc,192
class SetupEnvironment : public testing::Environment {SetupEnvironment36,1704
TEST(Test, AlwaysFails) { EXPECT_EQ(true, false); }TEST41,1851
int main(int argc, char **argv) {main43,1904

test/googletest/googletest/test/googletest-param-test-invalid-name2-test.py,429
binary_name = 'googletest-param-test-invalid-name2-test_'binary_name35,1654
COMMAND = gtest_test_utils.GetTestExecutablePath(binary_name)COMMAND36,1712
def Assert(condition):Assert39,1776
def TestExitCodeAndOutput(command):TestExitCodeAndOutput44,1846
class GTestParamTestInvalidName2Test(gtest_test_utils.TestCase):GTestParamTestInvalidName2Test56,2144
  def testExitCodeAndOutput(self):testExitCodeAndOutput58,2210

test/googletest/googletest/test/gtest_list_output_unittest.py,449
GTEST_LIST_TESTS_FLAG = '--gtest_list_tests'GTEST_LIST_TESTS_FLAG45,2022
GTEST_OUTPUT_FLAG = '--gtest_output'GTEST_OUTPUT_FLAG46,2067
class GTestListTestsOutputUnitTest(gtest_test_utils.TestCase):GTestListTestsOutputUnitTest226,7366
  def testXml(self):testXml230,7515
  def testJSON(self):testJSON238,7765
  def _GetOutput(self, out_format):_GetOutput246,8018
  def _TestOutput(self, test_format, expected_output):_TestOutput268,8755

test/googletest/googletest/test/gtest-typed-test_test.h,359
#define GOOGLETEST_TEST_GTEST_TYPED_TEST_TEST_H_GOOGLETEST_TEST_GTEST_TYPED_TEST_TEST_H_31,1605
class ContainerTest : public Test {ContainerTest43,1960
TYPED_TEST_SUITE_P(ContainerTest);ContainerTest46,2000
TYPED_TEST_P(ContainerTest, CanBeDefaultConstructed) {TYPED_TEST_P48,2036
TYPED_TEST_P(ContainerTest, InitialSizeIsZero) {TYPED_TEST_P52,2117

test/googletest/googletest/test/gtest_xml_outfiles_test.py,613
GTEST_OUTPUT_SUBDIR = "xml_outfiles"GTEST_OUTPUT_SUBDIR39,1700
GTEST_OUTPUT_1_TEST = "gtest_xml_outfile1_test_"GTEST_OUTPUT_1_TEST40,1737
GTEST_OUTPUT_2_TEST = "gtest_xml_outfile2_test_"GTEST_OUTPUT_2_TEST41,1786
class GTestXMLOutFilesTest(gtest_xml_test_utils.GTestXMLTestCase):GTestXMLOutFilesTest72,3103
  def setUp(self):setUp75,3233
  def tearDown(self):tearDown83,3591
  def DeleteFilesAndDir(self):DeleteFilesAndDir86,3643
  def testOutfile1(self):testOutfile1100,3987
  def testOutfile2(self):testOutfile2103,4073
  def _TestOutFile(self, test_name, expected_xml):_TestOutFile106,4159

test/googletest/googletest/test/googletest-env-var-test.py,601
COMMAND = gtest_test_utils.GetTestExecutablePath('googletest-env-var-test_')COMMAND41,1751
environ = os.environ.copy()environ43,1829
def AssertEq(expected, actual):AssertEq46,1859
def SetEnvVar(env_var, value):SetEnvVar53,2021
def GetFlag(flag):GetFlag62,2234
def TestFlag(flag, test_val, default_val):TestFlag71,2442
class GTestEnvVarTest(gtest_test_utils.TestCase):GTestEnvVarTest81,2736
  def testEnvVarAffectsFlag(self):testEnvVarAffectsFlag83,2787
  def testXmlOutputFile(self):testXmlOutputFile105,3609
  def testXmlOutputFileOverride(self):testXmlOutputFileOverride112,3840

test/googletest/googletest/test/googletest-output-test.py,2375
GENGOLDEN_FLAG = '--gengolden'GENGOLDEN_FLAG49,1960
CATCH_EXCEPTIONS_ENV_VAR_NAME = 'GTEST_CATCH_EXCEPTIONS'CATCH_EXCEPTIONS_ENV_VAR_NAME50,1991
NO_STACKTRACE_SUPPORT_FLAG = '--no_stacktrace_support'NO_STACKTRACE_SUPPORT_FLAG53,2101
GOLDEN_NAME = 'googletest-output-test-golden-lin.txt'GOLDEN_NAME58,2246
PROGRAM_PATH = gtest_test_utils.GetTestExecutablePath('googletest-output-test_')PROGRAM_PATH60,2301
COMMAND_LIST_TESTS = ({}, [PROGRAM_PATH, '--gtest_list_tests'])COMMAND_LIST_TESTS64,2493
COMMAND_WITH_COLOR = ({}, [PROGRAM_PATH, '--gtest_color=yes'])COMMAND_WITH_COLOR65,2557
COMMAND_WITH_TIME = ({}, [PROGRAM_PATH,COMMAND_WITH_TIME66,2620
COMMAND_WITH_DISABLED = (COMMAND_WITH_DISABLED70,2858
COMMAND_WITH_SHARDING = (COMMAND_WITH_SHARDING75,3046
GOLDEN_PATH = os.path.join(gtest_test_utils.GetSourceDir(), GOLDEN_NAME)GOLDEN_PATH81,3240
def ToUnixLineEnding(s):ToUnixLineEnding84,3315
def RemoveLocations(test_output):RemoveLocations90,3468
def RemoveStackTraceDetails(output):RemoveStackTraceDetails107,3970
def RemoveStackTraces(output):RemoveStackTraces115,4233
def RemoveTime(output):RemoveTime122,4458
def RemoveTypeInfoDetails(test_output):RemoveTypeInfoDetails128,4605
def NormalizeToCurrentPlatform(test_output):NormalizeToCurrentPlatform142,5005
def RemoveTestCounts(output):RemoveTestCounts156,5555
def RemoveMatchingTests(test_output, pattern):RemoveMatchingTests170,6092
def NormalizeOutput(output):NormalizeOutput193,6813
def GetShellCommandOutput(env_cmd):GetShellCommandOutput203,7076
def GetCommandOutput(env_cmd):GetCommandOutput224,7733
def GetOutputOfAllCommands():GetOutputOfAllCommands241,8312
test_list = GetShellCommandOutput(COMMAND_LIST_TESTS)test_list250,8619
SUPPORTS_DEATH_TESTS = 'DeathTest' in test_listSUPPORTS_DEATH_TESTS251,8673
SUPPORTS_TYPED_TESTS = 'TypedTest' in test_listSUPPORTS_TYPED_TESTS252,8721
SUPPORTS_THREADS = 'ExpectFailureWithThreadsTest' in test_listSUPPORTS_THREADS253,8769
SUPPORTS_STACK_TRACES = NO_STACKTRACE_SUPPORT_FLAG not in sys.argvSUPPORTS_STACK_TRACES254,8832
CAN_GENERATE_GOLDEN_FILE = (SUPPORTS_DEATH_TESTS andCAN_GENERATE_GOLDEN_FILE256,8900
class GTestOutputTest(gtest_test_utils.TestCase):GTestOutputTest261,9107
  def RemoveUnsupportedTests(self, test_output):RemoveUnsupportedTests262,9157
  def testOutput(self):testOutput281,10061

test/googletest/googletest/test/googletest-color-test_.cc,90
TEST(GTestColorTest, Dummy) {TEST46,2130
int main(int argc, char** argv) {main49,2163

test/googletest/googletest/test/gtest_list_output_unittest_.cc,1154
TEST(FooTest, Test1) {}TEST43,1968
TEST(FooTest, Test2) {}TEST45,1993
class FooTestFixture : public ::testing::Test {};FooTestFixture47,2018
TEST_F(FooTestFixture, Test3) {}TEST_F48,2068
TEST_F(FooTestFixture, Test4) {}TEST_F49,2101
class ValueParamTest : public ::testing::TestWithParam<int> {};ValueParamTest51,2135
TEST_P(ValueParamTest, Test5) {}TEST_P52,2199
TEST_P(ValueParamTest, Test6) {}TEST_P53,2232
class TypedTest : public ::testing::Test {};TypedTest57,2369
typedef testing::Types<int, bool> TypedTestTypes;TypedTestTypes58,2414
TYPED_TEST(TypedTest, Test7) {}TYPED_TEST60,2509
TYPED_TEST(TypedTest, Test8) {}TYPED_TEST61,2541
class TypeParameterizedTestSuite : public ::testing::Test {};TypeParameterizedTestSuite64,2596
TYPED_TEST_SUITE_P(TypeParameterizedTestSuite);TypeParameterizedTestSuite65,2658
TYPED_TEST_P(TypeParameterizedTestSuite, Test9) {}TYPED_TEST_P66,2706
TYPED_TEST_P(TypeParameterizedTestSuite, Test10) {}TYPED_TEST_P67,2757
typedef testing::Types<int, bool> TypeParameterizedTestSuiteTypes;  // NOLINTTypeParameterizedTestSuiteTypes69,2881
int main(int argc, char **argv) {main73,3092

test/googletest/googletest/test/googletest-failfast-unittest.py,2358
BAZEL_FAIL_FAST_ENV_VAR = 'TESTBRIDGE_TEST_RUNNER_FAIL_FAST'BAZEL_FAIL_FAST_ENV_VAR49,2164
FAIL_FAST_ENV_VAR = 'GTEST_FAIL_FAST'FAIL_FAST_ENV_VAR52,2279
FAIL_FAST_FLAG = 'gtest_fail_fast'FAIL_FAST_FLAG55,2368
RUN_DISABLED_FLAG = 'gtest_also_run_disabled_tests'RUN_DISABLED_FLAG58,2451
FILTER_FLAG = 'gtest_filter'FILTER_FLAG61,2553
COMMAND = gtest_test_utils.GetTestExecutablePath(COMMAND64,2643
LIST_TESTS_FLAG = '--gtest_list_tests'LIST_TESTS_FLAG69,2818
SUPPORTS_DEATH_TESTS = 'HasDeathTest' in gtest_test_utils.Subprocess(SUPPORTS_DEATH_TESTS72,2912
environ = os.environ.copy()environ77,3036
def SetEnvVar(env_var, value):SetEnvVar80,3066
def RunAndReturnOutput(test_suite=None, fail_fast=None, run_disabled=False):RunAndReturnOutput89,3279
class GTestFailFastUnitTest(gtest_test_utils.TestCase):GTestFailFastUnitTest113,4111
  def testDefaultBehavior(self):testDefaultBehavior116,4239
  def testGoogletestFlag(self):testGoogletestFlag122,4411
  def testGoogletestEnvVar(self):testGoogletestEnvVar131,4767
  def testBazelEnvVar(self):testBazelEnvVar147,5303
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar163,5850
  def testGoogletestEnvVarOverridesBazelEnvVar(self):testGoogletestEnvVarOverridesBazelEnvVar174,6189
  def testEventListener(self):testEventListener187,6657
  def assertXmlResultCount(self, result, count, xml):assertXmlResultCount214,7982
  def assertXmlStatusCount(self, status, count, xml):assertXmlStatusCount220,8199
  def assertFailFastXmlAndTxtOutput(self,assertFailFastXmlAndTxtOutput226,8416
  def assertFailFastBehavior(self,assertFailFastBehavior250,9604
  def assertNotFailFastBehavior(self,assertNotFailFastBehavior264,10218
  def testFlag_HasFixtureTest(self):testFlag_HasFixtureTest278,10857
  def testFlag_HasSimpleTest(self):testFlag_HasSimpleTest293,11296
  def testFlag_HasParametersTest(self):testFlag_HasParametersTest308,11730
  def testFlag_HasDisabledTest(self):testFlag_HasDisabledTest323,12216
  def testFlag_HasDisabledRunDisabledTest(self):testFlag_HasDisabledRunDisabledTest340,12727
  def testFlag_HasDisabledSuiteTest(self):testFlag_HasDisabledSuiteTest357,13255
  def testFlag_HasDisabledSuiteRunDisabledTest(self):testFlag_HasDisabledSuiteRunDisabledTest374,13792
    def testFlag_HasDeathTest(self):testFlag_HasDeathTest393,14374

test/googletest/googletest/test/googletest-break-on-failure-unittest.py,1148
BREAK_ON_FAILURE_ENV_VAR = 'GTEST_BREAK_ON_FAILURE'BREAK_ON_FAILURE_ENV_VAR49,2110
BREAK_ON_FAILURE_FLAG = 'gtest_break_on_failure'BREAK_ON_FAILURE_FLAG52,2237
THROW_ON_FAILURE_ENV_VAR = 'GTEST_THROW_ON_FAILURE'THROW_ON_FAILURE_ENV_VAR55,2364
CATCH_EXCEPTIONS_ENV_VAR = 'GTEST_CATCH_EXCEPTIONS'CATCH_EXCEPTIONS_ENV_VAR58,2494
EXE_PATH = gtest_test_utils.GetTestExecutablePath(EXE_PATH61,2608
environ = gtest_test_utils.environenviron65,2706
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar66,2741
def Run(command):Run76,3115
class GTestBreakOnFailureUnitTest(gtest_test_utils.TestCase):GTestBreakOnFailureUnitTest89,3350
  def RunAndVerify(self, env_var_value, flag_value, expect_seg_fault):RunAndVerify95,3578
  def testDefaultBehavior(self):testDefaultBehavior140,5015
  def testEnvVar(self):testEnvVar147,5223
  def testFlag(self):testFlag157,5564
  def testFlagOverridesEnvVar(self):testFlagOverridesEnvVar167,5889
  def testBreakOnFailureOverridesThrowOnFailure(self):testBreakOnFailureOverridesThrowOnFailure183,6478
    def testCatchExceptionsDoesNotInterfere(self):testCatchExceptionsDoesNotInterfere195,6873

test/googletest/googletest/test/googletest-list-tests-unittest_.cc,1995
TEST(Foo, Bar1) {TEST43,1972
TEST(Foo, Bar2) {TEST46,1993
TEST(Foo, DISABLED_Bar3) {TEST49,2014
TEST(Abc, Xyz) {TEST52,2044
TEST(Abc, Def) {TEST55,2064
TEST(FooBar, Baz) {TEST58,2084
class FooTest : public testing::Test {FooTest61,2107
TEST_F(FooTest, Test1) {TEST_F64,2150
TEST_F(FooTest, DISABLED_Test2) {TEST_F67,2178
TEST_F(FooTest, Test3) {TEST_F70,2215
TEST(FooDeathTest, Test1) {TEST73,2243
class MyType {MyType78,2316
  explicit MyType(const std::string& a_value) : value_(a_value) {}MyType80,2340
  const std::string& value() const { return value_; }value82,2408
  std::string value_;value_85,2473
void PrintTo(const MyType& x, std::ostream* os) {PrintTo89,2545
class ValueParamTest : public testing::TestWithParam<MyType> {ValueParamTest93,2618
TEST_P(ValueParamTest, TestA) {TEST_P96,2685
TEST_P(ValueParamTest, TestB) {TEST_P99,2720
class VeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName {  // NOLINTVeryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooogName112,3349
class TypedTest : public testing::Test {TypedTest116,3655
class MyArray {MyArray120,3733
                       int*, MyArray<bool, 42> > MyTypes;MyTypes124,4049
TYPED_TEST(TypedTest, TestA) {TYPED_TEST128,4147
TYPED_TEST(TypedTest, TestB) {TYPED_TEST131,4181
class TypeParamTest : public testing::Test {TypeParamTest137,4278
TYPED_TEST_SUITE_P(TypeParamTest);TypeParamTest140,4327
TYPED_TEST_P(TypeParamTest, TestA) {TYPED_TEST_P142,4363
TYPED_TEST_P(TypeParamTest, TestB) {TYPED_TEST_P145,4403
int main(int argc, char **argv) {main152,4563

test/googletest/googletest/include/gtest/gtest.h,16775
#define GOOGLETEST_INCLUDE_GTEST_GTEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_H_51,2373
GTEST_DECLARE_bool_(also_run_disabled_tests);also_run_disabled_tests77,3083
GTEST_DECLARE_bool_(break_on_failure);break_on_failure80,3188
GTEST_DECLARE_bool_(catch_exceptions);catch_exceptions84,3335
GTEST_DECLARE_string_(color);color89,3554
GTEST_DECLARE_bool_(fail_fast);fail_fast93,3680
GTEST_DECLARE_string_(filter);filter97,3856
GTEST_DECLARE_bool_(install_failure_signal_handler);install_failure_signal_handler101,4023
GTEST_DECLARE_bool_(list_tests);list_tests105,4198
GTEST_DECLARE_string_(output);output109,4357
GTEST_DECLARE_bool_(brief);brief112,4458
GTEST_DECLARE_bool_(print_time);print_time116,4571
GTEST_DECLARE_bool_(print_utf8);print_utf8119,4679
GTEST_DECLARE_int32_(random_seed);random_seed122,4760
GTEST_DECLARE_int32_(repeat);repeat126,4932
GTEST_DECLARE_bool_(recreate_environments_when_repeating);recreate_environments_when_repeating132,5236
GTEST_DECLARE_bool_(show_internal_stack_frames);show_internal_stack_frames136,5409
GTEST_DECLARE_bool_(shuffle);shuffle139,5538
GTEST_DECLARE_int32_(stack_trace_depth);stack_trace_depth143,5666
GTEST_DECLARE_bool_(throw_on_failure);throw_on_failure148,5909
GTEST_DECLARE_string_(stream_result_to);stream_result_to153,6109
GTEST_DECLARE_string_(flagfile);flagfile156,6184
namespace testing {testing159,6258
const int kMaxStackTraceDepth = 100;kMaxStackTraceDepth170,6552
namespace internal {internal172,6590
class GTEST_API_ AssertionResult {AssertionResult286,10251
  explicit AssertionResult(AssertionResult308,11138
  AssertionResult& operator=(AssertionResult other) {operator =321,11485
  operator bool() const { return success_; }  // NOLINToperator bool327,11637
  const char* message() const {message336,12061
  const char* failure_message() const { return message(); }failure_message340,12207
  template <typename T> AssertionResult& operator<<(const T& value) {operator <<343,12324
      ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) {basic_manipulator351,12580
  void AppendMessage(const Message& a_message) {AppendMessage358,12784
  bool success_;success_367,13105
  std::unique_ptr< ::std::string> message_;message_372,13357
namespace testing {testing392,13991
class GTEST_API_ Test {Test417,14714
  static void SetUpTestSuite() {}SetUpTestSuite430,15143
  static void TearDownTestSuite() {}TearDownTestSuite438,15474
  static void TearDownTestCase() {}TearDownTestCase443,15660
  static void SetUpTestCase() {}SetUpTestCase444,15696
  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }HasFailure458,16181
  void DeleteSelf_() { delete this; }DeleteSelf_504,18179
  const std::unique_ptr<GTEST_FLAG_SAVER_> gtest_flag_saver_;gtest_flag_saver_506,18218
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp524,18994
  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }Setup525,19037
typedef internal::TimeInMillis TimeInMillis;TimeInMillis531,19184
class TestProperty {TestProperty537,19418
  TestProperty(const std::string& a_key, const std::string& a_value) :TestProperty542,19600
  const char* key() const {key547,19744
  const char* value() const {value552,19837
  void SetValue(const std::string& new_value) {SetValue557,19970
  std::string key_;key_563,20092
  std::string value_;value_565,20149
class GTEST_API_ TestResult {TestResult574,20416
  bool Passed() const { return !Skipped() && !Failed(); }Passed590,20901
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time605,21356
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp609,21507
  const std::vector<TestPartResult>& test_part_results() const {test_part_results632,22389
  const std::vector<TestProperty>& test_properties() const {test_properties637,22530
  void set_start_timestamp(TimeInMillis start) { start_timestamp_ = start; }set_start_timestamp642,22651
  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }set_elapsed_time645,22757
  int death_test_count() const { return death_test_count_; }death_test_count666,23846
  int increment_death_test_count() { return ++death_test_count_; }increment_death_test_count669,23971
  internal::Mutex test_properties_mutex_;test_properties_mutex_679,24257
  std::vector<TestPartResult> test_part_results_;test_part_results_682,24335
  std::vector<TestProperty> test_properties_;test_properties_684,24419
  int death_test_count_;death_test_count_686,24500
  TimeInMillis start_timestamp_;start_timestamp_688,24580
  TimeInMillis elapsed_time_;elapsed_time_690,24653
class GTEST_API_ TestInfo {TestInfo707,25166
  const char* test_suite_name() const { return test_suite_name_.c_str(); }test_suite_name714,25355
  const char* test_case_name() const { return test_suite_name(); }test_case_name718,25521
  const char* name() const { return name_.c_str(); }name722,25662
  const char* type_param() const {type_param726,25827
  const char* value_param() const {value_param733,26071
  const char* file() const { return location_.file.c_str(); }file739,26256
  int line() const { return location_.line; }line742,26369
  bool is_in_another_shard() const { return is_in_another_shard_; }is_in_another_shard745,26495
  bool should_run() const { return should_run_; }should_run763,27418
  bool is_reportable() const {is_reportable766,27543
  const TestResult* result() const { return &result_; }result773,27771
  int increment_death_test_count() {increment_death_test_count801,29027
  static void ClearTestResult(TestInfo* test_info) {ClearTestResult812,29289
  const std::string test_suite_name_;    // test suite nametest_suite_name_817,29435
  const std::string name_;               // Test namename_818,29495
  const std::unique_ptr<const ::std::string> type_param_;type_param_821,29648
  const std::unique_ptr<const ::std::string> value_param_;value_param_824,29811
  internal::CodeLocation location_;location_825,29870
  const internal::TypeId fixture_class_id_;  // ID of the test fixture classfixture_class_id_826,29906
  bool should_run_;           // True if and only if this test should runshould_run_827,29983
  bool is_disabled_;          // True if and only if this test is disabledis_disabled_828,30057
  bool matches_filter_;       // True if this test matches thematches_filter_829,30132
  bool is_in_another_shard_;  // Will be run in another shard.is_in_another_shard_831,30251
  internal::TestFactoryBase* const factory_;  // The factory that createsfactory_832,30314
  TestResult result_;result_837,30553
class GTEST_API_ TestSuite {TestSuite845,30716
  const char* name() const { return name_.c_str(); }name867,31531
  const char* type_param() const {type_param871,31691
  bool should_run() const { return should_run_; }should_run877,31879
  bool Passed() const { return !Failed(); }Passed904,32778
  bool Failed() const {Failed907,32879
  TimeInMillis elapsed_time() const { return elapsed_time_; }elapsed_time912,33025
  TimeInMillis start_timestamp() const { return start_timestamp_; }start_timestamp916,33177
  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }ad_hoc_test_result924,33558
  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }test_info_list931,33772
  const std::vector<TestInfo*>& test_info_list() const {test_info_list934,33909
  void set_should_run(bool should) { should_run_ = should; }set_should_run943,34212
  static void ClearTestSuiteResult(TestSuite* test_suite) {ClearTestSuiteResult953,34573
  void RunSetUpTestSuite() {RunSetUpTestSuite965,34925
  void RunTearDownTestSuite() {RunTearDownTestSuite973,35157
  static bool TestPassed(const TestInfo* test_info) {TestPassed980,35308
  static bool TestSkipped(const TestInfo* test_info) {TestSkipped985,35483
  static bool TestFailed(const TestInfo* test_info) {TestFailed990,35659
  static bool TestReportableDisabled(const TestInfo* test_info) {TestReportableDisabled996,35886
  static bool TestDisabled(const TestInfo* test_info) {TestDisabled1001,36074
  static bool TestReportable(const TestInfo* test_info) {TestReportable1006,36245
  static bool ShouldRunTest(const TestInfo* test_info) {ShouldRunTest1011,36395
  std::string name_;name_1022,36698
  const std::unique_ptr<const ::std::string> type_param_;type_param_1025,36818
  std::vector<TestInfo*> test_info_list_;test_info_list_1028,36972
  std::vector<int> test_indices_;test_indices_1032,37223
  internal::SetUpTestSuiteFunc set_up_tc_;set_up_tc_1034,37315
  internal::TearDownTestSuiteFunc tear_down_tc_;tear_down_tc_1036,37419
  bool should_run_;should_run_1038,37533
  TimeInMillis start_timestamp_;start_timestamp_1040,37608
  TimeInMillis elapsed_time_;elapsed_time_1042,37677
  TestResult ad_hoc_test_result_;ad_hoc_test_result_1045,37806
class Environment {Environment1065,38561
  virtual ~Environment() {}~Environment1068,38652
  virtual void SetUp() {}SetUp1071,38741
  virtual void TearDown() {}TearDown1074,38831
  struct Setup_should_be_spelled_SetUp {};Setup_should_be_spelled_SetUp1078,39008
  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }Setup1079,39051
class GTEST_API_ AssertionExceptionAssertionException1085,39225
  explicit AssertionException(const TestPartResult& result)AssertionException1088,39322
class TestEventListener {TestEventListener1096,39592
  virtual ~TestEventListener() {}~TestEventListener1098,39627
  virtual void OnTestSuiteStart(const TestSuite& /*test_suite*/) {}OnTestSuiteStart1116,40400
  virtual void OnTestCaseStart(const TestCase& /*test_case*/) {}OnTestCaseStart1120,40562
  virtual void OnTestSuiteEnd(const TestSuite& /*test_suite*/) {}OnTestSuiteEnd1135,41194
  virtual void OnTestCaseEnd(const TestCase& /*test_case*/) {}OnTestCaseEnd1139,41352
class EmptyTestEventListener : public TestEventListener {EmptyTestEventListener1161,42349
class GTEST_API_ TestEventListeners {TestEventListeners1190,43864
  TestEventListener* default_result_printer() const {default_result_printer1210,44783
  TestEventListener* default_xml_generator() const {default_xml_generator1221,45335
  internal::TestEventRepeater* repeater_;repeater_1257,46867
  TestEventListener* default_result_printer_;default_result_printer_1259,46967
  TestEventListener* default_xml_generator_;default_xml_generator_1261,47080
class GTEST_API_ UnitTest {UnitTest1277,47575
  int Run() GTEST_MUST_USE_RESULT_;GTEST_MUST_USE_RESULT_1290,48073
  internal::UnitTestImpl* impl() { return impl_; }impl1432,53549
  const internal::UnitTestImpl* impl() const { return impl_; }impl1433,53600
  mutable internal::Mutex mutex_;mutex_1466,54799
  internal::UnitTestImpl* impl_;impl_1472,55091
inline Environment* AddGlobalTestEnvironment(Environment* env) {AddGlobalTestEnvironment1496,56117
namespace internal {internal1519,57004
AssertionResult CmpHelperEQFailure(const char* lhs_expression,CmpHelperEQFailure1525,57261
struct faketype {};faketype1538,57831
inline bool operator==(faketype, faketype) { return true; }operator ==1539,57851
inline bool operator!=(faketype, faketype) { return false; }operator !=1540,57911
AssertionResult CmpHelperEQ(const char* lhs_expression,CmpHelperEQ1544,58056
class EqHelper {EqHelper1555,58386
  static AssertionResult Compare(const char* lhs_expression,Compare1564,58777
  static AssertionResult Compare(const char* lhs_expression,Compare1576,59360
  static AssertionResult Compare(Compare1584,59677
AssertionResult CmpHelperOpFailure(const char* expr1, const char* expr2,CmpHelperOpFailure1598,60289
#define GTEST_IMPL_CMP_HELPER_(GTEST_IMPL_CMP_HELPER_1613,60944
#undef GTEST_IMPL_CMP_HELPER_GTEST_IMPL_CMP_HELPER_1637,61808
namespace internal {internal1726,65853
AssertionResult CmpHelperFloatingPointEQ(const char* lhs_expression,CmpHelperFloatingPointEQ1736,66120
class GTEST_API_ AssertHelper {AssertHelper1773,67599
  struct AssertHelperData {AssertHelperData1791,68274
    AssertHelperData(TestPartResult::Type t,AssertHelperData1792,68302
    TestPartResult::Type const type;type1798,68530
    const char* const file;file1799,68567
    int const line;line1800,68595
    std::string const message;message1801,68615
  AssertHelperData* const data_;data_1807,68720
class WithParamInterface {WithParamInterface1849,70027
  typedef T ParamType;ParamType1851,70063
  virtual ~WithParamInterface() {}~WithParamInterface1852,70086
  static const ParamType& GetParam() {GetParam1856,70214
  static void SetParam(const ParamType* parameter) {SetParam1866,70618
  static const ParamType* parameter_;parameter_1871,70775
const T* WithParamInterface<T>::parameter_ = nullptr;parameter_1878,70987
class TestWithParam : public Test, public WithParamInterface<T> {TestWithParam1884,71204
#define GTEST_SKIP(GTEST_SKIP1892,71450
#define ADD_FAILURE(ADD_FAILURE1912,72313
#define ADD_FAILURE_AT(ADD_FAILURE_AT1916,72463
#define GTEST_FAIL(GTEST_FAIL1921,72663
#define GTEST_FAIL_AT(GTEST_FAIL_AT1924,72777
# define FAIL(FAIL1931,73082
#define GTEST_SUCCEED(GTEST_SUCCEED1935,73166
# define SUCCEED(SUCCEED1940,73379
#define EXPECT_THROW(EXPECT_THROW1952,73802
#define EXPECT_NO_THROW(EXPECT_NO_THROW1954,73932
#define EXPECT_ANY_THROW(EXPECT_ANY_THROW1956,74028
#define ASSERT_THROW(ASSERT_THROW1958,74126
#define ASSERT_NO_THROW(ASSERT_NO_THROW1960,74253
#define ASSERT_ANY_THROW(ASSERT_ANY_THROW1962,74346
#define GTEST_EXPECT_TRUE(GTEST_EXPECT_TRUE1968,74636
#define GTEST_EXPECT_FALSE(GTEST_EXPECT_FALSE1971,74782
#define GTEST_ASSERT_TRUE(GTEST_ASSERT_TRUE1974,74932
#define GTEST_ASSERT_FALSE(GTEST_ASSERT_FALSE1977,75075
#define EXPECT_TRUE(EXPECT_TRUE1985,75393
#define EXPECT_FALSE(EXPECT_FALSE1989,75497
#define ASSERT_TRUE(ASSERT_TRUE1993,75602
#define ASSERT_FALSE(ASSERT_FALSE1997,75706
#define EXPECT_EQ(EXPECT_EQ2046,77669
#define EXPECT_NE(EXPECT_NE2048,77775
#define EXPECT_LE(EXPECT_LE2050,77875
#define EXPECT_LT(EXPECT_LT2052,77975
#define EXPECT_GE(EXPECT_GE2054,78075
#define EXPECT_GT(EXPECT_GT2056,78175
#define GTEST_ASSERT_EQ(GTEST_ASSERT_EQ2059,78276
#define GTEST_ASSERT_NE(GTEST_ASSERT_NE2061,78388
#define GTEST_ASSERT_LE(GTEST_ASSERT_LE2063,78494
#define GTEST_ASSERT_LT(GTEST_ASSERT_LT2065,78600
#define GTEST_ASSERT_GE(GTEST_ASSERT_GE2067,78706
#define GTEST_ASSERT_GT(GTEST_ASSERT_GT2069,78812
# define ASSERT_EQ(ASSERT_EQ2076,79085
# define ASSERT_NE(ASSERT_NE2080,79185
# define ASSERT_LE(ASSERT_LE2084,79285
# define ASSERT_LT(ASSERT_LT2088,79385
# define ASSERT_GE(ASSERT_GE2092,79485
# define ASSERT_GT(ASSERT_GT2096,79585
#define EXPECT_STREQ(EXPECT_STREQ2115,80288
#define EXPECT_STRNE(EXPECT_STRNE2117,80386
#define EXPECT_STRCASEEQ(EXPECT_STRCASEEQ2119,80484
#define EXPECT_STRCASENE(EXPECT_STRCASENE2121,80590
#define ASSERT_STREQ(ASSERT_STREQ2124,80696
#define ASSERT_STRNE(ASSERT_STRNE2126,80794
#define ASSERT_STRCASEEQ(ASSERT_STRCASEEQ2128,80892
#define ASSERT_STRCASENE(ASSERT_STRCASENE2130,80998
#define EXPECT_FLOAT_EQ(EXPECT_FLOAT_EQ2147,81736
#define EXPECT_DOUBLE_EQ(EXPECT_DOUBLE_EQ2151,81886
#define ASSERT_FLOAT_EQ(ASSERT_FLOAT_EQ2155,82038
#define ASSERT_DOUBLE_EQ(ASSERT_DOUBLE_EQ2159,82188
#define EXPECT_NEAR(EXPECT_NEAR2163,82340
#define ASSERT_NEAR(ASSERT_NEAR2167,82497
# define EXPECT_HRESULT_SUCCEEDED(EXPECT_HRESULT_SUCCEEDED2195,83703
# define ASSERT_HRESULT_SUCCEEDED(ASSERT_HRESULT_SUCCEEDED2198,83817
# define EXPECT_HRESULT_FAILED(EXPECT_HRESULT_FAILED2201,83931
# define ASSERT_HRESULT_FAILED(ASSERT_HRESULT_FAILED2204,84042
#define ASSERT_NO_FATAL_FAILURE(ASSERT_NO_FATAL_FAILURE2219,84476
#define EXPECT_NO_FATAL_FAILURE(EXPECT_NO_FATAL_FAILURE2221,84587
class GTEST_API_ ScopedTrace {ScopedTrace2234,85137
  ScopedTrace(const char* file, int line, const T& message) {ScopedTrace2242,85417
  ScopedTrace(const char* file, int line, const char* message) {ScopedTrace2247,85583
  ScopedTrace(const char* file, int line, const std::string& message) {ScopedTrace2251,85710
} GTEST_ATTRIBUTE_UNUSED_;  // A ScopedTrace object does its job in itsGTEST_ATTRIBUTE_UNUSED_2265,86126
#define SCOPED_TRACE(SCOPED_TRACE2284,87039
#define GTEST_TEST(GTEST_TEST2349,89362
#define TEST(TEST2356,89691
#define GTEST_TEST_F(GTEST_TEST_F2384,90521
#define TEST_F(TEST_F2388,90715
TestInfo* RegisterTest(const char* test_suite_name, const char* test_name,RegisterTest2457,93041
inline int RUN_ALL_TESTS() {RUN_ALL_TESTS2491,94324

test/googletest/googletest/include/gtest/gtest-printers.h,1174
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_99,4603
namespace testing {testing114,4923
namespace internal {internal118,5058
struct ContainerPrinter {ContainerPrinter125,5252
  static void PrintValue(const T& container, std::ostream* os) {PrintValue130,5480
struct FunctionPointerPrinter {FunctionPointerPrinter162,6477
  static void PrintValue(T* p, ::std::ostream* os) {PrintValue165,6632
struct PointerPrinter {PointerPrinter177,6957
  static void PrintValue(T* p, ::std::ostream* os) {PrintValue179,7005
namespace internal_stream_operator_without_lexical_name_lookup {internal_stream_operator_without_lexical_name_lookup191,7303
struct LookupBlocker {};LookupBlocker197,7611
struct StreamPrinter {StreamPrinter200,7684
#define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_348,13447
#undef GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_370,14521
#define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_(GTEST_IMPL_FORMAT_C_STRING_AS_STRING_375,14719
#undef GTEST_IMPL_FORMAT_C_STRING_AS_STRING_GTEST_IMPL_FORMAT_C_STRING_AS_STRING_400,15982

test/googletest/googletest/include/gtest/gtest_prod.h,135
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_34,1691
#define FRIEND_TEST(FRIEND_TEST57,2351

test/googletest/googletest/include/gtest/gtest-death-test.h,1293
#define GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_38,1822
GTEST_DECLARE_string_(death_test_style);death_test_style47,2244
namespace testing {testing49,2286
namespace internal {internal53,2333
# define ASSERT_EXIT(ASSERT_EXIT170,7384
# define EXPECT_EXIT(EXPECT_EXIT175,7604
# define ASSERT_DEATH(ASSERT_DEATH181,7940
# define EXPECT_DEATH(EXPECT_DEATH186,8155
class GTEST_API_ ExitedWithCode {ExitedWithCode192,8423
  void operator=(const ExitedWithCode& other) = delete;other196,8559
  const int exit_code_;exit_code_199,8667
class GTEST_API_ KilledBySignal {KilledBySignal205,8825
  const int signum_;signum_210,8959
#  define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH259,10466
#  define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH262,10561
#  define EXPECT_DEBUG_DEATH(EXPECT_DEBUG_DEATH267,10664
#  define ASSERT_DEBUG_DEATH(ASSERT_DEBUG_DEATH270,10747
# define GTEST_UNSUPPORTED_DEATH_TEST(GTEST_UNSUPPORTED_DEATH_TEST311,13157
# define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED330,14043
# define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED332,14133
# define EXPECT_DEATH_IF_SUPPORTED(EXPECT_DEATH_IF_SUPPORTED335,14229
# define ASSERT_DEATH_IF_SUPPORTED(ASSERT_DEATH_IF_SUPPORTED337,14337

test/googletest/googletest/include/gtest/gtest_pred_impl.h,2147
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_36,1793
namespace testing {testing40,1872
#define GTEST_ASSERT_(GTEST_ASSERT_74,2976
AssertionResult AssertPred1Helper(const char* pred_text,AssertPred1Helper86,3326
#define GTEST_PRED_FORMAT1_(GTEST_PRED_FORMAT1_100,3853
#define GTEST_PRED1_(GTEST_PRED1_106,4071
#define EXPECT_PRED_FORMAT1(EXPECT_PRED_FORMAT1113,4374
#define EXPECT_PRED1(EXPECT_PRED1115,4485
#define ASSERT_PRED_FORMAT1(ASSERT_PRED_FORMAT1117,4568
#define ASSERT_PRED1(ASSERT_PRED1119,4676
AssertionResult AssertPred2Helper(const char* pred_text,AssertPred2Helper129,4922
#define GTEST_PRED_FORMAT2_(GTEST_PRED_FORMAT2_147,5649
#define GTEST_PRED2_(GTEST_PRED2_153,5880
#define EXPECT_PRED_FORMAT2(EXPECT_PRED_FORMAT2162,6291
#define EXPECT_PRED2(EXPECT_PRED2164,6410
#define ASSERT_PRED_FORMAT2(ASSERT_PRED_FORMAT2166,6501
#define ASSERT_PRED2(ASSERT_PRED2168,6617
AssertionResult AssertPred3Helper(const char* pred_text,AssertPred3Helper179,6894
#define GTEST_PRED_FORMAT3_(GTEST_PRED_FORMAT3_200,7812
#define GTEST_PRED3_(GTEST_PRED3_206,8056
#define EXPECT_PRED_FORMAT3(EXPECT_PRED_FORMAT3217,8575
#define EXPECT_PRED3(EXPECT_PRED3219,8702
#define ASSERT_PRED_FORMAT3(ASSERT_PRED_FORMAT3221,8801
#define ASSERT_PRED3(ASSERT_PRED3223,8925
AssertionResult AssertPred4Helper(const char* pred_text,AssertPred4Helper235,9233
#define GTEST_PRED_FORMAT4_(GTEST_PRED_FORMAT4_259,10342
#define GTEST_PRED4_(GTEST_PRED4_265,10599
#define EXPECT_PRED_FORMAT4(EXPECT_PRED_FORMAT4278,11223
#define EXPECT_PRED4(EXPECT_PRED4280,11358
#define ASSERT_PRED_FORMAT4(ASSERT_PRED_FORMAT4282,11465
#define ASSERT_PRED4(ASSERT_PRED4284,11597
AssertionResult AssertPred5Helper(const char* pred_text,AssertPred5Helper297,11936
#define GTEST_PRED_FORMAT5_(GTEST_PRED_FORMAT5_324,13236
#define GTEST_PRED5_(GTEST_PRED5_330,13506
#define EXPECT_PRED_FORMAT5(EXPECT_PRED_FORMAT5345,14237
#define EXPECT_PRED5(EXPECT_PRED5347,14380
#define ASSERT_PRED_FORMAT5(ASSERT_PRED_FORMAT5349,14495
#define ASSERT_PRED5(ASSERT_PRED5351,14635

test/googletest/googletest/include/gtest/gtest-param-test.h,1110
#define GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_33,1734
namespace testing {testing179,7762
internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {Range224,9587
internal::ParamGenerator<T> Range(T start, T end) {Range230,9789
ValuesIn(ForwardIterator begin, ForwardIterator end) {ValuesIn292,11859
internal::ParamGenerator<typename Container::value_type> ValuesIn(ValuesIn304,12278
internal::ValueArray<T...> Values(T... v) {Values330,13171
inline internal::ParamGenerator<bool> Bool() {Bool354,13988
internal::CartesianProductHolder<Generator...> Combine(const Generator&... g) {Combine403,15838
#define TEST_P(TEST_P407,15984
#define GTEST_EXPAND_(GTEST_EXPAND_450,19011
#define GTEST_GET_FIRST_(GTEST_GET_FIRST_451,19042
#define GTEST_GET_SECOND_(GTEST_GET_SECOND_452,19085
#define INSTANTIATE_TEST_SUITE_P(INSTANTIATE_TEST_SUITE_P454,19139
#define GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST(GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST490,21818
#define INSTANTIATE_TEST_CASE_P INSTANTIATE_TEST_CASE_P497,22165

test/googletest/googletest/include/gtest/gtest-message.h,997
#define GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_46,2136
namespace testing {testing61,2578
class GTEST_API_ Message {Message89,3448
  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);BasicNarrowIoManip93,3573
  Message(const Message& msg) : ss_(new ::std::stringstream) {  // NOLINTMessage100,3716
  explicit Message(const char* str) : ss_(new ::std::stringstream) {Message105,3867
  inline Message& operator <<(const T& val) {operator <<111,4031
  inline Message& operator <<(T* const& pointer) {  // NOLINToperator <<145,5619
  Message& operator <<(BasicNarrowIoManip val) {operator <<160,6151
  Message& operator <<(bool b) {operator <<166,6304
  const std::unique_ptr< ::std::stringstream> ss_;ss_189,7126
inline std::ostream& operator <<(std::ostream& os, const Message& sb) {operator <<197,7367
namespace internal {internal201,7473
std::string StreamableToString(const T& streamable) {StreamableToString208,7756

test/googletest/googletest/include/gtest/gtest-test-part.h,2460
#define GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_31,1609
namespace testing {testing41,1900
class GTEST_API_ TestPartResult {TestPartResult47,2130
  enum Type {Type51,2292
    kSuccess,          // Succeeded.kSuccess52,2306
    kNonFatalFailure,  // Failed but the test can continue.kNonFatalFailure53,2343
    kFatalFailure,     // Failed and the test should be terminated.kFatalFailure54,2403
    kSkip              // Skipped.kSkip55,2471
  TestPartResult(Type a_type, const char* a_file_name, int a_line_number,TestPartResult61,2668
  Type type() const { return type_; }type70,3022
  const char* file_name() const {file_name74,3161
  int line_number() const { return line_number_; }line_number80,3360
  const char* summary() const { return summary_.c_str(); }summary83,3458
  const char* message() const { return message_.c_str(); }message86,3571
  bool skipped() const { return type_ == kSkip; }skipped89,3691
  bool passed() const { return type_ == kSuccess; }passed92,3797
  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }nonfatally_failed95,3917
  bool fatally_failed() const { return type_ == kFatalFailure; }fatally_failed98,4052
  bool failed() const { return fatally_failed() || nonfatally_failed(); }failed101,4173
  Type type_;type_104,4258
  std::string file_name_;file_name_112,4524
  int line_number_;line_number_115,4657
  std::string summary_;  // The test failure summary.summary_116,4677
  std::string message_;  // The test failure message.message_117,4731
class GTEST_API_ TestPartResultArray {TestPartResultArray127,5020
  TestPartResultArray() {}TestPartResultArray129,5068
  std::vector<TestPartResult> array_;array_141,5412
class GTEST_API_ TestPartResultReporterInterface {TestPartResultReporterInterface147,5569
  virtual ~TestPartResultReporterInterface() {}~TestPartResultReporterInterface149,5629
namespace internal {internal154,5753
class GTEST_API_ HasNewFatalFailureHelperHasNewFatalFailureHelper162,6209
  ~HasNewFatalFailureHelper() override;override166,6337
  void ReportTestPartResult(const TestPartResult& result) override;override167,6377
  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }has_new_fatal_failure168,6445
  bool has_new_fatal_failure_;has_new_fatal_failure_170,6527
  TestPartResultReporterInterface* original_reporter_;original_reporter_171,6558

test/googletest/googletest/include/gtest/gtest-matchers.h,11802
#define GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_36,1802
#define GTEST_MAYBE_5046_ GTEST_MAYBE_5046_50,2166
#define GTEST_MAYBE_5046_GTEST_MAYBE_5046_52,2203
namespace testing {testing60,2471
class MatchResultListener {MatchResultListener73,2965
  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}MatchResultListener78,3180
  MatchResultListener& operator<<(const T& x) {operator <<84,3426
  ::std::ostream* stream() { return stream_; }stream90,3577
  bool IsInterested() const { return stream_ != nullptr; }IsInterested96,3870
  ::std::ostream* const stream_;stream_99,3940
inline MatchResultListener::~MatchResultListener() {~MatchResultListener104,4034
class GTEST_API_ MatcherDescriberInterface {MatcherDescriberInterface109,4173
  virtual ~MatcherDescriberInterface() {}~MatcherDescriberInterface111,4227
  virtual void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo126,5018
class MatcherInterface : public MatcherDescriberInterface {MatcherInterface135,5202
namespace internal {internal175,7304
struct AnyEq {AnyEq177,7326
  bool operator()(const A& a, const B& b) const { return a == b; }operator ()179,7377
struct AnyNe {AnyNe181,7447
  bool operator()(const A& a, const B& b) const { return a != b; }operator ()183,7498
struct AnyLt {AnyLt185,7568
  bool operator()(const A& a, const B& b) const { return a < b; }operator ()187,7619
struct AnyGt {AnyGt189,7688
  bool operator()(const A& a, const B& b) const { return a > b; }operator ()191,7739
struct AnyLe {AnyLe193,7808
  bool operator()(const A& a, const B& b) const { return a <= b; }operator ()195,7859
struct AnyGe {AnyGe197,7929
  bool operator()(const A& a, const B& b) const { return a >= b; }operator ()199,7980
class DummyMatchResultListener : public MatchResultListener {DummyMatchResultListener203,8108
  DummyMatchResultListener() : MatchResultListener(nullptr) {}DummyMatchResultListener205,8179
class StreamMatchResultListener : public MatchResultListener {StreamMatchResultListener214,8486
  explicit StreamMatchResultListener(::std::ostream* os)StreamMatchResultListener216,8558
struct SharedPayloadBase {SharedPayloadBase223,8727
  void Ref() { ref.fetch_add(1, std::memory_order_relaxed); }Ref225,8781
  bool Unref() { return ref.fetch_sub(1, std::memory_order_acq_rel) == 1; }Unref226,8843
struct SharedPayload : SharedPayloadBase {SharedPayload230,8945
  explicit SharedPayload(const T& v) : value(v) {}SharedPayload231,8988
  explicit SharedPayload(T&& v) : value(std::move(v)) {}SharedPayload232,9039
  static void Destroy(SharedPayloadBase* shared) {Destroy234,9097
  T value;value238,9201
class MatcherBase : private MatcherDescriberInterface {MatcherBase245,9418
  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {MatchAndExplain249,9590
  bool Matches(const T& x) const {Matches255,9823
  void ExplainMatchResultTo(const T& x, ::std::ostream* os) const {ExplainMatchResultTo273,10379
  const MatcherDescriberInterface* GetDescriber() const {GetDescriber281,10701
  MatcherBase() : vtable_(nullptr) {}MatcherBase287,10862
  explicit MatcherBase(const MatcherInterface<U>* impl) {MatcherBase291,10976
  MatcherBase(M&& m) {  // NOLINTMatcherBase297,11178
  MatcherBase(const MatcherBase& other)MatcherBase301,11247
  MatcherBase& operator=(const MatcherBase& other) {operator =306,11392
  MatcherBase(MatcherBase&& other)MatcherBase315,11622
  MatcherBase& operator=(MatcherBase&& other) {operator =320,11748
  struct VTable {VTable332,12011
    bool (*match_and_explain)(const MatcherBase&, const T&,match_and_explain333,12029
    void (*describe)(const MatcherBase&, std::ostream*, bool negation);describe335,12142
    const MatcherDescriberInterface* (*get_describer)(const MatcherBase&);get_describer338,12330
    void (*shared_destroy)(SharedPayloadBase*);shared_destroy340,12475
  bool IsShared() const {IsShared343,12529
      -> decltype(P::Get(m).MatchAndExplain(value, listener->stream())) {MatchAndExplain351,12845
      -> decltype(P::Get(m).MatchAndExplain(value, listener)) {MatchAndExplain358,13150
  static void DescribeImpl(const MatcherBase& m, std::ostream* os,DescribeImpl363,13298
  static const MatcherDescriberInterface* GetDescriberImpl(GetDescriberImpl373,13549
  const VTable* GetVTable() {GetVTable389,14254
  union Buffer {Buffer396,14512
    void* ptr;ptr398,14604
    double d;d399,14619
    int64_t i;i400,14633
    SharedPayloadBase* shared;shared402,14694
  void Destroy() {Destroy405,14731
  static constexpr bool IsInlined() {IsInlined412,14881
  struct ValuePolicy {ValuePolicy419,15173
    static const M& Get(const MatcherBase& m) {Get420,15196
    static void Init(MatcherBase& m, M impl) {Init427,15472
    static constexpr auto shared_destroy = nullptr;shared_destroy430,15579
  struct ValuePolicy<M, false> {ValuePolicy434,15661
    static const M& Get(const MatcherBase& m) {Get436,15731
    static void Init(MatcherBase& m, Arg&& arg) {Init440,15873
    static constexpr auto shared_destroy = &Shared::Destroy;shared_destroy443,15990
  struct ValuePolicy<const MatcherInterface<U>*, B> {ValuePolicy447,16089
    static const M& Get(const MatcherBase& m) {Get450,16238
    static void Init(MatcherBase& m, M* impl) {Init453,16353
    static constexpr auto shared_destroy = &Shared::Destroy;shared_destroy457,16471
  void Init(M&& m) {Init461,16562
  const VTable* vtable_;vtable_468,16749
  Buffer buffer_;buffer_469,16774
class Matcher : public internal::MatcherBase<T> {Matcher479,17096
  explicit Matcher() {}  // NOLINTMatcher484,17371
  explicit Matcher(const MatcherInterface<const T&>* impl)Matcher487,17458
  explicit Matcher(Matcher491,17584
  Matcher(M&& m) : internal::MatcherBase<T>(std::forward<M>(m)) {}  // NOLINTMatcher499,17902
class GTEST_API_ Matcher<const std::string&>Matcher510,18323
  Matcher() {}Matcher513,18434
  explicit Matcher(const MatcherInterface<const std::string&>* impl)Matcher515,18450
  Matcher(M&& m)  // NOLINTMatcher520,18702
class GTEST_API_ Matcher<std::string>Matcher532,19074
  Matcher() {}Matcher535,19171
  explicit Matcher(const MatcherInterface<const std::string&>* impl)Matcher537,19187
  explicit Matcher(const MatcherInterface<std::string>* impl)Matcher539,19308
  Matcher(M&& m)  // NOLINTMatcher544,19546
class GTEST_API_ Matcher<const internal::StringView&>Matcher560,20108
  Matcher() {}Matcher563,20237
  explicit Matcher(const MatcherInterface<const internal::StringView&>* impl)Matcher565,20253
  Matcher(M&& m)  // NOLINTMatcher570,20523
class GTEST_API_ Matcher<internal::StringView>Matcher586,21033
  Matcher() {}Matcher589,21148
  explicit Matcher(const MatcherInterface<const internal::StringView&>* impl)Matcher591,21164
  explicit Matcher(const MatcherInterface<internal::StringView>* impl)Matcher593,21303
  Matcher(M&& m)  // NOLINTMatcher598,21559
std::ostream& operator<<(std::ostream& os, const Matcher<T>& matcher) {operator <<615,22159
class PolymorphicMatcher {PolymorphicMatcher633,22861
  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}PolymorphicMatcher635,22897
  Impl& mutable_impl() { return impl_; }mutable_impl639,23056
  const Impl& impl() const { return impl_; }impl643,23188
  operator Matcher<T>() const {operator Matcher<T>646,23258
  class MonomorphicImpl : public MatcherInterface<T> {MonomorphicImpl652,23390
    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}MonomorphicImpl654,23456
    const Impl impl_;impl_667,23857
  Impl impl_;impl_670,23885
inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {MakeMatcher680,24231
inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {MakePolymorphicMatcher692,24639
namespace internal {internal696,24758
class ComparisonBase {ComparisonBase708,25350
  explicit ComparisonBase(const Rhs& rhs) : rhs_(rhs) {}ComparisonBase710,25382
  bool MatchAndExplain(const Lhs& lhs, std::ostream*) const {MatchAndExplain715,25500
  void DescribeTo(std::ostream* os) const {DescribeTo718,25602
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo722,25717
  static const T& Unwrap(const T& v) {Unwrap729,25882
  static const T& Unwrap(std::reference_wrapper<T> v) {Unwrap733,25963
  Rhs rhs_;rhs_737,26038
class EqMatcher : public ComparisonBase<EqMatcher<Rhs>, Rhs, AnyEq> {EqMatcher741,26078
  explicit EqMatcher(const Rhs& rhs)EqMatcher743,26157
  static const char* Desc() { return "is equal to"; }Desc745,26254
  static const char* NegatedDesc() { return "isn't equal to"; }NegatedDesc746,26308
class NeMatcher : public ComparisonBase<NeMatcher<Rhs>, Rhs, AnyNe> {NeMatcher749,26399
  explicit NeMatcher(const Rhs& rhs)NeMatcher751,26478
  static const char* Desc() { return "isn't equal to"; }Desc753,26575
  static const char* NegatedDesc() { return "is equal to"; }NegatedDesc754,26632
class LtMatcher : public ComparisonBase<LtMatcher<Rhs>, Rhs, AnyLt> {LtMatcher757,26720
  explicit LtMatcher(const Rhs& rhs)LtMatcher759,26799
  static const char* Desc() { return "is <"; }Desc761,26896
  static const char* NegatedDesc() { return "isn't <"; }NegatedDesc762,26943
class GtMatcher : public ComparisonBase<GtMatcher<Rhs>, Rhs, AnyGt> {GtMatcher765,27027
  explicit GtMatcher(const Rhs& rhs)GtMatcher767,27106
  static const char* Desc() { return "is >"; }Desc769,27203
  static const char* NegatedDesc() { return "isn't >"; }NegatedDesc770,27250
class LeMatcher : public ComparisonBase<LeMatcher<Rhs>, Rhs, AnyLe> {LeMatcher773,27334
  explicit LeMatcher(const Rhs& rhs)LeMatcher775,27413
  static const char* Desc() { return "is <="; }Desc777,27510
  static const char* NegatedDesc() { return "isn't <="; }NegatedDesc778,27558
class GeMatcher : public ComparisonBase<GeMatcher<Rhs>, Rhs, AnyGe> {GeMatcher781,27643
  explicit GeMatcher(const Rhs& rhs)GeMatcher783,27722
  static const char* Desc() { return "is >="; }Desc785,27819
  static const char* NegatedDesc() { return "isn't >="; }NegatedDesc786,27867
class MatchesRegexMatcher {MatchesRegexMatcher796,28253
  MatchesRegexMatcher(const RE* regex, bool full_match)MatchesRegexMatcher798,28290
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain802,28432
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain814,28792
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain823,29194
  void DescribeTo(::std::ostream* os) const {DescribeTo830,29456
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo835,29649
  const std::shared_ptr<const RE> regex_;regex_842,29879
  const bool full_match_;full_match_843,29921
inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex(MatchesRegex849,30086
PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex(MatchesRegex854,30305
inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex(ContainsRegex861,30582
PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex(ContainsRegex866,30803
inline internal::EqMatcher<T> Eq(T x) { return internal::EqMatcher<T>(x); }Eq875,31158
Matcher<T>::Matcher(T value) { *this = Eq(value); }Matcher880,31381
inline Matcher<Lhs> TypedEq(const Rhs& rhs) { return Eq(rhs); }TypedEq895,32085
inline internal::GeMatcher<Rhs> Ge(Rhs x) {Ge899,32235
inline internal::GtMatcher<Rhs> Gt(Rhs x) {Gt905,32404
inline internal::LeMatcher<Rhs> Le(Rhs x) {Le911,32574
inline internal::LtMatcher<Rhs> Lt(Rhs x) {Lt917,32743
inline internal::NeMatcher<Rhs> Ne(Rhs x) {Ne923,32913

test/googletest/googletest/include/gtest/internal/gtest-string.h,231
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_40,1982
namespace testing {testing53,2249
namespace internal {internal54,2269
class GTEST_API_ String {String57,2354

test/googletest/googletest/include/gtest/internal/gtest-filepath.h,828
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_39,1899
namespace testing {testing46,2119
namespace internal {internal47,2139
class GTEST_API_ FilePath {FilePath60,2867
  FilePath() : pathname_("") { }FilePath62,2904
  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) { }FilePath63,2937
  explicit FilePath(const std::string& pathname) : pathname_(pathname) {FilePath65,3001
  FilePath& operator=(const FilePath& rhs) {operator =69,3096
  void Set(const FilePath& rhs) {Set74,3178
  const std::string& string() const { return pathname_; }string78,3248
  const char* c_str() const { return pathname_.c_str(); }c_str79,3306
  bool IsEmpty() const { return pathname_.empty(); }IsEmpty112,4973
  std::string pathname_;pathname_201,9538

test/googletest/googletest/include/gtest/internal/gtest-port-arch.h,1983
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_36,1816
# define GTEST_OS_CYGWIN GTEST_OS_CYGWIN40,1957
#  define GTEST_OS_WINDOWS_MINGW GTEST_OS_WINDOWS_MINGW42,2058
#  define GTEST_OS_WINDOWS GTEST_OS_WINDOWS43,2093
# define GTEST_OS_WINDOWS GTEST_OS_WINDOWS45,2143
#  define GTEST_OS_WINDOWS_MOBILE GTEST_OS_WINDOWS_MOBILE47,2190
#   define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP51,2340
#   define GTEST_OS_WINDOWS_PHONE GTEST_OS_WINDOWS_PHONE53,2438
#   define GTEST_OS_WINDOWS_RT GTEST_OS_WINDOWS_RT55,2528
#   define GTEST_OS_WINDOWS_PHONE GTEST_OS_WINDOWS_PHONE57,2620
#   define GTEST_OS_WINDOWS_TV_TITLE GTEST_OS_WINDOWS_TV_TITLE58,2656
#   define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP62,2791
#  define GTEST_OS_WINDOWS_DESKTOP GTEST_OS_WINDOWS_DESKTOP65,2845
# define GTEST_OS_OS2 GTEST_OS_OS268,2927
# define GTEST_OS_MAC GTEST_OS_MAC70,2975
#  define GTEST_OS_IOS GTEST_OS_IOS73,3054
# define GTEST_OS_DRAGONFLY GTEST_OS_DRAGONFLY76,3115
# define GTEST_OS_FREEBSD GTEST_OS_FREEBSD78,3171
# define GTEST_OS_FUCHSIA GTEST_OS_FUCHSIA80,3225
# define GTEST_OS_GNU_HURD GTEST_OS_GNU_HURD82,3276
# define GTEST_OS_GNU_KFREEBSD GTEST_OS_GNU_KFREEBSD84,3361
# define GTEST_OS_LINUX GTEST_OS_LINUX86,3418
#  define GTEST_OS_LINUX_ANDROID GTEST_OS_LINUX_ANDROID88,3469
# define GTEST_OS_ZOS GTEST_OS_ZOS91,3534
# define GTEST_OS_SOLARIS GTEST_OS_SOLARIS93,3598
# define GTEST_OS_AIX GTEST_OS_AIX95,3646
# define GTEST_OS_HPUX GTEST_OS_HPUX97,3692
# define GTEST_OS_NACL GTEST_OS_NACL99,3749
# define GTEST_OS_NETBSD GTEST_OS_NETBSD101,3799
# define GTEST_OS_OPENBSD GTEST_OS_OPENBSD103,3852
# define GTEST_OS_QNX GTEST_OS_QNX105,3902
#define GTEST_OS_HAIKU GTEST_OS_HAIKU107,3951
#define GTEST_OS_ESP8266 GTEST_OS_ESP8266109,3998
#define GTEST_OS_ESP32 GTEST_OS_ESP32111,4045
#define GTEST_OS_XTENSA GTEST_OS_XTENSA113,4096

test/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h,3077
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_36,1827
GTEST_DECLARE_string_(internal_run_death_test);internal_run_death_test44,2015
namespace testing {testing46,2064
namespace internal {internal47,2084
const char kDeathTestStyleFlag[] = "death_test_style";kDeathTestStyleFlag50,2168
const char kDeathTestUseFork[] = "death_test_use_fork";kDeathTestUseFork51,2223
const char kInternalRunDeathTestFlag[] = "internal_run_death_test";kInternalRunDeathTestFlag52,2279
class GTEST_API_ DeathTest {DeathTest72,3109
  virtual ~DeathTest() { }~DeathTest85,3876
  class ReturnSentinel {ReturnSentinel88,3968
    explicit ReturnSentinel(DeathTest* test) : test_(test) { }ReturnSentinel90,4004
    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }~ReturnSentinel91,4067
    DeathTest* const test_;test_93,4154
  } GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_95,4235
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };TestRole102,4600
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };OVERSEE_TEST102,4600
  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };EXECUTE_TEST102,4600
  enum AbortReason {AbortReason105,4720
    TEST_ENCOUNTERED_RETURN_STATEMENT,TEST_ENCOUNTERED_RETURN_STATEMENT106,4741
    TEST_THREW_EXCEPTION,TEST_THREW_EXCEPTION107,4780
    TEST_DID_NOT_DIETEST_DID_NOT_DIE108,4806
  static std::string last_death_test_message_;last_death_test_message_137,5828
class DeathTestFactory {DeathTestFactory145,6041
  virtual ~DeathTestFactory() { }~DeathTestFactory147,6075
class DefaultDeathTestFactory : public DeathTestFactory {DefaultDeathTestFactory154,6352
              const char* file, int line, DeathTest** test) override;override157,6493
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher167,6920
inline Matcher<const ::std::string&> MakeDeathTestMatcher(const char* regex) {MakeDeathTestMatcher171,7059
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher174,7171
inline Matcher<const ::std::string&> MakeDeathTestMatcher(MakeDeathTestMatcher181,7393
#  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_189,7684
#  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(GTEST_EXECUTE_DEATH_TEST_STATEMENT_206,8375
#define GTEST_DEATH_TEST_(GTEST_DEATH_TEST_213,8615
#define GTEST_EXECUTE_STATEMENT_(GTEST_EXECUTE_STATEMENT_251,11497
class InternalRunDeathTestFlag {InternalRunDeathTestFlag263,12132
  InternalRunDeathTestFlag(const std::string& a_file,InternalRunDeathTestFlag265,12174
  ~InternalRunDeathTestFlag() {~InternalRunDeathTestFlag272,12441
  const std::string& file() const { return file_; }file277,12533
  int line() const { return line_; }line278,12585
  int index() const { return index_; }index279,12622
  int write_fd() const { return write_fd_; }write_fd280,12661
  std::string file_;file_283,12717
  int line_;line_284,12738
  int index_;index_285,12751
  int write_fd_;write_fd_286,12765

test/googletest/googletest/include/gtest/internal/gtest-type-util.h,1090
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_34,1699
namespace testing {testing46,2068
namespace internal {internal47,2088
inline std::string CanonicalizeForStdLibVersioning(std::string s) {CanonicalizeForStdLibVersioning53,2367
inline std::string GetTypeName(const std::type_info& type) {GetTypeName67,2863
std::string GetTypeName() {GetTypeName91,3797
struct None {};None100,3973
# define GTEST_TEMPLATE_ GTEST_TEMPLATE_102,3990
struct TemplateSel {TemplateSel113,4499
  struct Bind {Bind115,4544
    typedef Tmpl<T> type;type116,4560
# define GTEST_BIND_(GTEST_BIND_120,4595
struct Templates {Templates124,4724
struct Templates<Head_> {Templates130,4851
struct Types {Types137,5007
struct Types<Head_> {Types143,5106
struct ProxyTypeList {ProxyTypeList151,5297
struct is_proxy_type_list : std::false_type {};is_proxy_type_list156,5373
struct is_proxy_type_list<ProxyTypeList<Ts...>> : std::true_type {};is_proxy_type_list159,5448
struct GenerateTypeList {GenerateTypeList165,5721

test/googletest/googletest/include/gtest/internal/gtest-internal.h,13461
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_36,1814
#define GTEST_CONCAT_TOKEN_(GTEST_CONCAT_TOKEN_76,2827
#define GTEST_CONCAT_TOKEN_IMPL_(GTEST_CONCAT_TOKEN_IMPL_77,2900
#define GTEST_STRINGIFY_HELPER_(GTEST_STRINGIFY_HELPER_88,3281
#define GTEST_STRINGIFY_(GTEST_STRINGIFY_89,3330
namespace proto2 {proto291,3400
namespace testing {testing95,3441
namespace internal {internal109,3960
class IgnoredValue {IgnoredValue120,4415
  struct Sink {};Sink121,4436
  IgnoredValue(const T& /* ignored */) {}  // NOLINT(runtime/explicit)IgnoredValue133,5016
class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {GoogleTestFailureException151,5802
namespace edit_distance {edit_distance160,6039
enum EditType { kMatch, kAdd, kRemove, kReplace };EditType166,6326
enum EditType { kMatch, kAdd, kRemove, kReplace };kMatch166,6326
enum EditType { kMatch, kAdd, kRemove, kReplace };kAdd166,6326
enum EditType { kMatch, kAdd, kRemove, kReplace };kRemove166,6326
enum EditType { kMatch, kAdd, kRemove, kReplace };kReplace166,6326
class FloatingPoint {FloatingPoint248,9658
  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;Bits252,9786
  static const size_t kBitCount = 8*sizeof(RawType);kBitCount257,9893
  static const size_t kFractionBitCount =kFractionBitCount260,9984
  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;kExponentBitCount264,10110
  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);kSignBitMask267,10220
  static const Bits kFractionBitMask =kFractionBitMask270,10334
  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);kExponentBitMask274,10465
  static const uint32_t kMaxUlps = 4;kMaxUlps288,11206
  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }FloatingPoint296,11565
  static RawType ReinterpretBits(const Bits bits) {ReinterpretBits303,11778
  static RawType Infinity() {Infinity310,11982
  const Bits &bits() const { return u_.bits_; }bits320,12233
  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }exponent_bits323,12329
  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }fraction_bits326,12446
  Bits sign_bit() const { return kSignBitMask & u_.bits_; }sign_bit329,12558
  bool is_nan() const {is_nan332,12680
  bool AlmostEquals(const FloatingPoint& rhs) const {AlmostEquals344,13194
  union FloatingPointUnion {FloatingPointUnion355,13576
    RawType value_;  // The raw floating-point number.value_356,13605
    Bits bits_;      // The bits that represent the number.bits_357,13660
  static Bits SignAndMagnitudeToBiased(const Bits &sam) {SignAndMagnitudeToBiased375,14385
  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits &sam1,DistanceBetweenSignAndMagnitudeNumbers387,14766
  FloatingPointUnion u_;u_394,15106
inline float FloatingPoint<float>::Max() { return FLT_MAX; }Max400,15256
inline double FloatingPoint<double>::Max() { return DBL_MAX; }Max402,15329
typedef FloatingPoint<float> Float;Float406,15479
typedef FloatingPoint<double> Double;Double407,15515
typedef const void* TypeId;TypeId415,15940
class TypeIdHelper {TypeIdHelper418,15991
  static bool dummy_;dummy_423,16209
bool TypeIdHelper<T>::dummy_ = false;dummy_427,16257
TypeId GetTypeId() {GetTypeId433,16517
class TestFactoryBase {TestFactoryBase450,17184
  virtual ~TestFactoryBase() {}~TestFactoryBase452,17217
  TestFactoryBase() {}TestFactoryBase459,17409
class TestFactoryImpl : public TestFactoryBase {TestFactoryImpl468,17636
struct CodeLocation {CodeLocation490,18422
  CodeLocation(const std::string& a_file, int a_line)CodeLocation491,18444
  std::string file;file494,18537
  int line;line495,18557
inline SetUpTearDownSuiteFuncType GetNotDefaultOrNull(GetNotDefaultOrNull504,18822
struct SuiteApiResolver : T {SuiteApiResolver513,19166
  static SetUpTearDownSuiteFuncType GetSetUpCaseOrSuite(const char* filename,GetSetUpCaseOrSuite519,19421
  static SetUpTearDownSuiteFuncType GetTearDownCaseOrSuite(const char* filename,GetTearDownCaseOrSuite540,20234
class GTEST_API_ TypedTestSuitePState {TypedTestSuitePState595,22803
  TypedTestSuitePState() : registered_(false) {}TypedTestSuitePState597,22852
  bool AddTestName(const char* file, int line, const char* case_name,AddTestName602,23053
  bool TestExists(const std::string& test_name) const {TestExists617,23563
  const CodeLocation& GetCodeLocation(const std::string& test_name) const {GetCodeLocation621,23675
  typedef ::std::map<std::string, CodeLocation> RegisteredTestsMap;RegisteredTestsMap635,24290
  bool registered_;registered_637,24359
  RegisteredTestsMap registered_tests_;registered_tests_638,24379
inline const char* SkipComma(const char* str) {SkipComma650,24772
inline std::string GetPrefixUntilComma(const char* str) {GetPrefixUntilComma661,25077
struct DefaultNameGenerator {DefaultNameGenerator673,25556
  static std::string GetName(int i) {GetName675,25610
struct NameGeneratorSelector {NameGeneratorSelector681,25742
  typedef Provided type;type682,25773
void GenerateNamesRecursively(internal::None, std::vector<std::string>*, int) {}GenerateNamesRecursively686,25836
void GenerateNamesRecursively(Types, std::vector<std::string>* result, int i) {GenerateNamesRecursively689,25968
std::vector<std::string> GenerateNames() {GenerateNames696,26304
class TypeParameterizedTest {TypeParameterizedTest710,26926
  static bool Register(const char* prefix, const CodeLocation& code_location,Register716,27187
class TypeParameterizedTest<Fixture, TestSel, internal::None> {TypeParameterizedTest753,29064
  static bool Register(const char* /*prefix*/, const CodeLocation&,Register755,29137
class TypeParameterizedTestSuite {TypeParameterizedTestSuite774,30068
  static bool Register(const char* prefix, CodeLocation code_location,Register776,30112
class TypeParameterizedTestSuite<Fixture, internal::None, Types> {TypeParameterizedTestSuite811,31809
  static bool Register(const char* /*prefix*/, const CodeLocation&,Register813,31885
inline bool AlwaysFalse() { return !AlwaysTrue(); }AlwaysFalse842,33021
struct GTEST_API_ ConstCharPtr {ConstCharPtr847,33232
  ConstCharPtr(const char* str) : value(str) {}ConstCharPtr848,33265
  operator bool() const { return true; }operator bool849,33313
  const char* value;value850,33354
struct TrueWithString {TrueWithString855,33472
  explicit TrueWithString(const char* str) : value(str) {}TrueWithString857,33526
  explicit TrueWithString(const std::string& str) : value(str) {}TrueWithString858,33585
  explicit operator bool() const { return true; }operator bool859,33651
  std::string value;value860,33701
class GTEST_API_ Random {Random868,34042
  static const uint32_t kMaxRange = 1u << 31;kMaxRange870,34077
  explicit Random(uint32_t seed) : state_(seed) {}Random872,34124
  void Reseed(uint32_t seed) { state_ = seed; }Reseed874,34176
  uint32_t state_;state_881,34378
#define GTEST_REMOVE_REFERENCE_AND_CONST_(GTEST_REMOVE_REFERENCE_AND_CONST_886,34494
class HasDebugStringAndShortDebugString {HasDebugStringAndShortDebugString893,34828
      std::string, decltype(std::declval<const C>().DebugString())>::type;type897,34965
      std::string, decltype(std::declval<const C>().ShortDebugString())>::type;type903,35201
  static constexpr bool value =value911,35515
constexpr bool HasDebugStringAndShortDebugString<T>::value;value916,35640
typedef int IsContainer;IsContainer942,37066
IsContainer IsContainerTest(int /* dummy */) {IsContainerTest949,37407
typedef char IsNotContainer;IsNotContainer953,37469
IsNotContainer IsContainerTest(long /* dummy */) { return '\0'; }IsContainerTest955,37517
struct IsHashTable {IsHashTable962,37866
  static const bool value = sizeof(test<T>(nullptr, nullptr)) == sizeof(int);value972,38121
const bool IsHashTable<T>::value;value976,38225
struct IsRecursiveContainerImpl<C, false> : public std::false_type {};IsRecursiveContainerImpl983,38409
struct IsRecursiveContainerImpl<C, true> {IsRecursiveContainerImpl990,38791
struct IsRecursiveContainer : public IsRecursiveContainerImpl<C>::type {};IsRecursiveContainer1005,39483
inline bool ArrayEq(const T& lhs, const U& rhs) { return lhs == rhs; }ArrayEq1018,39963
inline bool ArrayEq(const T(&lhs)[N], const U(&rhs)[N]) {T1022,40117
bool ArrayEq(const T* lhs, size_t size, const U* rhs) {ArrayEq1030,40444
Iter ArrayAwareFind(Iter begin, Iter end, const Element& elem) {ArrayAwareFind1041,40795
inline void CopyArray(const T& from, U* to) { *to = from; }CopyArray1058,41333
inline void CopyArray(const T(&from)[N], U(*to)[N]) {T1062,41476
void CopyArray(const T* from, size_t size, U* to) {CopyArray1070,41797
struct RelationToSourceReference {};RelationToSourceReference1080,42157
struct RelationToSourceCopy {};RelationToSourceCopy1081,42194
class NativeArray {NativeArray1092,42785
  typedef Element value_type;value_type1095,42849
  typedef Element* iterator;iterator1096,42879
  typedef const Element* const_iterator;const_iterator1097,42908
  NativeArray(const Element* array, size_t count, RelationToSourceReference) {NativeArray1100,43010
  NativeArray(const Element* array, size_t count, RelationToSourceCopy) {NativeArray1105,43177
  NativeArray(const NativeArray& rhs) {NativeArray1110,43307
  ~NativeArray() {~NativeArray1114,43400
  size_t size() const { return size_; }size1120,43522
  const_iterator begin() const { return array_; }begin1121,43562
  const_iterator end() const { return array_ + size_; }end1122,43612
  bool operator==(const NativeArray& rhs) const {operator ==1123,43668
  void InitCopy(const Element* array, size_t a_size) {InitCopy1134,44047
  void InitRef(const Element* array, size_t a_size) {InitRef1143,44326
  const Element* array_;array_1149,44461
  size_t size_;size_1150,44486
  void (NativeArray::*clone_)(const Element*, size_t);clone_1151,44502
struct IndexSequence {IndexSequence1156,44621
struct DoubleSequence<true, IndexSequence<I...>, sizeofT> {DoubleSequence1164,44851
struct DoubleSequence<false, IndexSequence<I...>, sizeofT> {DoubleSequence1168,45020
struct MakeIndexSequenceImplMakeIndexSequenceImpl1175,45241
struct MakeIndexSequenceImpl<0> : IndexSequence<> {};MakeIndexSequenceImpl1180,45399
struct Ignore {Ignore1189,45659
struct ElemFromListImpl<IndexSequence<I...>> {ElemFromListImpl1196,45773
struct ElemFromList {ElemFromList1206,46198
struct FlatTupleConstructTag {};FlatTupleConstructTag1212,46362
struct FlatTupleElemBase<FlatTuple<T...>, I> {FlatTupleElemBase1221,46539
  explicit FlatTupleElemBase(FlatTupleConstructTag, Arg&& t)FlatTupleElemBase1225,46704
  value_type value;value1227,46804
struct FlatTupleBase<FlatTuple<T...>, IndexSequence<Idx...>>FlatTupleBase1234,46933
  explicit FlatTupleBase(FlatTupleConstructTag, Args&&... args)FlatTupleBase1239,47145
  const typename ElemFromList<I, T...>::type& Get() const {Get1244,47385
  typename ElemFromList<I, T...>::type& Get() {Get1249,47529
  auto Apply(F&& f) -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {forward1254,47663
  auto Apply(F&& f) const -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {forward1259,47813
class FlatTupleFlatTuple1274,48467
  explicit FlatTuple(FlatTupleConstructTag tag, Args&&... args)FlatTuple1283,48794
constexpr bool InstantiateTestCase_P_IsDeprecated() { return true; }InstantiateTestCase_P_IsDeprecated1295,49217
constexpr bool TypedTestCase_P_IsDeprecated() { return true; }TypedTestCase_P_IsDeprecated1300,49391
constexpr bool TypedTestCaseIsDeprecated() { return true; }TypedTestCaseIsDeprecated1305,49555
constexpr bool RegisterTypedTestCase_P_IsDeprecated() { return true; }RegisterTypedTestCase_P_IsDeprecated1310,49738
constexpr bool InstantiateTypedTestCase_P_IsDeprecated() { return true; }InstantiateTypedTestCase_P_IsDeprecated1315,49938
namespace std {std1320,50063
struct tuple_size<testing::internal::FlatTuple<Ts...>>tuple_size1329,50380
#define GTEST_MESSAGE_AT_(GTEST_MESSAGE_AT_1336,50565
#define GTEST_MESSAGE_(GTEST_MESSAGE_1340,50727
#define GTEST_FATAL_FAILURE_(GTEST_FATAL_FAILURE_1343,50837
#define GTEST_NONFATAL_FAILURE_(GTEST_NONFATAL_FAILURE_1346,50953
#define GTEST_SUCCESS_(GTEST_SUCCESS_1349,51068
#define GTEST_SKIP_(GTEST_SKIP_1352,51166
#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_1360,51543
namespace testing {testing1368,51918
namespace internal {internal1369,51938
class NeverThrown {NeverThrown1371,51960
#define GTEST_EXCEPTION_TYPE_(GTEST_EXCEPTION_TYPE_1383,52157
#define GTEST_TEST_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_THROW_CATCH_STD_EXCEPTION_1392,52376
#define GTEST_TEST_THROW_(GTEST_TEST_THROW_1415,53739
#define GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_(GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_1443,55678
#define GTEST_TEST_NO_THROW_(GTEST_TEST_NO_THROW_1459,56344
#define GTEST_TEST_ANY_THROW_(GTEST_TEST_ANY_THROW_1475,56958
#define GTEST_TEST_BOOLEAN_(GTEST_TEST_BOOLEAN_1497,57777
#define GTEST_TEST_NO_FATAL_FAILURE_(GTEST_TEST_NO_FATAL_FAILURE_1506,58119
#define GTEST_TEST_CLASS_NAME_(GTEST_TEST_CLASS_NAME_1521,58836
#define GTEST_TEST_(GTEST_TEST_1525,58973

test/googletest/googletest/include/gtest/internal/gtest-param-util.h,9328
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_34,1689
namespace testing {testing52,2074
struct TestParamInfo {TestParamInfo56,2267
  TestParamInfo(const ParamType& a_param, size_t an_index) :TestParamInfo57,2290
  ParamType param;param60,2394
  size_t index;index61,2413
struct PrintToStringParamName {PrintToStringParamName66,2535
  std::string operator()(const TestParamInfo<ParamType>& info) const {operator ()68,2596
namespace internal {internal73,2713
class ParamIteratorInterface {ParamIteratorInterface91,3401
  virtual ~ParamIteratorInterface() {}~ParamIteratorInterface93,3441
class ParamIterator {ParamIterator121,4869
  typedef T value_type;value_type123,4900
  typedef const T& reference;reference124,4924
  typedef ptrdiff_t difference_type;difference_type125,4954
  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}ParamIterator128,5051
  ParamIterator& operator=(const ParamIterator& other) {operator =129,5128
  const T& operator*() const { return *impl_->Current(); }operator *135,5273
  const T* operator->() const { return impl_->Current(); }operator ->136,5332
  ParamIterator& operator++() {operator ++138,5426
  ParamIterator operator++(int /*unused*/) {operator ++143,5538
  bool operator==(const ParamIterator& other) const {operator ==148,5697
  bool operator!=(const ParamIterator& other) const {operator !=151,5831
  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}ParamIterator157,5964
  std::unique_ptr<ParamIteratorInterface<T> > impl_;impl_158,6039
class ParamGeneratorInterface {ParamGeneratorInterface164,6232
  typedef T ParamType;ParamType166,6273
  virtual ~ParamGeneratorInterface() {}~ParamGeneratorInterface168,6297
class ParamGenerator {ParamGenerator181,6848
  typedef ParamIterator<T> iterator;iterator183,6880
  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}ParamGenerator185,6918
  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}ParamGenerator186,6995
  ParamGenerator& operator=(const ParamGenerator& other) {operator =188,7066
  iterator begin() const { return iterator(impl_->Begin()); }begin193,7173
  iterator end() const { return iterator(impl_->End()); }end194,7235
  std::shared_ptr<const ParamGeneratorInterface<T> > impl_;impl_197,7304
class RangeGenerator : public ParamGeneratorInterface<T> {RangeGenerator205,7623
  RangeGenerator(T begin, T end, IncrementT step)RangeGenerator207,7691
  class Iterator : public ParamIteratorInterface<T> {Iterator220,8110
    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,Iterator222,8175
    Iterator(const Iterator& other)Iterator250,9255
    const ParamGeneratorInterface<T>* const base_;base_258,9535
    T value_;value_259,9586
    int index_;index_260,9600
    const IncrementT step_;step_261,9616
  static int CalculateEndIndex(const T& begin,CalculateEndIndex264,9685
  const T begin_;begin_276,10064
  const T end_;end_277,10082
  const IncrementT step_;step_278,10098
  const int end_index_;end_index_281,10261
class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {ValuesInIteratorRangeGenerator290,10591
  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)ValuesInIteratorRangeGenerator293,10713
  typedef typename ::std::vector<T> ContainerType;ContainerType305,11098
  class Iterator : public ParamIteratorInterface<T> {Iterator307,11150
    Iterator(const ParamGeneratorInterface<T>* base,Iterator309,11215
    Iterator(const Iterator& other)Iterator346,12789
    const ParamGeneratorInterface<T>* const base_;base_353,13072
    typename ContainerType::const_iterator iterator_;iterator_354,13123
    mutable std::unique_ptr<const T> value_;value_360,13498
  const ContainerType container_;container_366,13716
std::string DefaultParamName(const TestParamInfo<ParamType>& info) {DefaultParamName374,13990
void TestNotEmpty() {TestNotEmpty381,14176
void TestNotEmpty(const T&) {}TestNotEmpty385,14297
class ParameterizedTestFactory : public TestFactoryBase {ParameterizedTestFactory392,14499
  typedef typename TestClass::ParamType ParamType;ParamType394,14566
  explicit ParameterizedTestFactory(ParamType parameter) :ParameterizedTestFactory395,14617
  const ParamType parameter_;parameter_403,14820
class TestMetaFactoryBase {TestMetaFactoryBase413,15139
  virtual ~TestMetaFactoryBase() {}~TestMetaFactoryBase415,15176
class TestMetaFactoryTestMetaFactory429,15751
  TestMetaFactory() {}TestMetaFactory434,15900
class ParameterizedTestSuiteInfoBase {ParameterizedTestSuiteInfoBase454,16727
  virtual ~ParameterizedTestSuiteInfoBase() {}~ParameterizedTestSuiteInfoBase456,16775
  ParameterizedTestSuiteInfoBase() {}ParameterizedTestSuiteInfoBase469,17339
struct GTEST_API_ MarkAsIgnored {MarkAsIgnored479,17622
class ParameterizedTestSuiteInfo : public ParameterizedTestSuiteInfoBase {ParameterizedTestSuiteInfo494,18236
  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();GeneratorCreationFunc501,18614
  explicit ParameterizedTestSuiteInfo(const char* name,ParameterizedTestSuiteInfo504,18756
  void AddTestPattern(const char* test_suite_name, const char* test_base_name,AddTestPattern520,19592
  int AddTestSuiteInstantiation(const std::string& instantiation_name,AddTestSuiteInstantiation528,20031
  struct TestInfo {TestInfo610,23683
    TestInfo(const char* a_test_suite_base_name, const char* a_test_base_name,TestInfo611,23703
    const std::string test_suite_base_name;test_suite_base_name619,24086
    const std::string test_base_name;test_base_name620,24130
    const std::unique_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;test_meta_factory621,24168
    const CodeLocation code_location;code_location622,24246
  struct InstantiationInfo {InstantiationInfo628,24550
      InstantiationInfo(const std::string &name_in,InstantiationInfo629,24579
      std::string name;name640,24994
      GeneratorCreationFunc* generator;generator641,25018
      ParamNameGeneratorFunc* name_func;name_func642,25058
      const char* file;file643,25099
      int line;line644,25123
  typedef ::std::vector<InstantiationInfo> InstantiationContainer;InstantiationContainer646,25144
  static bool IsValidParamName(const std::string& name) {IsValidParamName648,25212
  const std::string test_suite_name_;test_suite_name_662,25560
  CodeLocation code_location_;code_location_663,25598
  TestInfoContainer tests_;tests_664,25629
  InstantiationContainer instantiations_;instantiations_665,25657
class ParameterizedTestSuiteRegistry {ParameterizedTestSuiteRegistry682,26347
  ParameterizedTestSuiteRegistry() {}ParameterizedTestSuiteRegistry684,26395
  ~ParameterizedTestSuiteRegistry() {~ParameterizedTestSuiteRegistry685,26433
  ParameterizedTestSuiteInfo<TestSuite>* GetTestSuitePatternHolder(GetTestSuitePatternHolder694,26731
  void RegisterTests() {RegisterTests722,28039
  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder(GetTestCasePatternHolder730,28287
class TypeParameterizedTestSuiteRegistry {TypeParameterizedTestSuiteRegistry748,28943
  struct TypeParameterizedTestSuiteInfo {TypeParameterizedTestSuiteInfo762,29415
    explicit TypeParameterizedTestSuiteInfo(CodeLocation c)TypeParameterizedTestSuiteInfo763,29457
    CodeLocation code_location;code_location766,29569
    bool instantiated;instantiated767,29601
  std::map<std::string, TypeParameterizedTestSuiteInfo> suites_;suites_770,29630
namespace internal {internal781,29953
class ValueArray {ValueArray790,30149
  explicit ValueArray(Ts... v) : v_(FlatTupleConstructTag{}, std::move(v)...) {}ValueArray792,30177
  operator ParamGenerator<T>() const {  // NOLINToperator ParamGenerator<T>795,30283
  std::vector<T> MakeVector(IndexSequence<I...>) const {MakeVector801,30457
  FlatTuple<Ts...> v_;v_805,30587
class CartesianProductGeneratorCartesianProductGenerator813,30684
  typedef ::std::tuple<T...> ParamType;ParamType816,30784
  CartesianProductGenerator(const std::tuple<ParamGenerator<T>...>& g)CartesianProductGenerator818,30825
  class IteratorImpl<IndexSequence<I...>>IteratorImpl833,31276
    IteratorImpl(const ParamGeneratorInterface<ParamType>* base,IteratorImpl836,31380
    void AdvanceIfEnd() {AdvanceIfEnd889,33435
    void ComputeCurrentValue() {ComputeCurrentValue904,33839
    bool AtEnd() const {AtEnd908,33979
    const ParamGeneratorInterface<ParamType>* const base_;base_916,34180
    std::tuple<typename ParamGenerator<T>::iterator...> begin_;begin_917,34239
    std::tuple<typename ParamGenerator<T>::iterator...> end_;end_918,34303
    std::tuple<typename ParamGenerator<T>::iterator...> current_;current_919,34365
    std::shared_ptr<ParamType> current_value_;current_value_920,34431
class CartesianProductHolder {CartesianProductHolder929,34642
  CartesianProductHolder(const Gen&... g) : generators_(g...) {}CartesianProductHolder931,34682
  operator ParamGenerator<::std::tuple<T...>>() const {operator ParamGenerator<::std::tuple<T...>>933,34774
  std::tuple<Gen...> generators_;generators_939,34951

test/googletest/googletest/include/gtest/internal/gtest-port.h,22850
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_42,2166
# define GTEST_DEV_EMAIL_ GTEST_DEV_EMAIL_288,12967
# define GTEST_FLAG_PREFIX_ GTEST_FLAG_PREFIX_289,13033
# define GTEST_FLAG_PREFIX_DASH_ GTEST_FLAG_PREFIX_DASH_290,13070
# define GTEST_FLAG_PREFIX_UPPER_ GTEST_FLAG_PREFIX_UPPER_291,13112
# define GTEST_NAME_ GTEST_NAME_292,13155
# define GTEST_PROJECT_URL_ GTEST_PROJECT_URL_293,13190
# define GTEST_INIT_GOOGLE_TEST_NAME_ GTEST_INIT_GOOGLE_TEST_NAME_297,13340
# define GTEST_GCC_VER_ GTEST_GCC_VER_303,13564
# define GTEST_DISABLE_MSC_WARNINGS_PUSH_(GTEST_DISABLE_MSC_WARNINGS_PUSH_313,13898
# define GTEST_DISABLE_MSC_WARNINGS_POP_(GTEST_DISABLE_MSC_WARNINGS_POP_316,14046
# define GTEST_DISABLE_MSC_WARNINGS_PUSH_(GTEST_DISABLE_MSC_WARNINGS_PUSH_320,14163
# define GTEST_DISABLE_MSC_WARNINGS_POP_(GTEST_DISABLE_MSC_WARNINGS_POP_321,14215
# define GTEST_DISABLE_MSC_DEPRECATED_PUSH_(GTEST_DISABLE_MSC_DEPRECATED_PUSH_327,14417
#define GTEST_DISABLE_MSC_DEPRECATED_POP_(GTEST_DISABLE_MSC_DEPRECATED_POP_331,14706
# define GTEST_DISABLE_MSC_DEPRECATED_PUSH_(GTEST_DISABLE_MSC_DEPRECATED_PUSH_334,14794
# define GTEST_DISABLE_MSC_DEPRECATED_POP_(GTEST_DISABLE_MSC_DEPRECATED_POP_336,14885
typedef struct _CRITICAL_SECTION GTEST_CRITICAL_SECTION;GTEST_CRITICAL_SECTION352,15527
typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;GTEST_CRITICAL_SECTION357,15751
#  define GTEST_HAS_POSIX_RE GTEST_HAS_POSIX_RE381,16588
#define GTEST_HAS_POSIX_RE GTEST_HAS_POSIX_RE383,16647
# define GTEST_USES_POSIX_RE GTEST_USES_POSIX_RE398,17083
# define GTEST_USES_SIMPLE_RE GTEST_USES_SIMPLE_RE404,17234
# define GTEST_USES_SIMPLE_RE GTEST_USES_SIMPLE_RE410,17379
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS419,17677
#   define _HAS_EXCEPTIONS _HAS_EXCEPTIONS425,17936
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS427,17994
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS437,18615
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS440,18807
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS445,19074
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS448,19222
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS452,19409
#  define GTEST_HAS_EXCEPTIONS GTEST_HAS_EXCEPTIONS456,19530
#define GTEST_HAS_STD_WSTRING GTEST_HAS_STD_WSTRING466,19948
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI480,20449
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI482,20485
#    define GTEST_HAS_RTTI GTEST_HAS_RTTI496,20989
#    define GTEST_HAS_RTTI GTEST_HAS_RTTI498,21027
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI501,21137
#  define GTEST_HAS_RTTI GTEST_HAS_RTTI509,21413
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI516,21667
#   define GTEST_HAS_RTTI GTEST_HAS_RTTI518,21703
#  define GTEST_HAS_RTTI GTEST_HAS_RTTI524,21804
#define GTEST_HAS_PTHREAD GTEST_HAS_PTHREAD543,22329
#     define GTEST_HAS_CLONE GTEST_HAS_CLONE574,23580
#     define GTEST_HAS_CLONE GTEST_HAS_CLONE576,23621
#   define GTEST_HAS_CLONE GTEST_HAS_CLONE579,23671
#  define GTEST_HAS_CLONE GTEST_HAS_CLONE582,23716
#  define GTEST_HAS_STREAM_REDIRECTION GTEST_HAS_STREAM_REDIRECTION594,24215
#  define GTEST_HAS_STREAM_REDIRECTION GTEST_HAS_STREAM_REDIRECTION596,24263
# define GTEST_HAS_DEATH_TEST GTEST_HAS_DEATH_TEST609,24979
# define GTEST_HAS_TYPED_TEST GTEST_HAS_TYPED_TEST618,25313
# define GTEST_HAS_TYPED_TEST_P GTEST_HAS_TYPED_TEST_P619,25345
#define GTEST_WIDE_STRING_USES_UTF16_ GTEST_WIDE_STRING_USES_UTF16_623,25468
# define GTEST_CAN_STREAM_RESULTS_ GTEST_CAN_STREAM_RESULTS_630,25809
# define GTEST_AMBIGUOUS_ELSE_BLOCKER_GTEST_AMBIGUOUS_ELSE_BLOCKER_644,26253
# define GTEST_AMBIGUOUS_ELSE_BLOCKER_ GTEST_AMBIGUOUS_ELSE_BLOCKER_646,26298
# define GTEST_ATTRIBUTE_UNUSED_ GTEST_ATTRIBUTE_UNUSED_661,26881
#  define GTEST_ATTRIBUTE_UNUSED_ GTEST_ATTRIBUTE_UNUSED_664,26993
# define GTEST_ATTRIBUTE_UNUSED_GTEST_ATTRIBUTE_UNUSED_668,27099
#  define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_677,27503
#  define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_681,27699
# define GTEST_ATTRIBUTE_PRINTF_(GTEST_ATTRIBUTE_PRINTF_685,27856
#define GTEST_DISALLOW_ASSIGN_(GTEST_DISALLOW_ASSIGN_691,28031
#define GTEST_DISALLOW_COPY_AND_ASSIGN_(GTEST_DISALLOW_COPY_AND_ASSIGN_696,28231
#define GTEST_DISALLOW_MOVE_ASSIGN_(GTEST_DISALLOW_MOVE_ASSIGN_702,28471
#define GTEST_DISALLOW_MOVE_AND_ASSIGN_(GTEST_DISALLOW_MOVE_AND_ASSIGN_707,28680
# define GTEST_MUST_USE_RESULT_ GTEST_MUST_USE_RESULT_717,29112
# define GTEST_MUST_USE_RESULT_GTEST_MUST_USE_RESULT_719,29187
# define GTEST_INTENTIONAL_CONST_COND_PUSH_(GTEST_INTENTIONAL_CONST_COND_PUSH_730,29577
# define GTEST_INTENTIONAL_CONST_COND_POP_(GTEST_INTENTIONAL_CONST_COND_POP_732,29668
#  define GTEST_HAS_SEH GTEST_HAS_SEH743,30121
#  define GTEST_HAS_SEH GTEST_HAS_SEH746,30172
#define GTEST_IS_THREADSAFE GTEST_IS_THREADSAFE753,30262
#  define GTEST_API_ GTEST_API_767,30819
#  define GTEST_API_ GTEST_API_769,30897
# define GTEST_API_ GTEST_API_772,30990
# define GTEST_API_GTEST_API_778,31113
# define GTEST_DEFAULT_DEATH_TEST_STYLE GTEST_DEFAULT_DEATH_TEST_STYLE782,31195
# define GTEST_NO_INLINE_ GTEST_NO_INLINE_787,31356
# define GTEST_NO_INLINE_GTEST_NO_INLINE_789,31414
#  define GTEST_HAS_CXXABI_H_ GTEST_HAS_CXXABI_H_795,31635
#  define GTEST_HAS_CXXABI_H_ GTEST_HAS_CXXABI_H_797,31674
#  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_805,31900
#  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_808,31998
# define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_811,32094
#  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_817,32297
#  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_820,32397
# define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_823,32495
#  define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_829,32703
#  define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_832,32810
# define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_835,32912
#  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_841,33116
#  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_844,33214
# define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_847,33310
namespace testing {testing850,33377
namespace internal {internal862,33613
#define GTEST_COMPILE_ASSERT_(GTEST_COMPILE_ASSERT_878,34320
class GTEST_API_ RE {RE892,34758
  RE(const RE& other) { Init(other.pattern()); }RE896,34893
  RE(const ::std::string& regex) { Init(regex.c_str()); }  // NOLINTRE899,34980
  RE(const char* regex) { Init(regex); }  // NOLINTRE901,35050
  const char* pattern() const { return pattern_; }pattern905,35165
  static bool FullMatch(const ::std::string& str, const RE& re) {FullMatch911,35453
  static bool PartialMatch(const ::std::string& str, const RE& re) {PartialMatch914,35562
  const char* pattern_;pattern_923,35836
  bool is_valid_;is_valid_924,35860
  regex_t full_regex_;     // For FullMatch().full_regex_928,35905
  regex_t partial_regex_;  // For PartialMatch().partial_regex_929,35952
  const char* full_pattern_;  // For FullMatch();full_pattern_933,36036
enum GTestLogSeverity {GTestLogSeverity956,36988
  GTEST_INFO,GTEST_INFO957,37012
  GTEST_WARNING,GTEST_WARNING958,37026
  GTEST_ERROR,GTEST_ERROR959,37043
  GTEST_FATALGTEST_FATAL960,37058
class GTEST_API_ GTestLog {GTestLog966,37236
  ::std::ostream& GetStream() { return ::std::cerr; }GetStream973,37435
  const GTestLogSeverity severity_;severity_976,37500
# define GTEST_LOG_(GTEST_LOG_983,37612
inline void LogToStderr() {}LogToStderr987,37786
inline void FlushInfoLog() { fflush(nullptr); }FlushInfoLog988,37815
# define GTEST_CHECK_(GTEST_CHECK_1007,38537
#define GTEST_CHECK_POSIX_SUCCESS_(GTEST_CHECK_POSIX_SUCCESS_1020,39053
struct ConstRef { typedef const T& type; };ConstRef1037,39767
struct ConstRef { typedef const T& type; };type1037,39767
struct ConstRef<T&> { typedef T& type; };ConstRef1039,39833
struct ConstRef<T&> { typedef T& type; };type1039,39833
#define GTEST_REFERENCE_TO_CONST_(GTEST_REFERENCE_TO_CONST_1042,39935
inline To ImplicitCast_(To x) { return x; }ImplicitCast_1066,41024
inline To DownCast_(From* f) {  // so we only accept pointersDownCast_1090,42434
Derived* CheckedDowncastToActualType(Base* base) {CheckedDowncastToActualType1115,43321
inline void SleepMilliseconds(int n) {SleepMilliseconds1168,45039
class Notification {Notification1188,45693
  Notification() : notified_(false) {Notification1190,45723
  ~Notification() {~Notification1193,45835
  void Notify() {Notify1199,46011
  void WaitForNotification() {WaitForNotification1207,46214
  pthread_mutex_t mutex_;mutex_1219,46456
  bool notified_;notified_1220,46482
class GTEST_API_ AutoHandle {AutoHandle1231,46777
  typedef void* Handle;Handle1238,47156
  Handle handle_;handle_1253,47454
class GTEST_API_ Notification {Notification1264,47831
  AutoHandle event_;event_1271,47948
class ThreadWithParamBase {ThreadWithParamBase1287,48626
  virtual ~ThreadWithParamBase() {}~ThreadWithParamBase1289,48663
extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {ThreadFuncWithCLinkage1299,49140
class ThreadWithParam : public ThreadWithParamBase {ThreadWithParam1317,49810
  typedef void UserThreadFunc(T);UserThreadFunc1319,49872
  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)ThreadWithParam1321,49907
  void Join() {Join1334,50402
  UserThreadFunc* const func_;  // User-supplied thread function.func_1347,50679
  const T param_;  // User-supplied parameter to the thread function.param_1348,50745
  Notification* const thread_can_start_;thread_can_start_1351,50902
  bool finished_;  // true if and only if we know that the thread function hasfinished_1352,50943
  pthread_t thread_;  // The native thread object.thread_1354,51054
class GTEST_API_ Mutex {Mutex1381,51986
  enum MutexType { kStatic = 0, kDynamic = 1 };MutexType1383,52020
  enum MutexType { kStatic = 0, kDynamic = 1 };kStatic1383,52020
  enum MutexType { kStatic = 0, kDynamic = 1 };kDynamic1383,52020
  enum StaticConstructorSelector { kStaticMutex = 0 };StaticConstructorSelector1387,52251
  enum StaticConstructorSelector { kStaticMutex = 0 };kStaticMutex1387,52251
  explicit Mutex(StaticConstructorSelector /*dummy*/) {}Mutex1392,52531
  unsigned int owner_thread_id_;owner_thread_id_1411,53022
  MutexType type_;type_1415,53153
  long critical_section_init_phase_;  // NOLINTcritical_section_init_phase_1416,53172
  GTEST_CRITICAL_SECTION* critical_section_;critical_section_1417,53220
# define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1422,53312
# define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1425,53403
class GTestMutexLock {GTestMutexLock1433,53869
  explicit GTestMutexLock(Mutex* mutex)GTestMutexLock1435,53901
  ~GTestMutexLock() { mutex_->Unlock(); }~GTestMutexLock1438,53984
  Mutex* const mutex_;mutex_1441,54037
typedef GTestMutexLock MutexLock;MutexLock1446,54116
class ThreadLocalValueHolderBase {ThreadLocalValueHolderBase1450,54258
  virtual ~ThreadLocalValueHolderBase() {}~ThreadLocalValueHolderBase1452,54302
class ThreadLocalBase {ThreadLocalBase1457,54456
  ThreadLocalBase() {}ThreadLocalBase1466,54846
  virtual ~ThreadLocalBase() {}~ThreadLocalBase1467,54869
class GTEST_API_ ThreadLocalRegistry {ThreadLocalRegistry1476,55201
class GTEST_API_ ThreadWithParamBase {ThreadWithParamBase1488,55672
  class Runnable {Runnable1493,55748
    virtual ~Runnable() {}~Runnable1495,55778
  AutoHandle thread_;thread_1503,55959
class ThreadWithParam : public ThreadWithParamBase {ThreadWithParam1508,56077
  typedef void UserThreadFunc(T);UserThreadFunc1510,56139
  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)ThreadWithParam1512,56174
  virtual ~ThreadWithParam() {}~ThreadWithParam1515,56338
  class RunnableImpl : public Runnable {RunnableImpl1518,56381
    RunnableImpl(UserThreadFunc* func, T param)RunnableImpl1520,56433
    virtual ~RunnableImpl() {}~RunnableImpl1524,56536
    virtual void Run() {Run1525,56567
    UserThreadFunc* const func_;func_1530,56632
    const T param_;param_1531,56665
class ThreadLocal : public ThreadLocalBase {ThreadLocal1567,57970
  ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) {}ThreadLocal1569,58024
  explicit ThreadLocal(const T& value)ThreadLocal1570,58095
  ~ThreadLocal() { ThreadLocalRegistry::OnThreadLocalDestroyed(this); }~ThreadLocal1573,58202
  T* pointer() { return GetOrCreateValue(); }pointer1575,58275
  const T* pointer() const { return GetOrCreateValue(); }pointer1576,58321
  const T& get() const { return *pointer(); }get1577,58379
  void set(const T& value) { *pointer() = value; }set1578,58425
  class ValueHolder : public ThreadLocalValueHolderBase {ValueHolder1583,58594
    ValueHolder() : value_() {}ValueHolder1585,58663
    explicit ValueHolder(const T& value) : value_(value) {}ValueHolder1586,58695
    T* pointer() { return &value_; }pointer1588,58756
    T value_;value_1591,58806
  T* GetOrCreateValue() const {GetOrCreateValue1596,58877
  virtual ThreadLocalValueHolderBase* NewValueForCurrentThread() const {NewValueForCurrentThread1601,59024
  class ValueHolderFactory {ValueHolderFactory1605,59148
    ValueHolderFactory() {}ValueHolderFactory1607,59188
    virtual ~ValueHolderFactory() {}~ValueHolderFactory1608,59216
  class DefaultValueHolderFactory : public ValueHolderFactory {DefaultValueHolderFactory1615,59381
    DefaultValueHolderFactory() {}DefaultValueHolderFactory1617,59456
  class InstanceValueHolderFactory : public ValueHolderFactory {InstanceValueHolderFactory1624,59652
    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}InstanceValueHolderFactory1626,59728
    const T value_;  // The value for each thread.value_1632,59910
  std::unique_ptr<ValueHolderFactory> default_factory_;default_factory_1637,60033
class MutexBase {MutexBase1645,60236
  void Lock() {Lock1648,60289
  void Unlock() {Unlock1655,60449
  void AssertHeld() const {AssertHeld1666,60931
  pthread_mutex_t mutex_;  // The underlying pthread mutex.mutex_1677,61409
  bool has_owner_;has_owner_1684,61893
  pthread_t owner_;  // The thread holding the mutex.owner_1685,61912
#  define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1689,62006
#define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1698,62565
class Mutex : public MutexBase {Mutex1703,62804
  Mutex() {Mutex1705,62846
  ~Mutex() {~Mutex1709,62956
class GTestMutexLock {GTestMutexLock1722,63435
  explicit GTestMutexLock(MutexBase* mutex)GTestMutexLock1724,63467
  ~GTestMutexLock() { mutex_->Unlock(); }~GTestMutexLock1727,63554
  MutexBase* const mutex_;mutex_1730,63607
typedef GTestMutexLock MutexLock;MutexLock1735,63690
class ThreadLocalValueHolderBase {ThreadLocalValueHolderBase1743,63956
  virtual ~ThreadLocalValueHolderBase() {}~ThreadLocalValueHolderBase1745,64000
extern "C" inline void DeleteThreadLocalValue(void* value_holder) {DeleteThreadLocalValue1750,64132
class GTEST_API_ ThreadLocal {ThreadLocal1756,64352
  ThreadLocal()ThreadLocal1758,64392
  explicit ThreadLocal(const T& value)ThreadLocal1760,64488
  ~ThreadLocal() {~ThreadLocal1764,64622
  T* pointer() { return GetOrCreateValue(); }pointer1773,64944
  const T* pointer() const { return GetOrCreateValue(); }pointer1774,64990
  const T& get() const { return *pointer(); }get1775,65048
  void set(const T& value) { *pointer() = value; }set1776,65094
  class ValueHolder : public ThreadLocalValueHolderBase {ValueHolder1780,65186
    ValueHolder() : value_() {}ValueHolder1782,65255
    explicit ValueHolder(const T& value) : value_(value) {}ValueHolder1783,65287
    T* pointer() { return &value_; }pointer1785,65348
    T value_;value_1788,65398
  static pthread_key_t CreateKey() {CreateKey1792,65468
  T* GetOrCreateValue() const {GetOrCreateValue1801,65755
  class ValueHolderFactory {ValueHolderFactory1814,66267
    ValueHolderFactory() {}ValueHolderFactory1816,66307
    virtual ~ValueHolderFactory() {}~ValueHolderFactory1817,66335
  class DefaultValueHolderFactory : public ValueHolderFactory {DefaultValueHolderFactory1824,66500
    DefaultValueHolderFactory() {}DefaultValueHolderFactory1826,66575
  class InstanceValueHolderFactory : public ValueHolderFactory {InstanceValueHolderFactory1833,66771
    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}InstanceValueHolderFactory1835,66847
    const T value_;  // The value for each thread.value_1841,67029
  const pthread_key_t key_;key_1847,67211
  std::unique_ptr<ValueHolderFactory> default_factory_;default_factory_1848,67239
class Mutex {Mutex1862,67676
  Mutex() {}Mutex1864,67699
  void Lock() {}Lock1865,67712
  void Unlock() {}Unlock1866,67729
  void AssertHeld() const {}AssertHeld1867,67748
# define GTEST_DECLARE_STATIC_MUTEX_(GTEST_DECLARE_STATIC_MUTEX_1870,67781
# define GTEST_DEFINE_STATIC_MUTEX_(GTEST_DEFINE_STATIC_MUTEX_1873,67870
class GTestMutexLock {GTestMutexLock1880,68288
  explicit GTestMutexLock(Mutex*) {}  // NOLINTGTestMutexLock1882,68320
typedef GTestMutexLock MutexLock;MutexLock1885,68372
class GTEST_API_ ThreadLocal {ThreadLocal1888,68429
  ThreadLocal() : value_() {}ThreadLocal1890,68469
  explicit ThreadLocal(const T& value) : value_(value) {}ThreadLocal1891,68499
  T* pointer() { return &value_; }pointer1892,68557
  const T* pointer() const { return &value_; }pointer1893,68592
  const T& get() const { return value_; }get1894,68639
  void set(const T& value) { value_ = value; }set1895,68681
  T value_;value_1897,68738
# define GTEST_PATH_SEP_ GTEST_PATH_SEP_1907,68947
# define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_1908,68977
# define GTEST_PATH_SEP_ GTEST_PATH_SEP_1910,69018
# define GTEST_HAS_ALT_PATH_SEP_ GTEST_HAS_ALT_PATH_SEP_1911,69047
inline bool IsAlpha(char ch) {IsAlpha1921,69357
inline bool IsAlNum(char ch) {IsAlNum1924,69445
inline bool IsDigit(char ch) {IsDigit1927,69533
inline bool IsLower(char ch) {IsLower1930,69621
inline bool IsSpace(char ch) {IsSpace1933,69709
inline bool IsUpper(char ch) {IsUpper1936,69797
inline bool IsXDigit(char ch) {IsXDigit1939,69885
inline bool IsXDigit(char8_t ch) {IsXDigit1943,69996
inline bool IsXDigit(char16_t ch) {IsXDigit1947,70096
inline bool IsXDigit(char32_t ch) {IsXDigit1951,70251
inline bool IsXDigit(wchar_t ch) {IsXDigit1955,70406
inline char ToLower(char ch) {ToLower1960,70561
inline char ToUpper(char ch) {ToUpper1963,70663
inline std::string StripTrailingSpaces(std::string str) {StripTrailingSpaces1967,70766
namespace posix {posix1980,71254
typedef struct _stat StatStruct;StatStruct1986,71343
inline int DoIsATTY(int fd) { return isatty(fd); }DoIsATTY1989,71398
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp1990,71449
inline char* StrDup(const char* src) { return strdup(src); }StrDup1993,71533
inline int DoIsATTY(int /* fd */) { return 0; }DoIsATTY1996,71649
inline int DoIsATTY(int fd) { return _isatty(fd); }DoIsATTY1998,71705
inline int StrCaseCmp(const char* s1, const char* s2) {StrCaseCmp2000,71794
inline char* StrDup(const char* src) { return _strdup(src); }StrDup2003,71879
inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }FileNo2007,71996
inline int FileNo(FILE* file) { return _fileno(file); }FileNo2011,72187
inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }Stat2012,72243
inline int RmDir(const char* dir) { return _rmdir(dir); }RmDir2013,72323
inline bool IsDir(const StatStruct& st) {IsDir2014,72381
inline int IsATTY(int fd) {IsATTY2051,73586
inline int ChDir(const char* dir) { return chdir(dir); }ChDir2072,74267
inline FILE* FOpen(const char* path, const char* mode) {FOpen2074,74331
inline FILE *FReopen(const char* path, const char* mode, FILE* stream) {FReopen2086,74899
inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }FDOpen2089,75012
inline int FClose(FILE* fp) { return fclose(fp); }FClose2091,75094
inline int Read(int fd, void* buf, unsigned int count) {Read2093,75174
inline int Write(int fd, const void* buf, unsigned int count) {Write2096,75282
inline int Close(int fd) { return close(fd); }Close2099,75398
inline const char* StrError(int errnum) { return strerror(errnum); }StrError2100,75445
inline const char* GetEnv(const char* name) {GetEnv2102,75521
# define GTEST_SNPRINTF_(GTEST_SNPRINTF_2138,77016
class TypeWithSize {TypeWithSize2174,78172
class TypeWithSize<4> {TypeWithSize2183,78361
class TypeWithSize<8> {TypeWithSize2191,78502
# define GTEST_FLAG(GTEST_FLAG2204,78819
# define GTEST_USE_OWN_FLAGFILE_FLAG_ GTEST_USE_OWN_FLAGFILE_FLAG_2208,78940
# define GTEST_FLAG_SAVER_ GTEST_FLAG_SAVER_2212,79065
#define GTEST_DECLARE_bool_(GTEST_DECLARE_bool_2215,79160
#define GTEST_DECLARE_int32_(GTEST_DECLARE_int32_2219,79358
#define GTEST_DECLARE_string_(GTEST_DECLARE_string_2223,79580
#define GTEST_DEFINE_bool_(GTEST_DEFINE_bool_2229,79836
#define GTEST_DEFINE_int32_(GTEST_DEFINE_int32_2233,80061
#define GTEST_DEFINE_string_(GTEST_DEFINE_string_2237,80310
#define GTEST_FLAG_GET(GTEST_FLAG_GET2245,80634
#define GTEST_FLAG_SET(GTEST_FLAG_SET2246,80691
# define GTEST_EXCLUSIVE_LOCK_REQUIRED_(GTEST_EXCLUSIVE_LOCK_REQUIRED_2251,80875
# define GTEST_LOCK_EXCLUDED_(GTEST_LOCK_EXCLUDED_2252,80922
#define GTEST_INTERNAL_DEPRECATED(GTEST_INTERNAL_DEPRECATED2282,82268
#define GTEST_INTERNAL_HAS_ANY GTEST_INTERNAL_HAS_ANY2294,82679
namespace testing {testing2296,82740
namespace internal {internal2297,82760
#define GTEST_INTERNAL_HAS_OPTIONAL GTEST_INTERNAL_HAS_OPTIONAL2322,83507
namespace testing {testing2324,83578
namespace internal {internal2325,83598
inline ::absl::nullopt_t Nullopt() { return ::absl::nullopt; }Nullopt2328,83679
# define GTEST_INTERNAL_HAS_STRING_VIEW GTEST_INTERNAL_HAS_STRING_VIEW2354,84563
namespace testing {testing2356,84643
namespace internal {internal2357,84663
#define GTEST_INTERNAL_HAS_VARIANT GTEST_INTERNAL_HAS_VARIANT2382,85488
namespace testing {testing2384,85557
namespace internal {internal2385,85577

test/googletest/googletest/include/gtest/internal/custom/gtest.h,116
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_35,1738

test/googletest/googletest/include/gtest/internal/custom/gtest-printers.h,134
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_40,1956

test/googletest/googletest/include/gtest/internal/custom/gtest-port.h,126
#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_35,1743

test/googletest/googletest/include/gtest/gtest-spi.h,1392
#define GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_35,1732
namespace testing {testing42,1922
class GTEST_API_ ScopedFakeTestPartResultReporterScopedFakeTestPartResultReporter53,2521
  enum InterceptMode {InterceptMode57,2679
    INTERCEPT_ONLY_CURRENT_THREAD,  // Intercepts only thread local failures.INTERCEPT_ONLY_CURRENT_THREAD58,2702
    INTERCEPT_ALL_THREADS           // Intercepts all failures.INTERCEPT_ALL_THREADS59,2780
  ~ScopedFakeTestPartResultReporter() override;override73,3445
  void ReportTestPartResult(const TestPartResult& result) override;override80,3676
  const InterceptMode intercept_mode_;intercept_mode_85,3771
  TestPartResultReporterInterface* old_reporter_;old_reporter_86,3810
  TestPartResultArray* const result_;result_87,3860
namespace internal {internal92,3972
class GTEST_API_ SingleFailureChecker {SingleFailureChecker99,4306
  const TestPartResultArray* const results_;results_106,4575
  const TestPartResult::Type type_;type_107,4620
  const std::string substr_;substr_108,4656
#define EXPECT_FATAL_FAILURE(EXPECT_FATAL_FAILURE142,6030
#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(EXPECT_FATAL_FAILURE_ON_ALL_THREADS159,6687
#define EXPECT_NONFATAL_FAILURE(EXPECT_NONFATAL_FAILURE208,8871
#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS222,9446

test/googletest/googletest/include/gtest/gtest-typed-test.h,1057
#define GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_31,1609
#define GTEST_TYPE_PARAMS_(GTEST_TYPE_PARAMS_180,7061
#define GTEST_NAME_GENERATOR_(GTEST_NAME_GENERATOR_184,7256
#define TYPED_TEST_SUITE(TYPED_TEST_SUITE187,7356
#define TYPED_TEST(TYPED_TEST193,7691
#define TYPED_TEST_CASE TYPED_TEST_CASE224,10012
#define GTEST_SUITE_NAMESPACE_(GTEST_SUITE_NAMESPACE_236,10524
#define GTEST_TYPED_TEST_SUITE_P_STATE_(GTEST_TYPED_TEST_SUITE_P_STATE_242,10774
#define GTEST_REGISTERED_TEST_NAMES_(GTEST_REGISTERED_TEST_NAMES_249,11068
#define TYPED_TEST_SUITE_P(TYPED_TEST_SUITE_P255,11369
#define TYPED_TEST_CASE_P TYPED_TEST_CASE_P261,11615
#define TYPED_TEST_P(TYPED_TEST_P266,11834
#define REGISTER_TYPED_TEST_SUITE_P(REGISTER_TYPED_TEST_SUITE_P285,13117
#define REGISTER_TYPED_TEST_CASE_P REGISTER_TYPED_TEST_CASE_P296,13827
#define INSTANTIATE_TYPED_TEST_SUITE_P(INSTANTIATE_TYPED_TEST_SUITE_P302,14140
#define INSTANTIATE_TYPED_TEST_CASE_P INSTANTIATE_TYPED_TEST_CASE_P321,15479

test/googletest/googletest/samples/sample5_unittest.cc,537
class QuickTest : public testing::Test {QuickTest62,2851
  time_t start_time_;start_time_81,3589
class IntegerFunctionTest : public QuickTest {IntegerFunctionTest88,3773
TEST_F(IntegerFunctionTest, Factorial) {TEST_F97,4018
TEST_F(IntegerFunctionTest, IsPrime) {TEST_F115,4443
class QueueTest : public QuickTest {QueueTest141,5196
  Queue<int> q0_;q0_161,5711
  Queue<int> q1_;q1_162,5729
  Queue<int> q2_;q2_163,5747
TEST_F(QueueTest, DefaultConstructor) {TEST_F170,5860
TEST_F(QueueTest, Dequeue) {TEST_F175,5952

test/googletest/googletest/samples/sample6_unittest.cc,1030
PrimeTable* CreatePrimeTable<OnTheFlyPrimeTable>() {CreatePrimeTable47,2067
PrimeTable* CreatePrimeTable<PreCalculatedPrimeTable>() {CreatePrimeTable52,2168
class PrimeTableTest : public testing::Test {PrimeTableTest58,2342
  PrimeTableTest() : table_(CreatePrimeTable<T>()) {}PrimeTableTest62,2488
  PrimeTable* const table_;table_73,3045
typedef Types<OnTheFlyPrimeTable, PreCalculatedPrimeTable> Implementations;Implementations91,3569
TYPED_TEST(PrimeTableTest, ReturnsFalseForNonPrimes) {TYPED_TEST97,3791
TYPED_TEST(PrimeTableTest, ReturnsTrueForPrimes) {TYPED_TEST113,4466
TYPED_TEST(PrimeTableTest, CanGetNextPrime) {TYPED_TEST122,4769
class PrimeTableTest2 : public PrimeTableTest<T> {PrimeTableTest2154,6160
TYPED_TEST_P(PrimeTableTest2, ReturnsFalseForNonPrimes) {TYPED_TEST_P164,6544
TYPED_TEST_P(PrimeTableTest2, ReturnsTrueForPrimes) {TYPED_TEST_P173,6860
TYPED_TEST_P(PrimeTableTest2, CanGetNextPrime) {TYPED_TEST_P182,7166
    PrimeTableImplementations;PrimeTableImplementations212,8585

test/googletest/googletest/samples/sample7_unittest.cc,570
typedef PrimeTable* CreatePrimeTableFunc();CreatePrimeTableFunc51,2363
PrimeTable* CreateOnTheFlyPrimeTable() {CreateOnTheFlyPrimeTable53,2408
PrimeTable* CreatePreCalculatedPrimeTable() {CreatePreCalculatedPrimeTable58,2523
class PrimeTableTestSmpl7 : public TestWithParam<CreatePrimeTableFunc*> {PrimeTableTestSmpl766,2897
  PrimeTable* table_;table_76,3174
TEST_P(PrimeTableTestSmpl7, ReturnsFalseForNonPrimes) {TEST_P79,3200
TEST_P(PrimeTableTestSmpl7, ReturnsTrueForPrimes) {TEST_P88,3478
TEST_P(PrimeTableTestSmpl7, CanGetNextPrime) {TEST_P97,3746

test/googletest/googletest/samples/sample2.h,588
#define GOOGLETEST_SAMPLES_SAMPLE2_H_GOOGLETEST_SAMPLES_SAMPLE2_H_33,1666
class MyString {MyString39,1753
  const char* c_string_;c_string_41,1780
  MyString() : c_string_(nullptr) {}MyString53,2121
  explicit MyString(const char* a_c_string) : c_string_(nullptr) {MyString56,2222
  MyString(const MyString& string) : c_string_(nullptr) {MyString61,2331
  ~MyString() { delete[] c_string_; }~MyString69,2590
  const char* c_string() const { return c_string_; }c_string72,2698
  size_t Length() const { return c_string_ == nullptr ? 0 : strlen(c_string_); }Length74,2752

test/googletest/googletest/samples/sample1_unittest.cc,264
TEST(FactorialTest, Negative) {TEST76,3120
TEST(FactorialTest, Zero) {TEST100,3823
TEST(FactorialTest, Positive) {TEST105,3924
TEST(IsPrimeTest, Negative) {TEST116,4129
TEST(IsPrimeTest, Trivial) {TEST125,4337
TEST(IsPrimeTest, Positive) {TEST133,4504

test/googletest/googletest/samples/sample3-inl.h,1234
#define GOOGLETEST_SAMPLES_SAMPLE3_INL_H_GOOGLETEST_SAMPLES_SAMPLE3_INL_H_33,1670
class QueueNode {QueueNode47,2073
  const E& element() const { return element_; }element52,2162
  QueueNode* next() { return next_; }next55,2249
  const QueueNode* next() const { return next_; }next56,2287
  explicit QueueNode(const E& an_element)QueueNode61,2435
  E element_;element_68,2672
  QueueNode* next_;next_69,2686
class Queue {Queue73,2759
  Queue() : head_(nullptr), last_(nullptr), size_(0) {}Queue76,2811
  ~Queue() { Clear(); }~Queue79,2899
  void Clear() {Clear82,2947
  size_t Size() const { return size_; }Size101,3360
  QueueNode<E>* Head() { return head_; }Head104,3474
  const QueueNode<E>* Head() const { return head_; }Head105,3515
  QueueNode<E>* Last() { return last_; }Last108,3641
  const QueueNode<E>* Last() const { return last_; }Last109,3682
  void Enqueue(const E& element) {Enqueue115,3980
  E* Dequeue() {Dequeue130,4330
  Queue* Map(F function) const {Map152,4801
  QueueNode<E>* head_;  // The first node of the queue.head_163,5058
  QueueNode<E>* last_;  // The last node of the queue.last_164,5114
  size_t size_;  // The number of elements in the queue.size_165,5169

test/googletest/googletest/samples/sample9_unittest.cc,268
class TersePrinter : public EmptyTestEventListener {TersePrinter49,2171
TEST(CustomOutputTest, PrintsMessage) {TEST90,3492
TEST(CustomOutputTest, Succeeds) {TEST94,3591
TEST(CustomOutputTest, Fails) {TEST98,3684
int main(int argc, char **argv) {main104,3834

test/googletest/googletest/samples/sample4.cc,134
int Counter::Increment() {Increment37,1727
int Counter::Decrement() {Decrement43,1892
void Counter::Print() const {Print52,2052

test/googletest/googletest/samples/sample4.h,186
#define GOOGLETEST_SAMPLES_SAMPLE4_H_GOOGLETEST_SAMPLES_SAMPLE4_H_32,1665
class Counter {Counter35,1735
  int counter_;counter_37,1761
  Counter() : counter_(0) {}Counter41,1828

test/googletest/googletest/samples/sample2_unittest.cc,252
TEST(MyString, DefaultConstructor) {TEST46,2111
const char kHelloString[] = "Hello, world!";kHelloString74,3003
TEST(MyString, ConstructorFromCString) {TEST77,3093
TEST(MyString, CopyConstructor) {TEST85,3335
TEST(MyString, Set) {TEST92,3511

test/googletest/googletest/samples/sample1.h,76
#define GOOGLETEST_SAMPLES_SAMPLE1_H_GOOGLETEST_SAMPLES_SAMPLE1_H_33,1666

test/googletest/googletest/samples/prime_tables.h,568
#define GOOGLETEST_SAMPLES_PRIME_TABLES_H_GOOGLETEST_SAMPLES_PRIME_TABLES_H_37,1814
class PrimeTable {PrimeTable42,1910
  virtual ~PrimeTable() {}~PrimeTable44,1938
class OnTheFlyPrimeTable : public PrimeTable {OnTheFlyPrimeTable55,2295
class PreCalculatedPrimeTable : public PrimeTable {PreCalculatedPrimeTable79,2821
  explicit PreCalculatedPrimeTable(int max)PreCalculatedPrimeTable82,2945
  void CalculatePrimesUpTo(int max) {CalculatePrimesUpTo101,3416
  const int is_prime_size_;is_prime_size_119,4012
  bool* const is_prime_;is_prime_120,4040

test/googletest/googletest/samples/sample1.cc,79
int Factorial(int n) {Factorial35,1726
bool IsPrime(int n) {IsPrime45,1894

test/googletest/googletest/samples/sample10_unittest.cc,617
class Water {Water47,1997
  void* operator new(size_t allocation_size) {operator new52,2133
  void operator delete(void* block, size_t /* allocation_size */) {operator delete57,2239
  static int allocated() { return allocated_; }allocated62,2347
  static int allocated_;allocated_65,2406
int Water::allocated_ = 0;allocated_68,2435
class LeakChecker : public EmptyTestEventListener {LeakChecker74,2737
  int initially_allocated_;initially_allocated_91,3341
TEST(ListenersTest, DoesNotLeak) {TEST94,3373
TEST(ListenersTest, LeaksWater) {TEST101,3537
int main(int argc, char **argv) {main107,3651

test/googletest/googletest/samples/sample8_unittest.cc,670
class HybridPrimeTable : public PrimeTable {HybridPrimeTable48,2353
  HybridPrimeTable(bool force_on_the_fly, int max_precalculated)HybridPrimeTable50,2407
  OnTheFlyPrimeTable* on_the_fly_impl_;on_the_fly_impl_77,3285
  PreCalculatedPrimeTable* precalc_impl_;precalc_impl_78,3325
  int max_precalculated_;max_precalculated_79,3367
class PrimeTableTest : public TestWithParam< ::std::tuple<bool, int> > {PrimeTableTest92,3832
  HybridPrimeTable* table_;table_104,4211
TEST_P(PrimeTableTest, ReturnsFalseForNonPrimes) {TEST_P107,4243
TEST_P(PrimeTableTest, ReturnsTrueForPrimes) {TEST_P122,4827
TEST_P(PrimeTableTest, CanGetNextPrime) {TEST_P131,5090

test/googletest/googletest/samples/sample4_unittest.cc,40
TEST(Counter, Increment) {TEST37,1651

test/googletest/googletest/samples/sample3_unittest.cc,422
class QueueTestSmpl3 : public testing::Test {QueueTestSmpl367,3170
  static int Double(int n) {Double88,3854
  void MapTester(const Queue<int> * q) {MapTester93,3953
  Queue<int> q0_;q0_111,4583
  Queue<int> q1_;q1_112,4601
  Queue<int> q2_;q2_113,4619
TEST_F(QueueTestSmpl3, DefaultConstructor) {TEST_F120,4754
TEST_F(QueueTestSmpl3, Dequeue) {TEST_F126,4902
TEST_F(QueueTestSmpl3, Map) {TEST_F144,5255

test/googletest/googletest/samples/sample2.cc,139
const char* MyString::CloneCString(const char* a_c_string) {CloneCString37,1735
void MyString::Set(const char* a_c_string) {Set49,2054

test/googletest/build/googletest/Makefile,404
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletestCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletest/buildCMAKE_BINARY_DIR54,1288

test/googletest/build/Makefile,404
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletestCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletest/buildCMAKE_BINARY_DIR54,1288

test/googletest/build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp,12474
# define COMPILER_ID COMPILER_ID13,390
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR15,451
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR16,511
# define COMPILER_ID COMPILER_ID19,622
#  define SIMULATE_ID SIMULATE_ID21,674
#  define SIMULATE_ID SIMULATE_ID24,734
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR27,801
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR28,859
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH30,959
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH32,1028
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK36,1187
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR40,1309
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR41,1362
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR44,1446
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR46,1518
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR49,1602
#  define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH52,1697
# define COMPILER_ID COMPILER_ID56,1790
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR57,1823
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR58,1871
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH60,1961
# define COMPILER_ID COMPILER_ID64,2092
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR65,2127
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR66,2199
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2271
# define COMPILER_ID COMPILER_ID70,2372
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR72,2432
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR73,2485
# define COMPILER_ID COMPILER_ID76,2592
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR78,2650
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR79,2705
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH81,2794
# define COMPILER_ID COMPILER_ID85,2885
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR87,2954
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR88,3018
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,3107
# define COMPILER_ID COMPILER_ID94,3198
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR97,3285
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR98,3339
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH99,3399
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR102,3494
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR103,3547
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH104,3606
# define COMPILER_ID COMPILER_ID108,3698
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3750
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3802
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,3858
# define COMPILER_ID COMPILER_ID115,3939
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR117,4002
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR118,4061
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH119,4125
# define COMPILER_ID COMPILER_ID122,4247
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR124,4299
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR125,4351
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH126,4407
# define COMPILER_ID COMPILER_ID129,4511
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR130,4542
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR131,4597
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH132,4652
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK133,4712
# define COMPILER_ID COMPILER_ID137,4852
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR139,4903
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR140,4955
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH141,5011
# define COMPILER_ID COMPILER_ID144,5144
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR146,5202
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR147,5254
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH148,5310
# define COMPILER_ID COMPILER_ID151,5388
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR152,5415
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR153,5461
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH155,5547
# define COMPILER_ID COMPILER_ID159,5636
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR160,5664
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR161,5716
# define COMPILER_ID COMPILER_ID164,5808
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR166,5878
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR167,5947
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH168,6022
# define COMPILER_ID COMPILER_ID171,6175
# define COMPILER_ID COMPILER_ID174,6230
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR177,6322
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR178,6386
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH179,6454
# define COMPILER_ID COMPILER_ID183,6562
# define COMPILER_ID COMPILER_ID186,6644
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR189,6738
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR190,6801
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH191,6868
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR194,6974
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR195,7036
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH196,7102
# define COMPILER_ID COMPILER_ID201,7238
#  define SIMULATE_ID SIMULATE_ID203,7295
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR205,7332
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR206,7385
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH207,7438
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR210,7544
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR211,7597
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK213,7658
# define COMPILER_ID COMPILER_ID216,7779
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR217,7811
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR218,7880
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH219,7953
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL220,8026
# define COMPILER_ID COMPILER_ID223,8114
#  define SIMULATE_ID SIMULATE_ID225,8166
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR227,8203
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR228,8256
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH229,8309
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR232,8415
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR233,8468
# define COMPILER_ID COMPILER_ID237,8575
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR239,8625
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR241,8679
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR244,8763
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH247,8858
# define COMPILER_ID COMPILER_ID251,8949
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR253,9001
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR254,9053
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH258,9192
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH261,9297
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK265,9400
# define COMPILER_ID COMPILER_ID269,9572
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR272,9676
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR273,9738
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH274,9807
# define COMPILER_ID COMPILER_ID278,9949
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR280,10021
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR281,10079
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH282,10143
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL283,10198
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR285,10475
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR286,10529
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH287,10603
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL288,10656
# define COMPILER_ID COMPILER_ID296,10934
# define COMPILER_ID COMPILER_ID299,10990
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler306,11288
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate308,11375
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto312,11469
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray316,11564
#define STRINGIFY_HELPER(STRINGIFY_HELPER319,11639
#define STRINGIFY(STRINGIFY320,11670
# define PLATFORM_ID PLATFORM_ID324,11814
# define PLATFORM_ID PLATFORM_ID327,11870
# define PLATFORM_ID PLATFORM_ID330,11928
# define PLATFORM_ID PLATFORM_ID333,11983
# define PLATFORM_ID PLATFORM_ID336,12076
# define PLATFORM_ID PLATFORM_ID339,12157
# define PLATFORM_ID PLATFORM_ID342,12236
# define PLATFORM_ID PLATFORM_ID345,12316
# define PLATFORM_ID PLATFORM_ID348,12385
# define PLATFORM_ID PLATFORM_ID351,12511
# define PLATFORM_ID PLATFORM_ID354,12582
# define PLATFORM_ID PLATFORM_ID357,12637
# define PLATFORM_ID PLATFORM_ID360,12728
# define PLATFORM_ID PLATFORM_ID363,12803
# define PLATFORM_ID PLATFORM_ID366,12895
# define PLATFORM_ID PLATFORM_ID369,12972
# define PLATFORM_ID PLATFORM_ID372,13070
# define PLATFORM_ID PLATFORM_ID375,13127
# define PLATFORM_ID PLATFORM_ID378,13184
# define PLATFORM_ID PLATFORM_ID381,13254
# define PLATFORM_ID PLATFORM_ID384,13326
# define PLATFORM_ID PLATFORM_ID387,13416
# define PLATFORM_ID PLATFORM_ID390,13514
# define PLATFORM_ID PLATFORM_ID393,13607
#  define PLATFORM_ID PLATFORM_ID397,13688
#  define PLATFORM_ID PLATFORM_ID400,13743
#  define PLATFORM_ID PLATFORM_ID403,13796
#  define PLATFORM_ID PLATFORM_ID406,13853
#  define PLATFORM_IDPLATFORM_ID409,13918
#  define PLATFORM_ID PLATFORM_ID414,13999
#  define PLATFORM_ID PLATFORM_ID417,14068
# define PLATFORM_IDPLATFORM_ID421,14140
#  define ARCHITECTURE_ID ARCHITECTURE_ID432,14480
#  define ARCHITECTURE_ID ARCHITECTURE_ID435,14558
#  define ARCHITECTURE_ID ARCHITECTURE_ID438,14615
#  define ARCHITECTURE_ID ARCHITECTURE_ID441,14673
#   define ARCHITECTURE_ID ARCHITECTURE_ID445,14749
#   define ARCHITECTURE_ID ARCHITECTURE_ID447,14805
#   define ARCHITECTURE_ID ARCHITECTURE_ID449,14849
#  define ARCHITECTURE_ID ARCHITECTURE_ID453,14935
#  define ARCHITECTURE_ID ARCHITECTURE_ID456,14991
#  define ARCHITECTURE_ID ARCHITECTURE_ID459,15058
#  define ARCHITECTURE_ID ARCHITECTURE_ID464,15144
#  define ARCHITECTURE_ID ARCHITECTURE_ID467,15201
#  define ARCHITECTURE_ID ARCHITECTURE_ID470,15268
#  define ARCHITECTURE_ID ARCHITECTURE_ID475,15396
#  define ARCHITECTURE_ID ARCHITECTURE_ID478,15455
#  define ARCHITECTURE_ID ARCHITECTURE_ID481,15516
#  define ARCHITECTURE_ID ARCHITECTURE_ID484,15579
#  define ARCHITECTURE_ID ARCHITECTURE_ID487,15642
#  define ARCHITECTURE_ID ARCHITECTURE_ID490,15704
#  define ARCHITECTURE_ID ARCHITECTURE_ID493,15764
#  define ARCHITECTURE_ID ARCHITECTURE_ID496,15828
#  define ARCHITECTURE_ID ARCHITECTURE_ID499,15890
#  define ARCHITECTURE_ID ARCHITECTURE_ID502,15958
#  define ARCHITECTURE_ID ARCHITECTURE_ID507,16043
#  define ARCHITECTURE_ID ARCHITECTURE_ID510,16102
#  define ARCHITECTURE_ID ARCHITECTURE_ID513,16159
#  define ARCHITECTURE_ID ARCHITECTURE_ID516,16219
#  define ARCHITECTURE_ID ARCHITECTURE_ID519,16277
#  define ARCHITECTURE_ID ARCHITECTURE_ID522,16344
#  define ARCHITECTURE_IDARCHITECTURE_ID525,16387
#define DEC(DEC529,16471
#define HEX(HEX540,16820
char const info_version[] = {info_version552,17182
char const info_version_internal[] = {info_version_internal570,17680
char const info_simulate_version[] = {info_simulate_version579,18006
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform599,18675
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch600,18743
#      define CXX_STD CXX_STD608,18963
#      define CXX_STD CXX_STD610,19003
#    define CXX_STD CXX_STD613,19052
#  define CXX_STD CXX_STD616,19136
#  define CXX_STD CXX_STD618,19171
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default621,19209
int main(int argc, char* argv[])main637,19514

test/googletest/build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c,12886
# define ID_VOID_MAINID_VOID_MAIN6,98
# define constconst10,197
# define volatilevolatile11,212
# define COMPILER_ID COMPILER_ID19,413
#  define SIMULATE_ID SIMULATE_ID21,465
#  define SIMULATE_ID SIMULATE_ID24,525
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR27,592
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR28,650
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH30,750
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH32,819
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK36,978
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR40,1100
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR41,1153
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR44,1237
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR46,1309
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR49,1393
#  define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH52,1488
# define COMPILER_ID COMPILER_ID56,1581
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR57,1614
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR58,1662
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH60,1752
# define COMPILER_ID COMPILER_ID64,1883
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR65,1918
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR66,1990
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2062
# define COMPILER_ID COMPILER_ID70,2163
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR72,2223
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR73,2276
# define COMPILER_ID COMPILER_ID76,2383
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR78,2441
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR79,2496
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH81,2585
# define COMPILER_ID COMPILER_ID85,2676
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR87,2745
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR88,2809
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,2898
# define COMPILER_ID COMPILER_ID94,2988
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR97,3073
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR98,3126
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH99,3185
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR102,3279
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR103,3331
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH104,3389
# define COMPILER_ID COMPILER_ID108,3479
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3530
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3581
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,3636
# define COMPILER_ID COMPILER_ID115,3714
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR117,3775
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR118,3832
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH119,3894
# define COMPILER_ID COMPILER_ID122,4012
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR124,4062
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR125,4112
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH126,4166
# define COMPILER_ID COMPILER_ID129,4268
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR130,4299
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR131,4354
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH132,4409
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK133,4469
# define COMPILER_ID COMPILER_ID137,4605
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR139,4654
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR140,4704
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH141,4758
# define COMPILER_ID COMPILER_ID144,4885
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR146,4941
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR147,4991
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH148,5045
# define COMPILER_ID COMPILER_ID151,5121
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR152,5148
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR153,5194
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH155,5280
# define COMPILER_ID COMPILER_ID159,5369
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR160,5397
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR161,5449
# define COMPILER_ID COMPILER_ID164,5541
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR166,5611
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR167,5680
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH168,5755
# define COMPILER_ID COMPILER_ID171,5908
# define COMPILER_ID COMPILER_ID174,5963
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR177,6055
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR178,6119
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH179,6187
# define COMPILER_ID COMPILER_ID183,6289
# define COMPILER_ID COMPILER_ID186,6343
# define COMPILER_ID COMPILER_ID189,6404
# define COMPILER_ID COMPILER_ID192,6486
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR195,6580
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR196,6643
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH197,6710
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR200,6816
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR201,6878
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH202,6944
# define COMPILER_ID COMPILER_ID207,7080
#  define SIMULATE_ID SIMULATE_ID209,7137
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR211,7174
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR212,7227
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH213,7280
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR216,7386
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR217,7439
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK219,7500
# define COMPILER_ID COMPILER_ID222,7621
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR223,7653
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR224,7722
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH225,7795
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL226,7868
# define COMPILER_ID COMPILER_ID229,7956
#  define SIMULATE_ID SIMULATE_ID231,8008
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR233,8045
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR234,8098
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH235,8151
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR238,8257
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR239,8310
# define COMPILER_ID COMPILER_ID243,8396
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR244,8423
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR246,8498
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH249,8593
# define COMPILER_ID COMPILER_ID253,8684
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR255,8736
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR256,8788
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH260,8927
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH263,9032
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK267,9135
# define COMPILER_ID COMPILER_ID271,9307
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR274,9411
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR275,9473
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH276,9542
# define COMPILER_ID COMPILER_ID280,9684
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR282,9756
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR283,9814
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH284,9878
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL285,9933
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR287,10210
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR288,10264
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH289,10338
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL290,10391
# define COMPILER_ID COMPILER_ID294,10514
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR296,10577
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR297,10636
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH298,10695
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR301,10780
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR302,10827
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH303,10878
# define COMPILER_ID COMPILER_ID311,11146
# define COMPILER_ID COMPILER_ID314,11202
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler321,11500
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate323,11587
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto327,11681
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray331,11776
#define STRINGIFY_HELPER(STRINGIFY_HELPER334,11851
#define STRINGIFY(STRINGIFY335,11882
# define PLATFORM_ID PLATFORM_ID339,12026
# define PLATFORM_ID PLATFORM_ID342,12082
# define PLATFORM_ID PLATFORM_ID345,12140
# define PLATFORM_ID PLATFORM_ID348,12195
# define PLATFORM_ID PLATFORM_ID351,12288
# define PLATFORM_ID PLATFORM_ID354,12369
# define PLATFORM_ID PLATFORM_ID357,12448
# define PLATFORM_ID PLATFORM_ID360,12528
# define PLATFORM_ID PLATFORM_ID363,12597
# define PLATFORM_ID PLATFORM_ID366,12723
# define PLATFORM_ID PLATFORM_ID369,12794
# define PLATFORM_ID PLATFORM_ID372,12849
# define PLATFORM_ID PLATFORM_ID375,12940
# define PLATFORM_ID PLATFORM_ID378,13015
# define PLATFORM_ID PLATFORM_ID381,13107
# define PLATFORM_ID PLATFORM_ID384,13184
# define PLATFORM_ID PLATFORM_ID387,13282
# define PLATFORM_ID PLATFORM_ID390,13339
# define PLATFORM_ID PLATFORM_ID393,13396
# define PLATFORM_ID PLATFORM_ID396,13466
# define PLATFORM_ID PLATFORM_ID399,13538
# define PLATFORM_ID PLATFORM_ID402,13628
# define PLATFORM_ID PLATFORM_ID405,13726
# define PLATFORM_ID PLATFORM_ID408,13819
#  define PLATFORM_ID PLATFORM_ID412,13900
#  define PLATFORM_ID PLATFORM_ID415,13955
#  define PLATFORM_ID PLATFORM_ID418,14008
#  define PLATFORM_ID PLATFORM_ID421,14065
#  define PLATFORM_IDPLATFORM_ID424,14130
#  define PLATFORM_ID PLATFORM_ID429,14211
#  define PLATFORM_ID PLATFORM_ID432,14280
# define PLATFORM_IDPLATFORM_ID436,14352
#  define ARCHITECTURE_ID ARCHITECTURE_ID447,14692
#  define ARCHITECTURE_ID ARCHITECTURE_ID450,14770
#  define ARCHITECTURE_ID ARCHITECTURE_ID453,14827
#  define ARCHITECTURE_ID ARCHITECTURE_ID456,14885
#   define ARCHITECTURE_ID ARCHITECTURE_ID460,14961
#   define ARCHITECTURE_ID ARCHITECTURE_ID462,15017
#   define ARCHITECTURE_ID ARCHITECTURE_ID464,15061
#  define ARCHITECTURE_ID ARCHITECTURE_ID468,15147
#  define ARCHITECTURE_ID ARCHITECTURE_ID471,15203
#  define ARCHITECTURE_ID ARCHITECTURE_ID474,15270
#  define ARCHITECTURE_ID ARCHITECTURE_ID479,15356
#  define ARCHITECTURE_ID ARCHITECTURE_ID482,15413
#  define ARCHITECTURE_ID ARCHITECTURE_ID485,15480
#  define ARCHITECTURE_ID ARCHITECTURE_ID490,15608
#  define ARCHITECTURE_ID ARCHITECTURE_ID493,15667
#  define ARCHITECTURE_ID ARCHITECTURE_ID496,15728
#  define ARCHITECTURE_ID ARCHITECTURE_ID499,15791
#  define ARCHITECTURE_ID ARCHITECTURE_ID502,15854
#  define ARCHITECTURE_ID ARCHITECTURE_ID505,15916
#  define ARCHITECTURE_ID ARCHITECTURE_ID508,15976
#  define ARCHITECTURE_ID ARCHITECTURE_ID511,16040
#  define ARCHITECTURE_ID ARCHITECTURE_ID514,16102
#  define ARCHITECTURE_ID ARCHITECTURE_ID517,16170
#  define ARCHITECTURE_ID ARCHITECTURE_ID522,16255
#  define ARCHITECTURE_ID ARCHITECTURE_ID525,16314
#  define ARCHITECTURE_ID ARCHITECTURE_ID528,16371
#  define ARCHITECTURE_ID ARCHITECTURE_ID531,16431
#  define ARCHITECTURE_ID ARCHITECTURE_ID534,16489
#  define ARCHITECTURE_ID ARCHITECTURE_ID537,16556
#  define ARCHITECTURE_IDARCHITECTURE_ID540,16599
#define DEC(DEC544,16683
#define HEX(HEX555,17032
char const info_version[] = {info_version567,17394
char const info_version_internal[] = {info_version_internal585,17892
char const info_simulate_version[] = {info_simulate_version594,18218
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform614,18887
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch615,18955
#  define C_DIALECT C_DIALECT623,19143
#  define C_DIALECTC_DIALECT625,19175
# define C_DIALECT C_DIALECT628,19237
# define C_DIALECT C_DIALECT630,19295
# define C_DIALECT C_DIALECT632,19325
const char* info_language_dialect_default =info_language_dialect_default634,19356
void main() {}main640,19548
int main(argc, argv) int argc; char *argv[];main643,19597

test/googletest/build/googlemock/Makefile,404
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletestCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/test/googletest/buildCMAKE_BINARY_DIR54,1288

test/googletest/ci/macos-presubmit.sh,0

test/googletest/ci/linux-presubmit.sh,0

test/googletest/googlemock/src/gmock-matchers.cc,1491
namespace testing {testing43,1839
namespace internal {internal44,1859
GTEST_API_ std::string FormatMatcherDescription(bool negation,FormatMatcherDescription51,2204
class MaxBipartiteMatchState {MaxBipartiteMatchState121,5728
  explicit MaxBipartiteMatchState(const MatchMatrix& graph)MaxBipartiteMatchState123,5768
  ElementMatcherPairs Compute() {Compute129,6017
  static const size_t kUnused = static_cast<size_t>(-1);kUnused163,7661
  bool TryAugment(size_t ilhs, ::std::vector<char>* seen) {TryAugment181,8560
  const MatchMatrix* graph_;  // not ownedgraph_207,9574
  ::std::vector<size_t> left_;left_219,10343
  ::std::vector<size_t> right_;right_220,10374
const size_t MaxBipartiteMatchState::kUnused;kUnused223,10410
GTEST_API_ ElementMatcherPairs FindMaxBipartiteMatching(const MatchMatrix& g) {FindMaxBipartiteMatching225,10457
static void LogElementMatcherPairVec(const ElementMatcherPairs& pairs,LogElementMatcherPairVec229,10586
bool MatchMatrix::NextGraph() {NextGraph244,11049
void MatchMatrix::Randomize() {Randomize258,11339
std::string MatchMatrix::DebugString() const {DebugString267,11592
void UnorderedElementsAreMatcherImplBase::DescribeToImpl(DescribeToImpl280,11866
void UnorderedElementsAreMatcherImplBase::DescribeNegationToImpl(DescribeNegationToImpl321,13155
bool UnorderedElementsAreMatcherImplBase::VerifyMatchMatrix(VerifyMatchMatrix367,14786
bool UnorderedElementsAreMatcherImplBase::FindPairing(FindPairing417,16436

test/googletest/googlemock/src/gmock-spec-builders.cc,4935
namespace testing {testing64,2264
namespace internal {internal65,2284
GTEST_API_ void LogWithLocation(testing::internal::LogSeverity severity,LogWithLocation72,2524
ExpectationBase::ExpectationBase(const char* a_file, int a_line,ExpectationBase82,2904
ExpectationBase::~ExpectationBase() {}~ExpectationBase98,3450
void ExpectationBase::SpecifyCardinality(const Cardinality& a_cardinality) {SpecifyCardinality102,3612
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_109,3855
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_136,4722
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_156,5467
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_187,6595
    GTEST_LOCK_EXCLUDED_(mutex_) {GTEST_LOCK_EXCLUDED_210,7509
void ExpectationBase::UntypedTimes(const Cardinality& a_cardinality) {UntypedTimes261,9118
GTEST_API_ ThreadLocal<Sequence*> g_gmock_implicit_sequence;g_gmock_implicit_sequence279,9791
void ReportUninterestingCall(CallReaction reaction, const std::string& msg) {ReportUninterestingCall283,9958
UntypedFunctionMockerBase::UntypedFunctionMockerBase()UntypedFunctionMockerBase308,10875
UntypedFunctionMockerBase::~UntypedFunctionMockerBase() {}~UntypedFunctionMockerBase311,10970
    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_318,11308
    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_331,11749
    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_342,12167
    GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_359,12773
    void* const untyped_args) GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_377,13421
Expectation UntypedFunctionMockerBase::GetHandleOf(ExpectationBase* exp) {GetHandleOf505,18097
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_526,18890
CallReaction intToCallReaction(int mock_behavior) {intToCallReaction570,20772
typedef std::set<internal::UntypedFunctionMockerBase*> FunctionMockers;FunctionMockers583,21024
struct MockObjectState {MockObjectState588,21252
  MockObjectState()MockObjectState589,21277
  const char* first_used_file;first_used_file594,21471
  int first_used_line;first_used_line595,21502
  ::std::string first_used_test_suite;first_used_test_suite596,21525
  ::std::string first_used_test;first_used_test597,21564
  bool leakable;  // true if and only if it's OK to leak the object.leakable598,21597
  FunctionMockers function_mockers;  // All registered methods of the object.function_mockers599,21666
class MockObjectRegistry {MockObjectRegistry606,22018
  typedef std::map<const void*, MockObjectState> StateMap;StateMap609,22120
  ~MockObjectRegistry() {~MockObjectRegistry615,22444
  StateMap& states() { return states_; }states659,24441
  StateMap states_;states_662,24493
MockObjectRegistry g_mock_object_registry;g_mock_object_registry666,24548
std::map<const void*, internal::CallReaction> g_uninteresting_call_reaction;g_uninteresting_call_reaction670,24726
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_676,25046
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_686,25359
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_693,25626
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_700,25877
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_707,26175
        GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_716,26521
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_727,26976
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_736,27380
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_745,27752
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(internal::g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_755,28193
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_780,29025
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_784,29190
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_788,29358
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_795,29651
    GTEST_LOCK_EXCLUDED_(internal::g_gmock_mutex) {GTEST_LOCK_EXCLUDED_805,30159
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(internal::g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_825,30985
    GTEST_EXCLUSIVE_LOCK_REQUIRED_(internal::g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_843,31628
Expectation::Expectation() {}Expectation864,32304
Expectation::Expectation(Expectation866,32335
Expectation::~Expectation() {}~Expectation870,32485
void Sequence::AddExpectation(const Expectation& expectation) const {AddExpectation873,32555
InSequence::InSequence() {InSequence884,32928
InSequence::~InSequence() {~InSequence895,33244

test/googletest/googlemock/src/gmock-cardinalities.cc,977
namespace testing {testing44,1862
class BetweenCardinalityImpl : public CardinalityInterface {BetweenCardinalityImpl49,1941
  BetweenCardinalityImpl(int min, int max)BetweenCardinalityImpl51,2011
  void DescribeTo(::std::ostream* os) const override;override84,3193
  const int min_;min_87,3258
  const int max_;max_88,3276
inline std::string FormatTimes(int n) {FormatTimes94,3404
void BetweenCardinalityImpl::DescribeTo(::std::ostream* os) const {DescribeTo107,3679
void Cardinality::DescribeActualCallCountTo(int actual_call_count,DescribeActualCallCountTo129,4315
GTEST_API_ Cardinality AtLeast(int n) { return Between(n, INT_MAX); }AtLeast139,4635
GTEST_API_ Cardinality AtMost(int n) { return Between(0, n); }AtMost142,4760
GTEST_API_ Cardinality AnyNumber() { return AtLeast(0); }AnyNumber145,4882
GTEST_API_ Cardinality Between(int min, int max) {Between148,5005
GTEST_API_ Cardinality Exactly(int n) { return Between(n, n); }Exactly153,5173

test/googletest/googlemock/src/gmock_main.cc,138
void setup() {setup39,1709
void loop() { RUN_ALL_TESTS(); }loop45,1956
GTEST_API_ int _tmain(int argc, TCHAR** argv) {_tmain61,2547

test/googletest/googlemock/src/gmock.cc,846
namespace testing {testing52,2502
namespace internal {internal53,2522
static const char* ParseGoogleMockFlagValue(const char* str,ParseGoogleMockFlagValue60,2780
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag93,4020
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag112,4726
static bool ParseGoogleMockFlag(const char* str, const char* flag_name,ParseGoogleMockFlag125,5135
void InitGoogleMockImpl(int* argc, CharType** argv) {InitGoogleMockImpl143,5781
#define GMOCK_INTERNAL_PARSE_FLAG(GMOCK_INTERNAL_PARSE_FLAG156,6245
GTEST_API_ void InitGoogleMock(int* argc, char** argv) {InitGoogleMock201,7829
GTEST_API_ void InitGoogleMock(int* argc, wchar_t** argv) {InitGoogleMock207,8021
GTEST_API_ void InitGoogleMock() {InitGoogleMock213,8229

test/googletest/googlemock/src/gmock-all.cc,0

test/googletest/googlemock/src/gmock-internal-utils.cc,1319
namespace testing {testing52,2066
namespace internal {internal53,2086
GTEST_API_ std::string JoinAsTuple(const Strings& fields) {JoinAsTuple57,2201
GTEST_API_ std::string ConvertIdentifierNameToWords(const char* id_name) {ConvertIdentifierNameToWords78,2818
class GoogleTestFailureReporter : public FailureReporterInterface {GoogleTestFailureReporter100,3623
GTEST_API_ FailureReporterInterface* GetFailureReporter() {GetFailureReporter118,4237
GTEST_API_ bool LogIsVisible(LogSeverity severity) {LogIsVisible134,4933
GTEST_API_ void Log(LogSeverity severity, const std::string& message,Log155,5799
GTEST_API_ WithoutMatchers GetWithoutMatchers() { return WithoutMatchers(); }GetWithoutMatchers193,7080
GTEST_API_ void IllegalDoDefault(const char* file, int line) {IllegalDoDefault195,7159
constexpr char UnBase64Impl(char c, const char* const base64, char carry) {UnBase64Impl205,7579
constexpr std::array<char, 256> UnBase64Impl(IndexSequence<I...>,UnBase64Impl212,7827
constexpr std::array<char, 256> UnBase64(const char* const base64) {UnBase64217,8032
static constexpr char kBase64[] =kBase64221,8161
static constexpr std::array<char, 256> kUnBase64 = UnBase64(kBase64);kUnBase64223,8267
bool Base64Unescape(const std::string& encoded, std::string* decoded) {Base64Unescape225,8338

test/googletest/googlemock/test/gmock_link_test.h,3635
#define GOOGLEMOCK_TEST_GMOCK_LINK_TEST_H_GOOGLEMOCK_TEST_GMOCK_LINK_TEST_H_116,4011
class Interface {Interface196,5772
  virtual ~Interface() {}~Interface198,5799
class Mock: public Interface {Mock210,6277
  Mock() {}Mock212,6317
class InvokeHelper {InvokeHelper228,6861
  static void StaticVoidFromVoid() {}StaticVoidFromVoid230,6891
  void VoidFromVoid() {}VoidFromVoid231,6929
  static void StaticVoidFromString(char* /* str */) {}StaticVoidFromString232,6954
  void VoidFromString(char* /* str */) {}VoidFromString233,7009
  static int StaticIntFromString(char* /* str */) { return 1; }StaticIntFromString234,7051
  static bool StaticBoolFromString(const char* /* str */) { return true; }StaticBoolFromString235,7115
class FieldHelper {FieldHelper238,7194
  explicit FieldHelper(int a_field) : field_(a_field) {}FieldHelper240,7223
  int field() const { return field_; }field241,7280
  int field_;  // NOLINT -- need external access to field_ to testfield_242,7319
TEST(LinkTest, TestReturnVoid) {TEST247,7484
TEST(LinkTest, TestReturn) {TEST255,7668
TEST(LinkTest, TestReturnNull) {TEST264,7876
TEST(LinkTest, TestReturnRef) {TEST272,8063
TEST(LinkTest, TestAssign) {TEST281,8268
TEST(LinkTest, TestSetArgPointee) {TEST290,8480
TEST(LinkTest, TestSetArrayArgument) {TEST299,8703
TEST(LinkTest, TestSetErrnoAndReturn) {TEST312,9060
TEST(LinkTest, TestInvoke) {TEST324,9390
TEST(LinkTest, TestInvokeWithoutArgs) {TEST336,9766
TEST(LinkTest, TestInvokeArgument) {TEST349,10202
TEST(LinkTest, TestWithArg) {TEST358,10445
TEST(LinkTest, TestWithArgs) {TEST367,10682
TEST(LinkTest, TestWithoutArgs) {TEST376,10924
TEST(LinkTest, TestDoAll) {TEST384,11121
TEST(LinkTest, TestDoDefault) {TEST394,11353
TEST(LinkTest, TestIgnoreResult) {TEST404,11618
TEST(LinkTest, TestThrow) {TEST413,11844
ACTION(Return1) { return 1; }ACTION433,12486
TEST(LinkTest, TestActionMacro) {TEST436,12519
ACTION_P(ReturnArgument, ret_value) { return ret_value; }ACTION_P445,12734
TEST(LinkTest, TestActionPMacro) {TEST448,12795
ACTION_P2(ReturnEqualsEitherOf, first, second) {ACTION_P2457,13021
TEST(LinkTest, TestActionP2Macro) {TEST466,13163
TEST(LinkTest, TestMatcherAnything) {TEST476,13392
TEST(LinkTest, TestMatcherA) {TEST483,13546
TEST(LinkTest, TestMatchersEq) {TEST490,13724
TEST(LinkTest, TestMatchersRelations) {TEST500,14010
TEST(LinkTest, TestMatcherNotNull) {TEST511,14442
TEST(LinkTest, TestMatcherIsNull) {TEST518,14608
TEST(LinkTest, TestMatcherRef) {TEST525,14769
TEST(LinkTest, TestMatcherTypedEq) {TEST533,14942
TEST(LinkTest, TestMatchersFloatingPoint) {TEST542,15190
TEST(LinkTest, TestMatcherContainsRegex) {TEST554,15624
TEST(LinkTest, TestMatcherMatchesRegex) {TEST561,15812
TEST(LinkTest, TestMatchersSubstrings) {TEST568,16022
TEST(LinkTest, TestMatchersStringEquality) {TEST577,16376
TEST(LinkTest, TestMatcherElementsAre) {TEST586,16770
TEST(LinkTest, TestMatcherElementsAreArray) {TEST593,16960
TEST(LinkTest, TestMatcherIsSubsetOf) {TEST601,17180
TEST(LinkTest, TestMatcherIsSupersetOf) {TEST609,17388
TEST(LinkTest, TestMatcherContainerEq) {TEST617,17599
TEST(LinkTest, TestMatcherField) {TEST625,17795
TEST(LinkTest, TestMatcherProperty) {TEST636,18117
TEST(LinkTest, TestMatcherResultOf) {TEST647,18446
TEST(LinkTest, TestMatcherPointee) {TEST653,18642
TEST(LinkTest, TestMatcherTruly) {TEST661,18805
TEST(LinkTest, TestMatcherAllOf) {TEST667,18992
TEST(LinkTest, TestMatcherAnyOf) {TEST673,19138
TEST(LinkTest, TestMatcherNot) {TEST679,19282
TEST(LinkTest, TestMatcherCast) {TEST685,19430

test/googletest/googlemock/test/gmock_output_test_.cc,1887
class MockFoo {MockFoo57,2105
  MockFoo() {}MockFoo59,2130
class GMockOutputTest : public testing::Test {GMockOutputTest69,2355
  NaggyMock<MockFoo> foo_;foo_71,2414
TEST_F(GMockOutputTest, ExpectedCall) {TEST_F74,2445
TEST_F(GMockOutputTest, ExpectedCallToVoidFunction) {TEST_F83,2633
TEST_F(GMockOutputTest, ExplicitActionsRunOut) {TEST_F92,2835
TEST_F(GMockOutputTest, UnexpectedCall) {TEST_F100,3050
TEST_F(GMockOutputTest, UnexpectedCallToVoidFunction) {TEST_F107,3205
TEST_F(GMockOutputTest, ExcessiveCall) {TEST_F114,3374
TEST_F(GMockOutputTest, ExcessiveCallToVoidFunction) {TEST_F121,3527
TEST_F(GMockOutputTest, UninterestingCall) {TEST_F128,3694
TEST_F(GMockOutputTest, UninterestingCallToVoidFunction) {TEST_F132,3784
TEST_F(GMockOutputTest, RetiredExpectation) {TEST_F136,3888
TEST_F(GMockOutputTest, UnsatisfiedPrerequisite) {TEST_F146,4124
TEST_F(GMockOutputTest, UnsatisfiedPrerequisites) {TEST_F160,4441
TEST_F(GMockOutputTest, UnsatisfiedWith) {TEST_F176,4818
TEST_F(GMockOutputTest, UnsatisfiedExpectation) {TEST_F180,4908
TEST_F(GMockOutputTest, MismatchArguments) {TEST_F188,5065
TEST_F(GMockOutputTest, MismatchWith) {TEST_F196,5259
TEST_F(GMockOutputTest, MismatchArgumentsAndWith) {TEST_F204,5420
TEST_F(GMockOutputTest, UnexpectedCallWithDefaultAction) {TEST_F212,5616
TEST_F(GMockOutputTest, ExcessiveCallWithDefaultAction) {TEST_F224,6054
TEST_F(GMockOutputTest, UninterestingCallWithDefaultAction) {TEST_F239,6561
TEST_F(GMockOutputTest, ExplicitActionsRunOutWithDefaultAction) {TEST_F249,6937
TEST_F(GMockOutputTest, CatchesLeakedMocks) {TEST_F260,7257
MATCHER_P2(IsPair, first, second, "") {MATCHER_P2277,7704
TEST_F(GMockOutputTest, PrintsMatcher) {TEST_F281,7810
void TestCatchesLeakedMocksInAdHocTests() {TestCatchesLeakedMocksInAdHocTests286,7964
int main(int argc, char **argv) {main296,8161

test/googletest/googlemock/test/gmock_all_test.cc,0

test/googletest/googlemock/test/gmock_link_test.cc,35
#define LinkTest LinkTest37,1814

test/googletest/googlemock/test/gmock-pp_test.cc,838
#define GMOCK_TEST_REPLACE_comma_WITH_COMMA_I_comma GMOCK_TEST_REPLACE_comma_WITH_COMMA_I_comma4,112
#define GMOCK_TEST_REPLACE_comma_WITH_COMMA(GMOCK_TEST_REPLACE_comma_WITH_COMMA5,166
namespace testing {testing9,296
namespace internal {internal10,316
namespace gmockpp {gmockpp11,337
struct Test {Test55,2318
  static constexpr int kArgs = sizeof...(Args);kArgs56,2332
#define GMOCK_PP_INTERNAL_TYPE_TEST(GMOCK_PP_INTERNAL_TYPE_TEST58,2383
#define GMOCK_PP_INTERNAL_VAR_TEST_1(GMOCK_PP_INTERNAL_VAR_TEST_163,2642
#define GMOCK_PP_INTERNAL_VAR_TEST_2(GMOCK_PP_INTERNAL_VAR_TEST_264,2685
#define GMOCK_PP_INTERNAL_VAR_TEST_3(GMOCK_PP_INTERNAL_VAR_TEST_365,2732
#define GMOCK_PP_INTERNAL_VAR_TEST(GMOCK_PP_INTERNAL_VAR_TEST67,2784
#define GMOCK_PP_INTERNAL_IS_EMPTY_TEST_1GMOCK_PP_INTERNAL_IS_EMPTY_TEST_174,3135

test/googletest/googlemock/test/gmock_ex_test.cc,259
class NonDefaultConstructible {NonDefaultConstructible44,1840
  explicit NonDefaultConstructible(int /* dummy */) {}NonDefaultConstructible46,1881
class MockFoo {MockFoo49,1940
TEST(DefaultValueTest, ThrowsRuntimeErrorWhenNoDefaultValue) {TEST56,2165

test/googletest/googlemock/test/gmock_output_test.py,1116
GENGOLDEN_FLAG = '--gengolden'GENGOLDEN_FLAG50,1993
PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_output_test_')PROGRAM_PATH52,2025
GOLDEN_NAME = 'gmock_output_test_golden.txt'GOLDEN_NAME54,2181
GOLDEN_PATH = os.path.join(gmock_test_utils.GetSourceDir(), GOLDEN_NAME)GOLDEN_PATH55,2226
def ToUnixLineEnding(s):ToUnixLineEnding58,2301
def RemoveReportHeaderAndFooter(output):RemoveReportHeaderAndFooter64,2454
def RemoveLocations(output):RemoveLocations75,2869
def NormalizeErrorMarker(output):NormalizeErrorMarker91,3302
def RemoveMemoryAddresses(output):RemoveMemoryAddresses97,3470
def RemoveTestNamesOfLeakedMocks(output):RemoveTestNamesOfLeakedMocks103,3604
def GetLeakyTests(output):GetLeakyTests109,3778
def GetNormalizedOutputAndLeakyTests(output):GetNormalizedOutputAndLeakyTests118,4095
def GetShellCommandOutput(cmd):GetShellCommandOutput137,4613
def GetNormalizedCommandOutputAndLeakyTests(cmd):GetNormalizedCommandOutputAndLeakyTests143,4796
class GMockOutputTest(gmock_test_utils.TestCase):GMockOutputTest155,5132
  def testOutput(self):testOutput157,5183

test/googletest/googlemock/test/gmock_leak_test_.cc,426
class FooInterface {FooInterface42,1794
  virtual ~FooInterface() {}~FooInterface44,1824
class MockFoo : public FooInterface {MockFoo48,1886
  MockFoo() {}MockFoo50,1933
TEST(LeakTest, LeakedMockWithExpectCallCausesFailureWhenLeakCheckingIsEnabled) {TEST58,2040
TEST(LeakTest, LeakedMockWithOnCallCausesFailureWhenLeakCheckingIsEnabled) {TEST71,2408
TEST(LeakTest, CatchesMultipleLeakedMockObjects) {TEST83,2775

test/googletest/googlemock/test/gmock-matchers_test.cc,62615
namespace testing {testing73,2490
namespace gmock_matchers_test {gmock_matchers_test74,2510
struct ContainerHelper {ContainerHelper106,3616
std::vector<std::unique_ptr<int>> MakeUniquePtrs(const std::vector<int>& ints) {MakeUniquePtrs110,3708
class GreaterThanMatcher : public MatcherInterface<T> {GreaterThanMatcher118,3980
  explicit GreaterThanMatcher(T rhs) : rhs_(rhs) {}GreaterThanMatcher120,4045
  const T rhs_;rhs_137,4559
Matcher<T> GreaterThan(T n) {GreaterThan141,4601
std::string OfType(const std::string& type_name) {OfType145,4686
std::string Describe(const Matcher<T>& m) {Describe155,4934
std::string DescribeNegation(const Matcher<T>& m) {DescribeNegation161,5100
std::string Explain(const MatcherType& m, const Value& x) {Explain167,5299
TEST(MonotonicMatcherTest, IsPrintable) {TEST173,5464
TEST(MatchResultListenerTest, StreamingWorks) {TEST179,5585
TEST(MatchResultListenerTest, CanAccessUnderlyingStream) {TEST195,5968
TEST(MatchResultListenerTest, IsInterestedWorks) {TEST202,6238
class EvenMatcherImpl : public MatcherInterface<int> {EvenMatcherImpl212,6619
TEST(MatcherInterfaceTest, CanBeImplementedUsingPublishedAPI) {TEST227,7121
class NewEvenMatcherImpl : public MatcherInterface<int> {NewEvenMatcherImpl233,7279
TEST(MatcherInterfaceTest, CanBeImplementedUsingNewAPI) {TEST250,7837
TEST(MatcherTest, CanBeDefaultConstructed) {TEST259,8146
TEST(MatcherTest, CanBeConstructedFromMatcherInterface) {TEST264,8288
TEST(MatcherTest, CanBeImplicitlyConstructedFromValue) {TEST272,8546
TEST(MatcherTest, CanBeImplicitlyConstructedFromNULL) {TEST279,8743
struct Undefined {Undefined288,9070
  static const int kInt = 1;kInt290,9117
TEST(MatcherTest, CanBeConstructedFromUndefinedVariable) {TEST293,9150
TEST(MatcherTest, CanAcceptAbstractClass) { Matcher<const Undefined&> m = _; }TEST300,9380
TEST(MatcherTest, IsCopyable) {TEST303,9497
TEST(MatcherTest, CanDescribeItself) {TEST317,9870
TEST(MatcherTest, MatchAndExplain) {TEST323,10043
TEST(StringMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {TEST336,10533
TEST(StringMatcherTest, CanBeImplicitlyConstructedFromString) {TEST348,10943
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromCStringLiteral) {TEST361,11407
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromString) {TEST373,11848
TEST(StringViewMatcherTest, CanBeImplicitlyConstructedFromStringView) {TEST385,12306
TEST(StringMatcherTest,TEST398,12864
TEST(MakeMatcherTest, ConstructsMatcherFromMatcherInterface) {TEST413,13372
const int g_bar = 1;g_bar420,13668
class ReferencesBarOrIsZeroImpl {ReferencesBarOrIsZeroImpl421,13689
  bool MatchAndExplain(const T& x,MatchAndExplain424,13756
  void DescribeTo(ostream* os) const { *os << "g_bar or zero"; }DescribeTo430,13922
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo432,13988
PolymorphicMatcher<ReferencesBarOrIsZeroImpl> ReferencesBarOrIsZero() {ReferencesBarOrIsZero439,14220
TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingOldAPI) {TEST443,14357
class PolymorphicIsEvenImpl {PolymorphicIsEvenImpl461,15033
  void DescribeTo(ostream* os) const { *os << "is even"; }DescribeTo463,15072
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo465,15132
  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {MatchAndExplain470,15229
PolymorphicMatcher<PolymorphicIsEvenImpl> PolymorphicIsEven() {PolymorphicIsEven482,15607
TEST(MakePolymorphicMatcherTest, ConstructsMatcherUsingNewAPI) {TEST486,15732
TEST(MatcherCastTest, FromPolymorphicMatcher) {TEST511,16531
class IntValue {IntValue518,16743
  explicit IntValue(int a_value) : value_(a_value) {}IntValue522,16850
  int value() const { return value_; }value524,16905
  int value_;value_526,16954
bool IsPositiveIntValue(const IntValue& foo) {IsPositiveIntValue530,17030
TEST(MatcherCastTest, FromCompatibleType) {TEST536,17212
TEST(MatcherCastTest, FromConstReferenceToNonReference) {TEST552,17775
TEST(MatcherCastTest, FromReferenceToNonReference) {TEST560,18036
TEST(MatcherCastTest, FromNonReferenceToConstReference) {TEST568,18292
TEST(MatcherCastTest, FromNonReferenceToReference) {TEST576,18560
TEST(MatcherCastTest, FromSameType) {TEST586,18832
TEST(MatcherCastTest, FromAValue) {TEST595,19113
TEST(MatcherCastTest, FromAnImplicitlyConvertibleValue) {TEST603,19383
struct NonImplicitlyConstructibleTypeWithOperatorEq {NonImplicitlyConstructibleTypeWithOperatorEq610,19594
  friend bool operator==(operator ==611,19648
  friend bool operator==(operator ==616,19790
TEST(MatcherCastTest, NonImplicitlyConstructibleTypeWithOperatorEq) {TEST626,20144
namespace convertible_from_any {convertible_from_any657,21628
struct ConvertibleFromAny {ConvertibleFromAny659,21702
  ConvertibleFromAny(int a_value) : value(a_value) {}ConvertibleFromAny660,21730
  ConvertibleFromAny(const T& /*a_value*/) : value(-1) {ConvertibleFromAny662,21808
  int value;value665,21923
bool operator==(const ConvertibleFromAny& a, const ConvertibleFromAny& b) {operator ==668,21940
ostream& operator<<(ostream& os, const ConvertibleFromAny& a) {operator <<672,22048
TEST(MatcherCastTest, ConversionConstructorIsUsed) {TEST676,22139
TEST(MatcherCastTest, FromConvertibleFromAny) {TEST682,22364
struct IntReferenceWrapper {IntReferenceWrapper692,22681
  IntReferenceWrapper(const int& a_value) : value(&a_value) {}IntReferenceWrapper693,22710
  const int* value;value694,22773
bool operator==(const IntReferenceWrapper& a, const IntReferenceWrapper& b) {operator ==697,22797
TEST(MatcherCastTest, ValueIsNotCopied) {TEST701,22907
class Base {Base708,23147
  virtual ~Base() {}~Base710,23169
  Base() {}Base711,23190
class Derived : public Base {Derived716,23257
  Derived() : Base() {}Derived718,23296
  int i;i719,23320
class OtherDerived : public Base {};OtherDerived722,23333
TEST(SafeMatcherCastTest, FromPolymorphicMatcher) {TEST725,23446
TEST(SafeMatcherCastTest, FromLosslesslyConvertibleArithmeticType) {TEST734,23765
TEST(SafeMatcherCastTest, FromBaseClass) {TEST747,24278
TEST(SafeMatcherCastTest, FromConstReferenceToReference) {TEST761,24714
TEST(SafeMatcherCastTest, FromNonReferenceToConstReference) {TEST771,25017
TEST(SafeMatcherCastTest, FromNonReferenceToReference) {TEST780,25406
TEST(SafeMatcherCastTest, FromSameType) {TEST790,25690
namespace convertible_from_any {convertible_from_any799,25892
TEST(SafeMatcherCastTest, ConversionConstructorIsUsed) {TEST800,25925
TEST(SafeMatcherCastTest, FromConvertibleFromAny) {TEST806,26158
TEST(SafeMatcherCastTest, ValueIsNotCopied) {TEST816,26483
TEST(ExpectThat, TakesLiterals) {TEST823,26731
TEST(ExpectThat, TakesFunctions) {TEST829,26848
TEST(ATest, MatchesAnyValue) {TEST839,27089
TEST(ATest, WorksForDerivedClass) {TEST853,27430
TEST(ATest, CanDescribeSelf) {TEST863,27724
TEST(AnTest, MatchesAnyValue) {TEST868,27858
TEST(AnTest, CanDescribeSelf) {TEST883,28243
TEST(UnderscoreTest, MatchesAnyValue) {TEST889,28420
TEST(UnderscoreTest, CanDescribeSelf) {TEST904,28817
TEST(EqTest, MatchesEqualValue) {TEST910,28973
class Unprintable {Unprintable922,29270
  Unprintable() : c_('a') {}Unprintable924,29299
  bool operator==(const Unprintable& /* rhs */) const { return true; }operator ==926,29329
  char dummy_c() { return c_; }dummy_c928,29454
  char c_;c_930,29496
TEST(EqTest, CanDescribeSelf) {TEST933,29511
TEST(EqTest, IsPolymorphic) {TEST940,29763
TEST(TypedEqTest, ChecksEqualityForGivenType) {TEST951,30051
TEST(TypedEqTest, CanDescribeSelf) {TEST962,30359
struct Type {Type972,30763
  static bool IsTypeOf(const T& /* v */) { return true; }IsTypeOf973,30777
TEST(TypedEqTest, HasSpecifiedType) {TEST979,30895
TEST(GeTest, ImplementsGreaterThanOrEqual) {TEST986,31144
TEST(GeTest, CanDescribeSelf) {TEST994,31358
TEST(GtTest, ImplementsGreaterThan) {TEST1000,31498
TEST(GtTest, CanDescribeSelf) {TEST1008,31715
TEST(LeTest, ImplementsLessThanOrEqual) {TEST1014,31855
TEST(LeTest, CanDescribeSelf) {TEST1022,32074
TEST(LtTest, ImplementsLessThan) {TEST1028,32214
TEST(LtTest, CanDescribeSelf) {TEST1036,32463
TEST(NeTest, ImplementsNotEqual) {TEST1042,32603
TEST(NeTest, CanDescribeSelf) {TEST1050,32807
class MoveOnly {MoveOnly1055,32914
  explicit MoveOnly(int i) : i_(i) {}MoveOnly1057,32940
  bool operator==(const MoveOnly& other) const { return i_ == other.i_; }operator ==1063,33145
  bool operator!=(const MoveOnly& other) const { return i_ != other.i_; }operator !=1064,33219
  bool operator<(const MoveOnly& other) const { return i_ < other.i_; }operator <1065,33293
  bool operator<=(const MoveOnly& other) const { return i_ <= other.i_; }operator <=1066,33365
  bool operator>(const MoveOnly& other) const { return i_ > other.i_; }operator >1067,33439
  bool operator>=(const MoveOnly& other) const { return i_ >= other.i_; }operator >=1068,33511
  int i_;i_1071,33596
struct MoveHelper {MoveHelper1074,33610
TEST(ComparisonBaseTest, DISABLED_WorksWithMoveOnly) {TEST1080,33796
TEST(IsNullTest, MatchesNullPointer) {TEST1102,34440
TEST(IsNullTest, StdFunction) {TEST1120,34889
TEST(IsNullTest, CanDescribeSelf) {TEST1128,35112
TEST(NotNullTest, MatchesNonNullPointer) {TEST1135,35332
TEST(NotNullTest, LinkedPtr) {TEST1148,35640
TEST(NotNullTest, ReferenceToConstLinkedPtr) {TEST1157,35888
TEST(NotNullTest, StdFunction) {TEST1166,36171
TEST(NotNullTest, CanDescribeSelf) {TEST1174,36397
TEST(RefTest, MatchesSameVariable) {TEST1181,36587
TEST(RefTest, CanDescribeSelf) {TEST1190,36795
TEST(RefTest, CanBeUsedAsMatcherForConstReference) {TEST1200,37066
TEST(RefTest, IsCovariant) {TEST1212,37413
TEST(RefTest, ExplainsResult) {TEST1226,37755
std::string FromStringLike(internal::StringLike<T> str) {FromStringLike1239,38099
TEST(StringLike, TestConversions) {TEST1243,38187
TEST(StrEqTest, MatchesEqualString) {TEST1257,38664
TEST(StrEqTest, CanDescribeSelf) {TEST1281,39564
TEST(StrNeTest, MatchesUnequalString) {TEST1295,40076
TEST(StrNeTest, CanDescribeSelf) {TEST1313,40716
TEST(StrCaseEqTest, MatchesEqualStringIgnoringCase) {TEST1318,40845
TEST(StrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {TEST1339,41621
TEST(StrCaseEqTest, CanDescribeSelf) {TEST1364,42427
TEST(StrCaseNeTest, MatchesUnequalStringIgnoringCase) {TEST1369,42577
TEST(StrCaseNeTest, CanDescribeSelf) {TEST1390,43345
TEST(HasSubstrTest, WorksForStringClasses) {TEST1396,43564
TEST(HasSubstrTest, WorksForCStrings) {TEST1411,44162
TEST(HasSubstrTest, WorksForStringViewClasses) {TEST1430,44857
TEST(HasSubstrTest, CanDescribeSelf) {TEST1450,45739
TEST(KeyTest, CanDescribeSelf) {TEST1455,45888
TEST(KeyTest, ExplainsResult) {TEST1461,46126
TEST(KeyTest, MatchesCorrectly) {TEST1469,46442
TEST(KeyTest, WorksWithMoveOnly) {TEST1477,46644
struct Tag {};Tag1483,46792
struct PairWithGet {PairWithGet1485,46808
  int member_1;member_11486,46829
  std::string member_2;member_21487,46845
  const int& GetImpl(Tag<0>) const { return member_1; }GetImpl1491,46931
  const std::string& GetImpl(Tag<1>) const { return member_2; }GetImpl1492,46987
auto get(const PairWithGet& value) -> decltype(value.GetImpl(Tag<I>())) {decltype1495,47074
TEST(PairTest, MatchesPairWithGetCorrectly) {TEST1498,47184
TEST(KeyTest, SafelyCastsInnerMatcher) {TEST1509,47496
TEST(KeyTest, InsideContainsUsingMap) {TEST1517,47722
TEST(KeyTest, InsideContainsUsingMultimap) {TEST1526,48003
TEST(PairTest, Typing) {TEST1542,48516
TEST(PairTest, CanDescribeSelf) {TEST1552,48919
TEST(PairTest, CanExplainMatchResultTo) {TEST1567,49612
TEST(PairTest, MatchesCorrectly) {TEST1605,51343
TEST(PairTest, WorksWithMoveOnly) {TEST1625,51921
TEST(PairTest, SafelyCastsInnerMatchers) {TEST1631,52094
TEST(PairTest, InsideContainsUsingMap) {TEST1641,52415
TEST(FieldsAreTest, MatchesCorrectly) {TEST1652,52805
TEST(FieldsAreTest, CanDescribeSelf) {TEST1665,53210
TEST(FieldsAreTest, CanExplainMatchResultTo) {TEST1677,53589
TEST(FieldsAreTest, StructuredBindings) {TEST1714,55139
TEST(ContainsTest, WorksWithMoveOnly) {TEST1793,57506
TEST(PairTest, UseGetInsteadOfMembers) {TEST1799,57665
TEST(StartsWithTest, MatchesStringWithGivenPrefix) {TEST1812,58068
TEST(StartsWithTest, CanDescribeSelf) {TEST1834,58872
TEST(EndsWithTest, MatchesStringWithGivenSuffix) {TEST1841,59037
TEST(EndsWithTest, CanDescribeSelf) {TEST1864,59829
TEST(WhenBase64UnescapedTest, MatchesUnescapedBase64Strings) {TEST1871,59996
TEST(WhenBase64UnescapedTest, CanDescribeSelf) {TEST1891,60905
TEST(MatchesRegexTest, MatchesStringMatchingGivenRegex) {TEST1898,61126
TEST(MatchesRegexTest, CanDescribeSelf) {TEST1922,62096
TEST(ContainsRegexTest, MatchesStringContainingGivenRegex) {TEST1937,62641
TEST(ContainsRegexTest, CanDescribeSelf) {TEST1962,63645
TEST(StdWideStrEqTest, MatchesEqual) {TEST1977,64210
TEST(StdWideStrEqTest, CanDescribeSelf) {TEST2000,65004
TEST(StdWideStrNeTest, MatchesUnequalString) {TEST2018,65687
TEST(StdWideStrNeTest, CanDescribeSelf) {TEST2029,66028
TEST(StdWideStrCaseEqTest, MatchesEqualStringIgnoringCase) {TEST2034,66169
TEST(StdWideStrCaseEqTest, MatchesEqualStringWith0IgnoringCase) {TEST2046,66574
TEST(StdWideStrCaseEqTest, CanDescribeSelf) {TEST2071,67420
TEST(StdWideStrCaseNeTest, MatchesUnequalStringIgnoringCase) {TEST2076,67583
TEST(StdWideStrCaseNeTest, CanDescribeSelf) {TEST2088,67982
TEST(StdWideHasSubstrTest, WorksForStringClasses) {TEST2094,68214
TEST(StdWideHasSubstrTest, WorksForCStrings) {TEST2105,68689
TEST(StdWideHasSubstrTest, CanDescribeSelf) {TEST2118,69180
TEST(StdWideStartsWithTest, MatchesStringWithGivenPrefix) {TEST2125,69367
TEST(StdWideStartsWithTest, CanDescribeSelf) {TEST2139,69845
TEST(StdWideEndsWithTest, MatchesStringWithGivenSuffix) {TEST2146,70022
TEST(StdWideEndsWithTest, CanDescribeSelf) {TEST2160,70501
typedef ::std::tuple<long, int> Tuple2;  // NOLINTTuple22167,70683
TEST(Eq2Test, MatchesEqualArguments) {TEST2171,70818
TEST(Eq2Test, CanDescribeSelf) {TEST2178,71024
TEST(Ge2Test, MatchesGreaterThanOrEqualArguments) {TEST2185,71225
TEST(Ge2Test, CanDescribeSelf) {TEST2193,71485
TEST(Gt2Test, MatchesGreaterThanArguments) {TEST2200,71708
TEST(Gt2Test, CanDescribeSelf) {TEST2208,71962
TEST(Le2Test, MatchesLessThanOrEqualArguments) {TEST2215,72185
TEST(Le2Test, CanDescribeSelf) {TEST2223,72442
TEST(Lt2Test, MatchesLessThanArguments) {TEST2230,72665
TEST(Lt2Test, CanDescribeSelf) {TEST2238,72916
TEST(Ne2Test, MatchesUnequalArguments) {TEST2245,73139
TEST(Ne2Test, CanDescribeSelf) {TEST2253,73388
TEST(PairMatchBaseTest, WorksWithMoveOnly) {TEST2258,73508
TEST(IsNan, FloatMatchesNan) {TEST2268,73877
TEST(IsNan, DoubleMatchesNan) {TEST2290,74561
TEST(IsNan, LongDoubleMatchesNan) {TEST2312,75256
TEST(IsNan, NotMatchesNan) {TEST2334,75973
TEST(IsNan, CanDescribeSelf) {TEST2352,76610
TEST(IsNan, CanDescribeSelfWithNot) {TEST2364,76911
TEST(FloatEq2Test, MatchesEqualArguments) {TEST2377,77289
TEST(FloatEq2Test, CanDescribeSelf) {TEST2386,77610
TEST(NanSensitiveFloatEqTest, MatchesEqualArgumentsWithNaN) {TEST2393,77887
TEST(NanSensitiveFloatEqTest, CanDescribeSelfWithNaNs) {TEST2405,78492
TEST(DoubleEq2Test, MatchesEqualArguments) {TEST2412,78778
TEST(DoubleEq2Test, CanDescribeSelf) {TEST2421,79096
TEST(NanSensitiveDoubleEqTest, MatchesEqualArgumentsWithNaN) {TEST2428,79379
TEST(NanSensitiveDoubleEqTest, CanDescribeSelfWithNaNs) {TEST2440,79981
TEST(FloatNear2Test, MatchesEqualArguments) {TEST2447,80286
TEST(FloatNear2Test, CanDescribeSelf) {TEST2456,80603
TEST(NanSensitiveFloatNearTest, MatchesNearbyArgumentsWithNaN) {TEST2463,80892
TEST(NanSensitiveFloatNearTest, CanDescribeSelfWithNaNs) {TEST2476,81551
TEST(DoubleNear2Test, MatchesEqualArguments) {TEST2483,81861
TEST(DoubleNear2Test, CanDescribeSelf) {TEST2492,82176
TEST(NanSensitiveDoubleNearTest, MatchesNearbyArgumentsWithNaN) {TEST2499,82470
TEST(NanSensitiveDoubleNearTest, CanDescribeSelfWithNaNs) {TEST2512,83138
TEST(NotTest, NegatesMatcher) {TEST2518,83397
TEST(NotTest, CanDescribeSelf) {TEST2526,83575
TEST(NotTest, NotMatcherSafelyCastsMonomorphicMatchers) {TEST2532,83759
void AllOfMatches(int num, const Matcher<int>& m) {AllOfMatches2542,84095
TEST(AllOfTest, MatchesWhenAllMatch) {TEST2553,84408
TEST(AllOfTest, CanDescribeSelf) {TEST2607,86622
TEST(AllOfTest, CanDescribeNegation) {TEST2631,87447
TEST(AllOfTest, AllOfMatcherSafelyCastsMonomorphicMatchers) {TEST2661,88574
TEST(AllOfTest, ExplainsResult) {TEST2675,89152
static void AnyOfMatches(int num, const Matcher<int>& m) {AnyOfMatches2719,90842
static void AnyOfStringMatches(int num, const Matcher<std::string>& m) {AnyOfStringMatches2728,91069
TEST(AnyOfTest, MatchesWhenAnyMatches) {TEST2740,91462
TEST(AnyOfTest, VariadicMatchesWhenAnyMatches) {TEST2782,92843
TEST(ConditionalTest, MatchesFirstIfCondition) {TEST2802,93858
TEST(ConditionalTest, MatchesSecondIfCondition) {TEST2816,94370
TEST(ElementsAreTest, HugeMatcher) {TEST2831,94936
TEST(ElementsAreTest, HugeMatcherStr) {TEST2840,95276
TEST(ElementsAreTest, HugeMatcherUnordered) {TEST2849,95638
TEST(AnyOfTest, CanDescribeSelf) {TEST2859,96016
TEST(AnyOfTest, CanDescribeNegation) {TEST2881,96659
TEST(AnyOfTest, AnyOfMatcherSafelyCastsMonomorphicMatchers) {TEST2905,97418
TEST(AnyOfTest, ExplainsResult) {TEST2919,97998
int IsPositive(double x) {IsPositive2969,99947
class IsGreaterThan {IsGreaterThan2975,100080
  explicit IsGreaterThan(int threshold) : threshold_(threshold) {}IsGreaterThan2977,100111
  bool operator()(int n) const { return n > threshold_; }operator ()2979,100179
  int threshold_;threshold_2982,100248
const int foo = 0;foo2986,100294
bool ReferencesFooAndIsZero(const int& n) {ReferencesFooAndIsZero2990,100413
TEST(TrulyTest, MatchesWhatSatisfiesThePredicate) {TEST2996,100573
TEST(TrulyTest, CanBeUsedWithFunctor) {TEST3003,100783
class ConvertibleToBool {ConvertibleToBool3010,100982
  explicit ConvertibleToBool(int number) : number_(number) {}ConvertibleToBool3012,101017
  operator bool() const { return number_ != 0; }operator bool3013,101079
  int number_;number_3016,101139
ConvertibleToBool IsNotZero(int number) {IsNotZero3019,101158
TEST(TrulyTest, PredicateCanReturnAClassConvertibleToBool) {TEST3026,101387
TEST(TrulyTest, CanDescribeSelf) {TEST3033,101608
TEST(TrulyTest, WorksForByRefArguments) {TEST3041,101848
TEST(TrulyTest, ExplainsFailures) {TEST3049,102096
TEST(MatchesTest, IsSatisfiedByWhatMatchesTheMatcher) {TEST3057,102399
TEST(MatchesTest, WorksOnByRefArguments) {TEST3064,102615
TEST(MatchesTest, WorksWithMatcherOnNonRefType) {TEST3072,102841
TEST(ValueTest, WorksWithPolymorphicMatcher) {TEST3081,103157
TEST(ValueTest, WorksWithMonomorphicMatcher) {TEST3086,103286
TEST(ExplainMatchResultTest, WorksWithPolymorphicMatcher) {TEST3097,103568
TEST(ExplainMatchResultTest, WorksWithMonomorphicMatcher) {TEST3107,103919
MATCHER(ConstructNoArg, "") { return true; }MATCHER3119,104359
MATCHER_P(Construct1Arg, arg1, "") { return true; }MATCHER_P3120,104404
MATCHER_P2(Construct2Args, arg1, arg2, "") { return true; }MATCHER_P23121,104456
TEST(MatcherConstruct, ExplicitVsImplicit) {TEST3123,104517
MATCHER_P(Really, inner_matcher, "") {MATCHER_P3146,105180
TEST(ExplainMatchResultTest, WorksInsideMATCHER) {TEST3150,105288
TEST(DescribeMatcherTest, WorksWithValue) {TEST3154,105375
TEST(DescribeMatcherTest, WorksWithMonomorphicMatcher) {TEST3159,105545
TEST(DescribeMatcherTest, WorksWithPolymorphicMatcher) {TEST3165,105774
TEST(AllArgsTest, WorksForTuple) {TEST3170,105973
TEST(AllArgsTest, WorksForNonTuple) {TEST3175,106124
class AllArgsHelper {AllArgsHelper3180,106243
  AllArgsHelper() {}AllArgsHelper3182,106274
TEST(AllArgsTest, WorksInWithClause) {TEST3190,106405
class OptionalMatchersHelper {OptionalMatchersHelper3204,106771
  OptionalMatchersHelper() {}OptionalMatchersHelper3206,106811
TEST(AllArgsTest, WorksWithoutMatchers) {TEST3221,107120
TEST(MatcherAssertionTest, WorksWhenMatcherIsSatisfied) {TEST3244,107861
TEST(MatcherAssertionTest, WorksWhenMatcherIsNotSatisfied) {TEST3253,108220
TEST(MatcherAssertionTest, WorksForByRefArguments) {TEST3273,108929
TEST(MatcherAssertionTest, WorksForMonomorphicMatcher) {TEST3289,109558
class FloatingPointTest : public testing::Test {FloatingPointTest3309,110367
  typedef testing::internal::FloatingPoint<RawType> Floating;Floating3311,110428
  typedef typename Floating::Bits Bits;Bits3312,110490
  FloatingPointTest()FloatingPointTest3314,110531
  void TestSize() {TestSize3337,111647
  void TestMatches(TestMatches3343,111855
  const Bits max_ulps_;max_ulps_3389,113481
  const Bits zero_bits_;  // The bits that represent 0.0.zero_bits_3391,113506
  const Bits one_bits_;  // The bits that represent 1.0.one_bits_3392,113564
  const Bits infinity_bits_;  // The bits that represent +infinity.infinity_bits_3393,113621
  const RawType close_to_positive_zero_;close_to_positive_zero_3396,113722
  const RawType close_to_negative_zero_;close_to_negative_zero_3397,113763
  const RawType further_from_negative_zero_;further_from_negative_zero_3398,113804
  const RawType close_to_one_;close_to_one_3401,113882
  const RawType further_from_one_;further_from_one_3402,113913
  const RawType infinity_;infinity_3405,113987
  const RawType close_to_infinity_;close_to_infinity_3406,114014
  const RawType further_from_infinity_;further_from_infinity_3407,114050
  const RawType max_;max_3410,114145
  const RawType nan1_;nan1_3413,114184
  const RawType nan2_;nan2_3414,114207
class FloatingPointNearTest : public FloatingPointTest<RawType> {FloatingPointNearTest3419,114316
  typedef FloatingPointTest<RawType> ParentType;ParentType3421,114394
  void TestNearMatches(TestNearMatches3425,114602
typedef FloatingPointTest<float> FloatTest;FloatTest3502,117666
TEST_F(FloatTest, FloatEqApproximatelyMatchesFloats) {TEST_F3504,117711
TEST_F(FloatTest, NanSensitiveFloatEqApproximatelyMatchesFloats) {TEST_F3508,117794
TEST_F(FloatTest, FloatEqCannotMatchNaN) {TEST_F3512,117901
TEST_F(FloatTest, NanSensitiveFloatEqCanMatchNaN) {TEST_F3520,118116
TEST_F(FloatTest, FloatEqCanDescribeSelf) {TEST_F3528,118359
TEST_F(FloatTest, NanSensitiveFloatEqCanDescribeSelf) {TEST_F3542,118836
typedef FloatingPointNearTest<float> FloatNearTest;FloatNearTest3558,119449
TEST_F(FloatNearTest, FloatNearMatches) {TEST_F3560,119502
TEST_F(FloatNearTest, NanSensitiveFloatNearApproximatelyMatchesFloats) {TEST_F3564,119578
TEST_F(FloatNearTest, FloatNearCanDescribeSelf) {TEST_F3568,119697
TEST_F(FloatNearTest, NanSensitiveFloatNearCanDescribeSelf) {TEST_F3584,120311
TEST_F(FloatNearTest, FloatNearCannotMatchNaN) {TEST_F3600,120965
TEST_F(FloatNearTest, NanSensitiveFloatNearCanMatchNaN) {TEST_F3608,121208
typedef FloatingPointTest<double> DoubleTest;DoubleTest3617,121521
TEST_F(DoubleTest, DoubleEqApproximatelyMatchesDoubles) {TEST_F3619,121568
TEST_F(DoubleTest, NanSensitiveDoubleEqApproximatelyMatchesDoubles) {TEST_F3623,121655
TEST_F(DoubleTest, DoubleEqCannotMatchNaN) {TEST_F3627,121766
TEST_F(DoubleTest, NanSensitiveDoubleEqCanMatchNaN) {TEST_F3635,121986
TEST_F(DoubleTest, DoubleEqCanDescribeSelf) {TEST_F3643,122234
TEST_F(DoubleTest, NanSensitiveDoubleEqCanDescribeSelf) {TEST_F3657,122717
typedef FloatingPointNearTest<double> DoubleNearTest;DoubleNearTest3673,123336
TEST_F(DoubleNearTest, DoubleNearMatches) {TEST_F3675,123391
TEST_F(DoubleNearTest, NanSensitiveDoubleNearApproximatelyMatchesDoubles) {TEST_F3679,123470
TEST_F(DoubleNearTest, DoubleNearCanDescribeSelf) {TEST_F3683,123593
TEST_F(DoubleNearTest, ExplainsResultWhenMatchFails) {TEST_F3699,124211
TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanDescribeSelf) {TEST_F3713,124850
TEST_F(DoubleNearTest, DoubleNearCannotMatchNaN) {TEST_F3729,125507
TEST_F(DoubleNearTest, NanSensitiveDoubleNearCanMatchNaN) {TEST_F3737,125754
TEST(PointeeTest, RawPointer) {TEST3745,126017
TEST(PointeeTest, RawPointerToConst) {TEST3755,126215
TEST(PointeeTest, ReferenceToConstRawPointer) {TEST3765,126432
TEST(PointeeTest, ReferenceToNonConstRawPointer) {TEST3775,126654
TEST(PointeeTest, SmartPointer) {TEST3787,126906
TEST(PointeeTest, SmartPointerToConst) {TEST3794,127069
TEST(PointerTest, RawPointer) {TEST3804,127408
TEST(PointerTest, RawPointerToConst) {TEST3815,127617
TEST(PointerTest, SmartPointer) {TEST3826,127839
TEST(PointerTest, SmartPointerToConst) {TEST3834,128031
TEST(AddressTest, NonConst) {TEST3846,128451
TEST(AddressTest, Const) {TEST3861,128675
TEST(AddressTest, MatcherDoesntCopy) {TEST3872,128849
TEST(AddressTest, Describe) {TEST3879,129018
MATCHER_P(FieldIIs, inner_matcher, "") {MATCHER_P3886,129246
TEST(WhenDynamicCastToTest, SameType) {TEST3891,129377
TEST(WhenDynamicCastToTest, WrongTypes) {TEST3903,129781
TEST(WhenDynamicCastToTest, AlreadyNull) {TEST3919,130408
struct AmbiguousCastTypes {AmbiguousCastTypes3925,130571
  class VirtualDerived : public virtual Base {};VirtualDerived3926,130599
  class DerivedSub1 : public VirtualDerived {};DerivedSub13927,130648
  class DerivedSub2 : public VirtualDerived {};DerivedSub23928,130696
  class ManyDerivedInHierarchy : public DerivedSub1, public DerivedSub2 {};ManyDerivedInHierarchy3929,130744
TEST(WhenDynamicCastToTest, AmbiguousCast) {TEST3932,130824
TEST(WhenDynamicCastToTest, Describe) {TEST3946,131366
TEST(WhenDynamicCastToTest, Explain) {TEST3955,131766
TEST(WhenDynamicCastToTest, GoodReference) {TEST3969,132347
TEST(WhenDynamicCastToTest, BadReference) {TEST3977,132619
class ConstPropagatingPtr {ConstPropagatingPtr3986,132878
  typedef T element_type;element_type3988,132915
  ConstPropagatingPtr() : val_() {}ConstPropagatingPtr3990,132942
  explicit ConstPropagatingPtr(T* t) : val_(t) {}ConstPropagatingPtr3991,132978
  ConstPropagatingPtr(const ConstPropagatingPtr& other) : val_(other.val_) {}ConstPropagatingPtr3992,133028
  T* get() { return val_; }get3994,133107
  T& operator*() { return *val_; }operator *3995,133135
  const T* get() const { return val_; }get3997,133245
  const T& operator*() const { return *val_; }operator *3998,133285
  T* val_;val_4001,133343
TEST(PointeeTest, WorksWithConstPropagatingPointers) {TEST4004,133358
TEST(PointeeTest, NeverMatchesNull) {TEST4016,133734
TEST(PointeeTest, MatchesAgainstAValue) {TEST4022,133929
TEST(PointeeTest, CanDescribeSelf) {TEST4032,134133
TEST(PointeeTest, CanExplainMatchResult) {TEST4039,134361
TEST(PointeeTest, AlwaysExplainsPointee) {TEST4050,134745
class Uncopyable {Uncopyable4057,134934
  Uncopyable() : value_(-1) {}Uncopyable4059,134962
  explicit Uncopyable(int a_value) : value_(a_value) {}Uncopyable4060,134993
  int value() const { return value_; }value4062,135050
  void set_value(int i) { value_ = i; }set_value4063,135089
  int value_;value_4066,135140
bool ValueIsPositive(const Uncopyable& x) { return x.value() > 0; }ValueIsPositive4071,135259
MATCHER_P(UncopyableIs, inner_matcher, "") {MATCHER_P4073,135328
struct AStruct {AStruct4078,135496
  AStruct() : x(0), y(1.0), z(5), p(nullptr) {}AStruct4079,135513
  AStruct(const AStruct& rhs)AStruct4080,135561
  int x;           // A non-const field.x4083,135650
  const double y;  // A const field.y4084,135691
  Uncopyable z;    // An uncopyable field.z4085,135728
  const char* p;   // A pointer field.p4086,135771
struct DerivedStruct : public AStruct {DerivedStruct4090,135855
  char ch;ch4091,135895
TEST(FieldTest, WorksForNonConstField) {TEST4095,135979
TEST(FieldTest, WorksForConstField) {TEST4108,136367
TEST(FieldTest, WorksForUncopyableField) {TEST4122,136836
TEST(FieldTest, WorksForPointerField) {TEST4132,137146
TEST(FieldTest, WorksForByRefArgument) {TEST4149,137627
TEST(FieldTest, WorksForArgumentOfSubType) {TEST4160,137907
TEST(FieldTest, WorksForCompatibleMatcherType) {TEST4173,138316
TEST(FieldTest, CanDescribeSelf) {TEST4185,138682
TEST(FieldTest, CanDescribeSelfWithFieldName) {TEST4192,138925
TEST(FieldTest, CanExplainMatchResult) {TEST4201,139273
TEST(FieldTest, CanExplainMatchResultWithFieldName) {TEST4214,139624
TEST(FieldForPointerTest, WorksForPointerToConst) {TEST4228,140114
TEST(FieldForPointerTest, WorksForPointerToNonConst) {TEST4238,140386
TEST(FieldForPointerTest, WorksForReferenceToConstPointer) {TEST4248,140663
TEST(FieldForPointerTest, DoesNotMatchNull) {TEST4258,140927
TEST(FieldForPointerTest, WorksForArgumentOfSubType) {TEST4265,141166
TEST(FieldForPointerTest, CanDescribeSelf) {TEST4277,141535
TEST(FieldForPointerTest, CanDescribeSelfWithFieldName) {TEST4284,141788
TEST(FieldForPointerTest, CanExplainMatchResult) {TEST4293,142162
TEST(FieldForPointerTest, CanExplainMatchResultWithFieldName) {TEST4307,142655
class AClass {AClass4324,143268
  AClass() : n_(0) {}AClass4326,143292
  int n() const { return n_; }n4329,143359
  void set_n(int new_n) { n_ = new_n; }set_n4331,143391
  const std::string& s() const { return s_; }s4334,143481
  const std::string& s_ref() const & { return s_; }s_ref4336,143528
  void set_s(const std::string& new_s) { s_ = new_s; }set_s4338,143581
  double& x() const { return x_; }x4341,143690
  int n_;n_4344,143736
  std::string s_;s_4345,143746
  static double x_;x_4347,143765
double AClass::x_ = 0.0;x_4350,143789
class DerivedClass : public AClass {DerivedClass4353,143858
  int k() const { return k_; }k4355,143904
  int k_;k_4357,143945
TEST(PropertyTest, WorksForNonReferenceProperty) {TEST4362,144053
TEST(PropertyTest, WorksForReferenceToConstProperty) {TEST4378,144518
TEST(PropertyTest, WorksForRefQualifiedProperty) {TEST4395,145012
TEST(PropertyTest, WorksForReferenceToNonConstProperty) {TEST4412,145526
TEST(PropertyTest, WorksForByValueArgument) {TEST4425,145869
TEST(PropertyTest, WorksForArgumentOfSubType) {TEST4438,146191
TEST(PropertyTest, WorksForCompatibleMatcherType) {TEST4453,146627
TEST(PropertyTest, CanDescribeSelf) {TEST4470,147183
TEST(PropertyTest, CanDescribeSelfWithPropertyName) {TEST4478,147448
TEST(PropertyTest, CanExplainMatchResult) {TEST4487,147812
TEST(PropertyTest, CanExplainMatchResultWithPropertyName) {TEST4500,148177
TEST(PropertyForPointerTest, WorksForPointerToConst) {TEST4514,148687
TEST(PropertyForPointerTest, WorksForPointerToNonConst) {TEST4526,148983
TEST(PropertyForPointerTest, WorksForReferenceToConstPointer) {TEST4539,149307
TEST(PropertyForPointerTest, WorksForReferenceToNonConstProperty) {TEST4551,149615
TEST(PropertyForPointerTest, WorksForArgumentOfSubType) {TEST4558,149883
TEST(PropertyForPointerTest, CanDescribeSelf) {TEST4572,150280
TEST(PropertyForPointerTest, CanDescribeSelfWithPropertyDescription) {TEST4580,150555
TEST(PropertyForPointerTest, CanExplainMatchResult) {TEST4589,150952
TEST(PropertyForPointerTest, CanExplainMatchResultWithPropertyName) {TEST4605,151471
std::string IntToStringFunction(int input) {IntToStringFunction4625,152182
TEST(ResultOfTest, WorksForFunctionPointers) {TEST4629,152267
TEST(ResultOfTest, CanDescribeItself) {TEST4637,152516
int IntFunction(int input) { return input == 42 ? 80 : 90; }IntFunction4647,152933
TEST(ResultOfTest, CanExplainMatchResult) {TEST4649,152995
TEST(ResultOfTest, WorksForNonReferenceResults) {TEST4661,153503
double& DoubleFunction(double& input) { return input; }  // NOLINTDoubleFunction4670,153796
Uncopyable& RefUncopyableFunction(Uncopyable& obj) {  // NOLINTRefUncopyableFunction4672,153864
TEST(ResultOfTest, WorksForReferenceToNonConstResults) {TEST4676,153945
const std::string& StringFunction(const std::string& input) { return input; }StringFunction4696,154544
TEST(ResultOfTest, WorksForReferenceToConstResults) {TEST4698,154623
TEST(ResultOfTest, WorksForCompatibleMatcherTypes) {TEST4709,154976
TEST(ResultOfDeathTest, DiesOnNullFunctionPointers) {TEST4719,155345
TEST(ResultOfTest, WorksForFunctionReferences) {TEST4728,155698
struct Functor {Functor4736,155985
  std::string operator()(int input) const {operator ()4737,156002
TEST(ResultOfTest, WorksForFunctors) {TEST4742,156093
struct PolymorphicFunctor {PolymorphicFunctor4752,156454
  typedef int result_type;result_type4753,156482
  int operator()(int n) { return n; }operator ()4754,156509
  int operator()(const char* s) { return static_cast<int>(strlen(s)); }operator ()4755,156547
  std::string operator()(int *p) { return p ? "good ptr" : "null"; }operator ()4756,156619
TEST(ResultOfTest, WorksForPolymorphicFunctors) {TEST4759,156692
TEST(ResultOfTest, WorksForPolymorphicFunctorsIgnoringResultType) {TEST4771,157077
TEST(ResultOfTest, WorksForLambdas) {TEST4779,157310
TEST(ResultOfTest, WorksForNonCopyableArguments) {TEST4789,157567
const int* ReferencingFunction(const int& n) { return &n; }ReferencingFunction4799,157941
struct ReferencingFunctor {ReferencingFunctor4801,158002
  typedef const int* result_type;result_type4802,158030
  result_type operator()(const int& n) { return &n; }operator ()4803,158064
TEST(ResultOfTest, WorksForReferencingCallables) {TEST4806,158122
class DivisibleByImpl {DivisibleByImpl4818,158509
  explicit DivisibleByImpl(int a_divider) : divider_(a_divider) {}DivisibleByImpl4820,158542
  bool MatchAndExplain(const T& n, MatchResultListener* listener) const {MatchAndExplain4824,158707
  void DescribeTo(ostream* os) const {DescribeTo4830,158906
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo4834,158993
  void set_divider(int a_divider) { divider_ = a_divider; }set_divider4838,159092
  int divider() const { return divider_; }divider4839,159152
  int divider_;divider_4842,159206
PolymorphicMatcher<DivisibleByImpl> DivisibleBy(int n) {DivisibleBy4845,159226
TEST(ExplainMatchResultTest, AllOf_False_False) {TEST4851,159432
TEST(ExplainMatchResultTest, AllOf_False_True) {TEST4858,159693
TEST(ExplainMatchResultTest, AllOf_True_False) {TEST4865,159953
TEST(ExplainMatchResultTest, AllOf_True_True) {TEST4872,160190
TEST(ExplainMatchResultTest, AllOf_True_True_2) {TEST4877,160381
TEST(ExplainmatcherResultTest, MonomorphicMatcher) {TEST4882,160512
class NotCopyable {NotCopyable4891,160831
  explicit NotCopyable(int a_value) : value_(a_value) {}NotCopyable4893,160860
  int value() const { return value_; }value4895,160918
  bool operator==(const NotCopyable& rhs) const {operator ==4897,160958
  bool operator>=(const NotCopyable& rhs) const {operator >=4901,161048
  int value_;value_4905,161147
TEST(ByRefTest, AllowsNotCopyableConstValueInMatchers) {TEST4910,161214
TEST(ByRefTest, AllowsNotCopyableValueInMatchers) {TEST4919,161472
TEST(IsEmptyTest, ImplementsIsEmpty) {TEST4928,161695
TEST(IsEmptyTest, WorksWithString) {TEST4937,161935
TEST(IsEmptyTest, CanDescribeSelf) {TEST4946,162148
TEST(IsEmptyTest, ExplainsResult) {TEST4952,162314
TEST(IsEmptyTest, WorksWithMoveOnly) {TEST4960,162538
TEST(IsTrueTest, IsTrueIsFalse) {TEST4966,162665
TEST(SizeIsTest, ImplementsSizeIs) {TEST5002,163895
TEST(SizeIsTest, WorksWithMap) {TEST5014,164249
TEST(SizeIsTest, WorksWithReferences) {TEST5026,164639
TEST(SizeIsTest, WorksWithMoveOnly) {TEST5034,164841
struct MinimalistCustomType {MinimalistCustomType5042,165137
  int size() const { return 1; }size5043,165167
TEST(SizeIsTest, WorksWithMinimalistCustomType) {TEST5045,165203
TEST(SizeIsTest, CanDescribeSelf) {TEST5051,165369
TEST(SizeIsTest, ExplainsResult) {TEST5057,165554
class ContainerEqTest : public testing::Test {};ContainerEqTest5080,166494
    ContainerEqTestTypes;ContainerEqTestTypes5087,166640
TYPED_TEST(ContainerEqTest, EqualsSelf) {TYPED_TEST5092,166780
TYPED_TEST(ContainerEqTest, ValueMissing) {TYPED_TEST5101,167075
TYPED_TEST(ContainerEqTest, ValueAdded) {TYPED_TEST5113,167527
TYPED_TEST(ContainerEqTest, ValueAddedAndRemoved) {TYPED_TEST5124,167994
TYPED_TEST(ContainerEqTest, DuplicateDifference) {TYPED_TEST5137,168524
TEST(ContainerEqExtraTest, MultipleValuesMissing) {TEST5151,169107
TEST(ContainerEqExtraTest, MultipleValuesAdded) {TEST5164,169626
TEST(ContainerEqExtraTest, MultipleValuesAddedAndRemoved) {TEST5176,170130
TEST(ContainerEqExtraTest, MultiSetOfIntDuplicateDifference) {TEST5190,170745
TEST(ContainerEqExtraTest, WorksForMaps) {TEST5204,171324
TEST(ContainerEqExtraTest, WorksForNativeArray) {TEST5222,171831
TEST(ContainerEqExtraTest, WorksForTwoDimensionalNativeArray) {TEST5231,172032
TEST(ContainerEqExtraTest, WorksForNativeArrayAsTuple) {TEST5245,172546
TEST(ContainerEqExtraTest, CopiesNativeArrayParameter) {TEST5258,172933
TEST(WhenSortedByTest, WorksForEmptyContainer) {TEST5276,173306
TEST(WhenSortedByTest, WorksForNonEmptyContainer) {TEST5282,173525
TEST(WhenSortedByTest, WorksForNonVectorContainer) {TEST5294,173953
TEST(WhenSortedByTest, WorksForNativeArray) {TEST5305,174385
TEST(WhenSortedByTest, CanDescribeSelf) {TEST5314,174795
TEST(WhenSortedByTest, ExplainsMatchResult) {TEST5326,175262
TEST(WhenSortedTest, WorksForEmptyContainer) {TEST5337,175731
TEST(WhenSortedTest, WorksForNonEmptyContainer) {TEST5343,175918
TEST(WhenSortedTest, WorksForMapTypes) {TEST5353,176233
TEST(WhenSortedTest, WorksForMultiMapTypes) {TEST5366,176717
TEST(WhenSortedTest, WorksForPolymorphicMatcher) {TEST5388,177714
TEST(WhenSortedTest, WorksForVectorConstRefMatcher) {TEST5396,177938
class Streamlike {Streamlike5409,178434
  typedef ConstIter const_iterator;const_iterator5413,178491
  typedef T value_type;value_type5414,178527
  Streamlike(InIter first, InIter last) : remainder_(first, last) {}Streamlike5417,178581
  const_iterator begin() const {begin5419,178651
  const_iterator end() const {end5422,178741
  class ConstIter : public std::iterator<std::input_iterator_tag,ConstIter5427,178838
    ConstIter(const Streamlike* s,ConstIter5433,179142
    const value_type& operator*() const { return *pos_; }operator *5437,179268
    const value_type* operator->() const { return &*pos_; }operator ->5438,179326
    ConstIter& operator++() {operator ++5439,179386
    class PostIncrProxy {PostIncrProxy5446,179592
      explicit PostIncrProxy(const value_type& value) : value_(value) {}PostIncrProxy5448,179631
      value_type operator*() const { return value_; }operator *5449,179704
      value_type value_;value_5451,179772
    PostIncrProxy operator++(int) {operator ++5453,179804
    friend bool operator==(const ConstIter& a, const ConstIter& b) {operator ==5459,179919
    friend bool operator!=(const ConstIter& a, const ConstIter& b) {operator !=5462,180041
    const Streamlike* s_;s_5467,180153
    typename std::list<value_type>::iterator pos_;pos_5468,180179
  friend std::ostream& operator<<(std::ostream& os, const Streamlike& s) {operator <<5471,180236
  mutable std::list<value_type> remainder_;  // modified by iterationremainder_5483,180574
TEST(StreamlikeTest, Iteration) {TEST5486,180648
TEST(BeginEndDistanceIsTest, WorksWithForwardList) {TEST5497,180908
TEST(BeginEndDistanceIsTest, WorksWithNonStdList) {TEST5509,181363
TEST(BeginEndDistanceIsTest, CanDescribeSelf) {TEST5515,181526
TEST(BeginEndDistanceIsTest, WorksWithMoveOnly) {TEST5522,181807
TEST(BeginEndDistanceIsTest, ExplainsResult) {TEST5528,181977
TEST(WhenSortedTest, WorksForStreamlike) {TEST5558,183255
TEST(WhenSortedTest, WorksForVectorConstRefMatcherOnStreamlike) {TEST5567,183630
TEST(IsSupersetOfTest, WorksForNativeArray) {TEST5575,183968
TEST(IsSupersetOfTest, WorksWithDuplicates) {TEST5586,184368
TEST(IsSupersetOfTest, WorksForEmpty) {TEST5594,184622
TEST(IsSupersetOfTest, WorksForStreamlike) {TEST5612,185178
TEST(IsSupersetOfTest, TakesStlContainer) {TEST5626,185526
TEST(IsSupersetOfTest, Describe) {TEST5638,185812
TEST(IsSupersetOfTest, DescribeNegation) {TEST5652,186252
TEST(IsSupersetOfTest, MatchAndExplain) {TEST5666,186709
TEST(IsSupersetOfTest, WorksForRhsInitializerList) {TEST5689,187515
TEST(IsSupersetOfTest, WorksWithMoveOnly) {TEST5695,187712
TEST(IsSubsetOfTest, WorksForNativeArray) {TEST5703,187991
TEST(IsSubsetOfTest, WorksWithDuplicates) {TEST5714,188379
TEST(IsSubsetOfTest, WorksForEmpty) {TEST5722,188621
TEST(IsSubsetOfTest, WorksForStreamlike) {TEST5740,189163
TEST(IsSubsetOfTest, TakesStlContainer) {TEST5752,189470
TEST(IsSubsetOfTest, Describe) {TEST5765,189775
TEST(IsSubsetOfTest, DescribeNegation) {TEST5780,190212
TEST(IsSubsetOfTest, MatchAndExplain) {TEST5794,190664
TEST(IsSubsetOfTest, WorksForRhsInitializerList) {TEST5817,191459
TEST(IsSubsetOfTest, WorksWithMoveOnly) {TEST5823,191647
TEST(ElemensAreStreamTest, WorksForStreamlike) {TEST5834,192004
TEST(ElemensAreArrayStreamTest, WorksForStreamlike) {TEST5841,192238
TEST(ElementsAreTest, WorksWithUncopyable) {TEST5857,192647
TEST(ElementsAreTest, WorksWithMoveOnly) {TEST5864,192842
TEST(ElementsAreTest, TakesStlContainer) {TEST5873,193132
TEST(UnorderedElementsAreArrayTest, SucceedsWhenExpected) {TEST5888,193492
TEST(UnorderedElementsAreArrayTest, VectorBool) {TEST5898,193876
TEST(UnorderedElementsAreArrayTest, WorksForStreamlike) {TEST5908,194295
TEST(UnorderedElementsAreArrayTest, TakesStlContainer) {TEST5927,194908
TEST(UnorderedElementsAreArrayTest, TakesInitializerList) {TEST5941,195259
TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfCStrings) {TEST5947,195487
TEST(UnorderedElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {TEST5953,195764
TEST(UnorderedElementsAreArrayTest,TEST5961,196065
TEST(UnorderedElementsAreArrayTest, WorksWithMoveOnly) {TEST5974,196588
class UnorderedElementsAreTest : public testing::Test {UnorderedElementsAreTest5981,196809
  typedef std::vector<int> IntVec;IntVec5983,196877
TEST_F(UnorderedElementsAreTest, WorksWithUncopyable) {TEST_F5986,196916
TEST_F(UnorderedElementsAreTest, SucceedsWhenExpected) {TEST_F5994,197145
TEST_F(UnorderedElementsAreTest, FailsWhenAnElementMatchesNoMatcher) {TEST_F6004,197521
TEST_F(UnorderedElementsAreTest, WorksForStreamlike) {TEST_F6017,197995
TEST_F(UnorderedElementsAreTest, WorksWithMoveOnly) {TEST_F6028,198423
TEST_F(UnorderedElementsAreTest, Performance) {TEST_F6040,199013
TEST_F(UnorderedElementsAreTest, PerformanceHalfStrict) {TEST_F6056,199581
TEST_F(UnorderedElementsAreTest, FailMessageCountWrong) {TEST_F6072,200006
TEST_F(UnorderedElementsAreTest, FailMessageCountWrongZero) {TEST_F6081,200336
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatchers) {TEST_F6089,200633
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedElements) {TEST_F6102,201072
TEST_F(UnorderedElementsAreTest, FailMessageUnmatchedMatcherAndElement) {TEST_F6115,201499
static std::string EMString(int element, int matcher) {EMString6134,202158
TEST_F(UnorderedElementsAreTest, FailMessageImperfectMatchOnly) {TEST_F6140,202323
TEST_F(UnorderedElementsAreTest, Describe) {TEST_F6170,203480
TEST_F(UnorderedElementsAreTest, DescribeNegation) {TEST_F6185,204055
class BacktrackingMaxBPMState {BacktrackingMaxBPMState6207,204974
  explicit BacktrackingMaxBPMState(const Graph* g) : graph_(g) { }BacktrackingMaxBPMState6210,205052
  ElementMatcherPairs Compute() {Compute6212,205120
  static const size_t kUnused = static_cast<size_t>(-1);kUnused6228,205571
  void PushMatch(size_t lhs, size_t rhs) {PushMatch6230,205629
  void PopMatch() {PopMatch6239,205869
  bool RecurseInto(size_t irhs) {RecurseInto6246,206048
  const Graph* graph_;  // not ownedgraph_6269,206617
  std::vector<size_t> lhs_used_;lhs_used_6270,206654
  std::vector<size_t> rhs_used_;rhs_used_6271,206687
  ElementMatcherPairs matches_;matches_6272,206720
  ElementMatcherPairs best_so_far_;best_so_far_6273,206752
const size_t BacktrackingMaxBPMState<Graph>::kUnused;kUnused6277,206818
FindBacktrackingMaxBPM(const Graph& g) {FindBacktrackingMaxBPM6285,207074
class BacktrackingBPMTest : public ::testing::Test { };BacktrackingBPMTest6289,207173
class BipartiteTest : public ::testing::TestWithParam<size_t> {};BipartiteTest6293,207375
TEST_P(BipartiteTest, Exhaustive) {TEST_P6296,207506
class BipartiteNonSquareTestBipartiteNonSquareTest6325,208617
TEST_F(BipartiteNonSquareTest, SimpleBacktracking) {TEST_F6329,208718
TEST_P(BipartiteNonSquareTest, Exhaustive) {TEST_P6350,209337
class BipartiteRandomTestBipartiteRandomTest6376,210190
TEST_P(BipartiteRandomTest, LargerNets) {TEST_P6381,210327
TEST(IsReadableTypeNameTest, ReturnsTrueForShortNames) {TEST6413,211407
TEST(IsReadableTypeNameTest, ReturnsTrueForLongNonTemplateNonFunctionNames) {TEST6420,211682
TEST(IsReadableTypeNameTest, ReturnsFalseForLongTemplateNames) {TEST6426,211977
TEST(IsReadableTypeNameTest, ReturnsFalseForLongFunctionTypeNames) {TEST6432,212216
TEST(FormatMatcherDescriptionTest, WorksForEmptyDescription) {TEST6438,212398
TEST(PolymorphicMatcherTest, CanAccessMutableImpl) {TEST6456,213073
TEST(PolymorphicMatcherTest, CanAccessImpl) {TEST6466,213373
TEST(MatcherTupleTest, ExplainsMatchFailure) {TEST6472,213565
TEST(EachTest, ExplainsMatchResultCorrectly) {TEST6501,214651
TEST(EachTest, DescribesItselfCorrectly) {TEST6526,215214
TEST(EachTest, MatchesVectorWhenAllElementsMatch) {TEST6534,215480
TEST(EachTest, MatchesMapWhenAllElementsMatch) {TEST6554,216145
TEST(EachTest, AcceptsMatcher) {TEST6572,216802
TEST(EachTest, WorksForNativeArrayAsTuple) {TEST6578,216934
TEST(EachTest, WorksWithMoveOnly) {TEST6585,217159
class IsHalfOfMatcher {IsHalfOfMatcher6592,217342
  bool MatchAndExplain(const std::tuple<T1, T2>& a_pair,MatchAndExplain6595,217413
  void DescribeTo(ostream* os) const {DescribeTo6606,217791
  void DescribeNegationTo(ostream* os) const {DescribeNegationTo6610,217898
PolymorphicMatcher<IsHalfOfMatcher> IsHalfOf() {IsHalfOf6615,218019
TEST(PointwiseTest, DescribesSelf) {TEST6619,218123
TEST(PointwiseTest, MakesCopyOfRhs) {TEST6634,218739
TEST(PointwiseTest, WorksForLhsNativeArray) {TEST6648,219069
TEST(PointwiseTest, WorksForRhsNativeArray) {TEST6658,219317
TEST(PointwiseTest, WorksForVectorOfBool) {TEST6669,219608
TEST(PointwiseTest, WorksForRhsInitializerList) {TEST6679,219835
TEST(PointwiseTest, RejectsWrongSize) {TEST6686,220024
TEST(PointwiseTest, RejectsWrongContent) {TEST6697,220342
TEST(PointwiseTest, AcceptsCorrectContent) {TEST6706,220670
TEST(PointwiseTest, AllowsMonomorphicInnerMatcher) {TEST6713,220892
MATCHER(PointeeEquals, "Points to an equal value") {MATCHER6727,221448
TEST(PointwiseTest, WorksWithMoveOnly) {TEST6732,221646
TEST(UnorderedPointwiseTest, DescribesSelf) {TEST6738,221836
TEST(UnorderedPointwiseTest, MakesCopyOfRhs) {TEST6764,222832
TEST(UnorderedPointwiseTest, WorksForLhsNativeArray) {TEST6778,223180
TEST(UnorderedPointwiseTest, WorksForRhsNativeArray) {TEST6788,223455
TEST(UnorderedPointwiseTest, WorksForRhsInitializerList) {TEST6799,223731
TEST(UnorderedPointwiseTest, RejectsWrongSize) {TEST6806,223947
TEST(UnorderedPointwiseTest, RejectsWrongContent) {TEST6817,224298
TEST(UnorderedPointwiseTest, AcceptsCorrectContentInSameOrder) {TEST6826,224646
TEST(UnorderedPointwiseTest, AcceptsCorrectContentInDifferentOrder) {TEST6832,224838
TEST(UnorderedPointwiseTest, AllowsMonomorphicInnerMatcher) {TEST6838,225035
TEST(UnorderedPointwiseTest, WorksWithMoveOnly) {TEST6850,225516
class SampleOptional {SampleOptional6860,225891
  explicit SampleOptional(T value)SampleOptional6863,225947
  SampleOptional() : value_(), has_value_(false) {}SampleOptional6865,226036
  operator bool() const { return has_value_; }operator bool6866,226088
  const T& operator*() const { return value_; }operator *6867,226135
  T value_;value_6870,226194
  bool has_value_;has_value_6871,226206
TEST(OptionalTest, DescribesSelf) {TEST6874,226229
TEST(OptionalTest, ExplainsSelf) {TEST6879,226375
TEST(OptionalTest, MatchesNonEmptyOptional) {TEST6885,226625
TEST(OptionalTest, DoesNotMatchNullopt) {TEST6895,226974
TEST(OptionalTest, WorksWithMoveOnly) {TEST6901,227136
class SampleVariantIntString {SampleVariantIntString6906,227327
  SampleVariantIntString(int i) : i_(i), has_int_(true) {}SampleVariantIntString6908,227367
  SampleVariantIntString(const std::string& s) : s_(s), has_int_(false) {}SampleVariantIntString6909,227426
  friend bool holds_alternative(const SampleVariantIntString& value) {holds_alternative6912,227526
  friend const T& get(const SampleVariantIntString& value) {get6917,227684
  const int& get_impl(int*) const { return i_; }get_impl6922,227813
  const std::string& get_impl(std::string*) const { return s_; }get_impl6923,227862
  int i_;i_6925,227928
  std::string s_;s_6926,227938
  bool has_int_;has_int_6927,227956
TEST(VariantTest, DescribesSelf) {TEST6930,227977
TEST(VariantTest, ExplainsSelf) {TEST6936,228241
TEST(VariantTest, FullMatch) {TEST6946,228659
TEST(VariantTest, TypeDoesNotMatch) {TEST6954,228906
TEST(VariantTest, InnerDoesNotMatch) {TEST6962,229162
class SampleAnyType {SampleAnyType6970,229419
  explicit SampleAnyType(int i) : index_(0), i_(i) {}SampleAnyType6972,229450
  explicit SampleAnyType(const std::string& s) : index_(1), s_(s) {}SampleAnyType6973,229504
  friend const T* any_cast(const SampleAnyType* any) {any_cast6976,229598
  int index_;index_6981,229720
  int i_;i_6982,229734
  std::string s_;s_6983,229744
  const int* get_impl(int*) const { return index_ == 0 ? &i_ : nullptr; }get_impl6985,229763
  const std::string* get_impl(std::string*) const {get_impl6986,229837
TEST(AnyWithTest, FullMatch) {TEST6991,229937
TEST(AnyWithTest, TestBadCastType) {TEST6996,230065
TEST(AnyWithTest, TestUseInContainers) {TEST7001,230213
TEST(AnyWithTest, TestCompare) {TEST7017,230766
TEST(AnyWithTest, DescribesSelf) {TEST7021,230856
TEST(AnyWithTest, ExplainsSelf) {TEST7027,231116
TEST(PointeeTest, WorksOnMoveOnlyType) {TEST7036,231474
TEST(NotTest, WorksOnMoveOnlyType) {TEST7042,231629
TEST(ArgsTest, AcceptsZeroTemplateArg) {TEST7050,231812
TEST(ArgsTest, AcceptsOneTemplateArg) {TEST7056,231995
TEST(ArgsTest, AcceptsTwoTemplateArgs) {TEST7063,232245
TEST(ArgsTest, AcceptsRepeatedTemplateArgs) {TEST7071,232468
TEST(ArgsTest, AcceptsDecreasingTemplateArgs) {TEST7077,232657
MATCHER(SumIsZero, "") {MATCHER7083,232848
TEST(ArgsTest, AcceptsMoreTemplateArgsThanArityOfOriginalTuple) {TEST7087,232946
TEST(ArgsTest, CanBeNested) {TEST7092,233155
TEST(ArgsTest, CanMatchTupleByValue) {TEST7098,233363
TEST(ArgsTest, CanMatchTupleByReference) {TEST7105,233587
MATCHER_P(PrintsAs, str, "") {MATCHER_P7113,233868
TEST(ArgsTest, AcceptsTenTemplateArgs) {TEST7117,233947
TEST(ArgsTest, DescirbesSelfCorrectly) {TEST7126,234352
TEST(ArgsTest, DescirbesNestedArgsCorrectly) {TEST7133,234594
TEST(ArgsTest, DescribesNegationCorrectly) {TEST7141,234912
TEST(ArgsTest, ExplainsMatchResultWithoutInnerExplanation) {TEST7148,235163
class LessThanMatcher : public MatcherInterface<std::tuple<char, int> > {LessThanMatcher7157,235545
Matcher<std::tuple<char, int> > LessThan() {LessThan7172,236028
TEST(ArgsTest, ExplainsMatchResultWithInnerExplanation) {TEST7176,236119
class PredicateFormatterFromMatcherTest : public ::testing::Test {PredicateFormatterFromMatcherTest7186,236539
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };Behavior7188,236618
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kInitialSuccess7188,236618
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kAlwaysFail7188,236618
  enum Behavior { kInitialSuccess, kAlwaysFail, kFlaky };kFlaky7188,236618
  class MockMatcher : public MatcherInterface<Behavior> {MockMatcher7193,236887
  AssertionResult RunPredicateFormatter(Behavior behavior) {RunPredicateFormatter7227,238066
TEST_F(PredicateFormatterFromMatcherTest, ShortCircuitOnSuccess) {TEST_F7235,238332
TEST_F(PredicateFormatterFromMatcherTest, NoShortCircuitOnFailure) {TEST_F7242,238580
TEST_F(PredicateFormatterFromMatcherTest, DetectsFlakyShortCircuit) {TEST_F7252,238978
TEST(ElementsAreTest, CanDescribeExpectingNoElement) {TEST7266,239516
TEST(ElementsAreTest, CanDescribeExpectingOneElement) {TEST7271,239661
TEST(ElementsAreTest, CanDescribeExpectingManyElements) {TEST7276,239822
TEST(ElementsAreTest, CanDescribeNegationOfExpectingNoElement) {TEST7285,240096
TEST(ElementsAreTest, CanDescribeNegationOfExpectingOneElment) {TEST7290,240255
TEST(ElementsAreTest, CanDescribeNegationOfExpectingManyElements) {TEST7298,240483
TEST(ElementsAreTest, DoesNotExplainTrivialMatch) {TEST7307,240791
TEST(ElementsAreTest, ExplainsNonTrivialMatch) {TEST7316,241050
TEST(ElementsAreTest, CanExplainMismatchWrongSize) {TEST7328,241446
TEST(ElementsAreTest, CanExplainMismatchRightSize) {TEST7339,241756
TEST(ElementsAreTest, MatchesOneElementVector) {TEST7352,242105
TEST(ElementsAreTest, MatchesOneElementList) {TEST7359,242296
TEST(ElementsAreTest, MatchesThreeElementVector) {TEST7366,242470
TEST(ElementsAreTest, MatchesOneElementEqMatcher) {TEST7375,242723
TEST(ElementsAreTest, MatchesOneElementAnyMatcher) {TEST7382,242882
TEST(ElementsAreTest, MatchesOneElementValue) {TEST7389,243038
TEST(ElementsAreTest, MatchesThreeElementsMixedMatchers) {TEST7396,243189
TEST(ElementsAreTest, MatchesTenElementVector) {TEST7405,243417
TEST(ElementsAreTest, DoesNotMatchWrongSize) {TEST7415,243778
TEST(ElementsAreTest, DoesNotMatchWrongValue) {TEST7424,244054
TEST(ElementsAreTest, DoesNotMatchWrongOrder) {TEST7432,244292
TEST(ElementsAreTest, WorksForNestedContainer) {TEST7443,244615
TEST(ElementsAreTest, WorksWithByRefElementMatchers) {TEST7457,245114
TEST(ElementsAreTest, WorksWithContainerPointerUsingPointee) {TEST7465,245374
TEST(ElementsAreTest, WorksWithNativeArrayPassedByReference) {TEST7473,245614
class NativeArrayPassedAsPointerAndSize {NativeArrayPassedAsPointerAndSize7480,245846
  NativeArrayPassedAsPointerAndSize() {}NativeArrayPassedAsPointerAndSize7482,245897
TEST(ElementsAreTest, WorksWithNativeArrayPassedAsPointerAndSize) {TEST7490,246077
TEST(ElementsAreTest, WorksWithTwoDimensionalNativeArray) {TEST7501,246462
TEST(ElementsAreTest, AcceptsStringLiteral) {TEST7510,246865
TEST(ElementsAreTest, AcceptsArrayWithUnknownSize) {TEST7519,247176
const char kHi[] = "hi";kHi7530,247482
TEST(ElementsAreTest, MakesCopyOfArguments) {TEST7532,247508
TEST(ElementsAreArrayTest, CanBeCreatedWithValueArray) {TEST7550,248137
TEST(ElementsAreArrayTest, CanBeCreatedWithArraySize) {TEST7560,248408
TEST(ElementsAreArrayTest, CanBeCreatedWithoutArraySize) {TEST7571,248775
TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherArray) {TEST7581,249074
TEST(ElementsAreArrayTest, CanBeCreatedWithVector) {TEST7595,249573
TEST(ElementsAreArrayTest, TakesInitializerList) {TEST7604,249916
TEST(ElementsAreArrayTest, TakesInitializerListOfCStrings) {TEST7611,250175
TEST(ElementsAreArrayTest, TakesInitializerListOfSameTypedMatchers) {TEST7618,250493
TEST(ElementsAreArrayTest, TakesInitializerListOfDifferentTypedMatchers) {TEST7624,250753
TEST(ElementsAreArrayTest, CanBeCreatedWithMatcherVector) {TEST7635,251256
TEST(ElementsAreArrayTest, CanBeCreatedWithIteratorRange) {TEST7646,251727
TEST(ElementsAreArrayTest, WorksWithNativeArray) {TEST7661,252491
TEST(ElementsAreArrayTest, SourceLifeSpan) {TEST7670,252746
MATCHER(IsEven, "") { return (arg % 2) == 0; }MATCHER7691,253482
TEST(MatcherMacroTest, Works) {TEST7693,253530
MATCHER(IsEven2, negation ? "is odd" : "is even") {MATCHER7705,253885
MATCHER_P2(EqSumOf, x, y,MATCHER_P27719,254291
TEST(MatcherMacroTest, DescriptionCanReferenceNegationAndParameters) {TEST7737,254869
TEST(MatcherMacroTest, CanExplainMatchResult) {TEST7748,255286
MATCHER(IsEmptyString, "") {MATCHER7761,255661
MATCHER(IsEmptyStringByRef, "") {MATCHER7766,255764
TEST(MatcherMacroTest, CanReferenceArgType) {TEST7771,255879
namespace matcher_test {matcher_test7781,256162
MATCHER(IsOdd, "") { return (arg % 2) != 0; }MATCHER7782,256187
TEST(MatcherMacroTest, WorksInNamespace) {TEST7785,256263
MATCHER(IsPositiveOdd, "") {MATCHER7792,256465
TEST(MatcherMacroTest, CanBeComposedUsingValue) {TEST7796,256552
MATCHER_P(IsGreaterThan32And, n, "") { return arg > 32 && arg > n; }MATCHER_P7804,256775
TEST(MatcherPMacroTest, Works) {TEST7806,256845
MATCHER_P(_is_Greater_Than32and_, n, "") { return arg > 32 && arg > n; }MATCHER_P7818,257254
TEST(MatcherPMacroTest, GeneratesCorrectDescription) {TEST7820,257328
class UncopyableFoo {UncopyableFoo7832,257728
  explicit UncopyableFoo(char value) : value_(value) { (void)value_; }UncopyableFoo7834,257759
  char value_;value_7840,257939
MATCHER_P(ReferencesUncopyable, variable, "") { return &arg == &variable; }MATCHER_P7843,257958
TEST(MatcherPMacroTest, WorksWhenExplicitlyInstantiatedWithReference) {TEST7845,258035
MATCHER_P3(ParamTypesAreIntLongAndChar, foo, bar, baz, "") {MATCHER_P37863,258676
TEST(MatcherPnMacroTest, CanReferenceParamTypes) {TEST7870,258889
MATCHER_P2(ReferencesAnyOf, variable1, variable2, "") {MATCHER_P27877,259106
TEST(MatcherPnMacroTest, WorksWhenExplicitlyInstantiatedWithReferences) {TEST7881,259216
TEST(MatcherPnMacroTest,TEST7898,259787
MATCHER_P2(IsNotInClosedRange, low, hi, "") { return arg < low || arg > hi; }MATCHER_P27914,260430
TEST(MatcherPnMacroTest, Works) {TEST7916,260509
MATCHER(EqualsSumOf, "") { return arg == 0; }MATCHER7930,261012
MATCHER_P(EqualsSumOf, a, "") { return arg == a; }MATCHER_P7931,261058
MATCHER_P2(EqualsSumOf, a, b, "") { return arg == a + b; }MATCHER_P27932,261109
MATCHER_P3(EqualsSumOf, a, b, c, "") { return arg == a + b + c; }MATCHER_P37933,261168
MATCHER_P4(EqualsSumOf, a, b, c, d, "") { return arg == a + b + c + d; }MATCHER_P47934,261234
MATCHER_P5(EqualsSumOf, a, b, c, d, e, "") { return arg == a + b + c + d + e; }MATCHER_P57935,261307
MATCHER_P6(EqualsSumOf, a, b, c, d, e, f, "") {MATCHER_P67936,261387
MATCHER_P7(EqualsSumOf, a, b, c, d, e, f, g, "") {MATCHER_P77939,261476
MATCHER_P8(EqualsSumOf, a, b, c, d, e, f, g, h, "") {MATCHER_P87942,261572
MATCHER_P9(EqualsSumOf, a, b, c, d, e, f, g, h, i, "") {MATCHER_P97945,261675
MATCHER_P10(EqualsSumOf, a, b, c, d, e, f, g, h, i, j, "") {MATCHER_P107948,261785
TEST(MatcherPnMacroTest, CanBeOverloadedOnNumberOfParameters) {TEST7952,261904
TEST(MatcherPnMacroTest, WorksForDifferentParameterTypes) {TEST7992,263975
MATCHER_P2(EqConcat, prefix, suffix, "") {MATCHER_P28002,264387
TEST(MatcherPnMacroTest, SimpleTypePromotion) {TEST8009,264627
TEST(MatcherPnMacroTest, TypesAreCorrect) {TEST8020,265022
MATCHER_P3(TwoOf, m1, m2, m3, "") {MATCHER_P38063,266600
TEST(MatcherPnMacroTest, CanUseMatcherTypedParameterInValue) {TEST8070,266824
TEST(ContainsTest, ListMatchesWhenElementIsInContainer) {TEST8077,267013
TEST(ContainsTest, ListDoesNotMatchWhenElementIsNotInContainer) {TEST8095,267557
TEST(ContainsTest, SetMatchesWhenElementIsInContainer) {TEST8102,267745
TEST(ContainsTest, SetDoesNotMatchWhenElementIsNotInContainer) {TEST8119,268230
TEST(ContainsTest, ExplainsMatchResultCorrectly) {TEST8130,268540
TEST(ContainsTest, DescribesItselfCorrectly) {TEST8145,268952
TEST(ContainsTest, MapMatchesWhenElementIsInContainer) {TEST8153,269234
TEST(ContainsTest, MapDoesNotMatchWhenElementIsNotInContainer) {TEST8169,269773
TEST(ContainsTest, ArrayMatchesWhenElementIsInContainer) {TEST8176,269976
TEST(ContainsTest, ArrayDoesNotMatchWhenElementIsNotInContainer) {TEST8181,270162
TEST(ContainsTest, AcceptsMatcher) {TEST8186,270310
TEST(ContainsTest, WorksForNativeArrayAsTuple) {TEST8192,270454
TEST(ContainsTest, WorksForTwoDimensionalNativeArray) {TEST8199,270687
TEST(ContainsTimes, ListMatchesWhenElementQuantityMatches) {TEST8209,271007
TEST(ContainsTimes, ExplainsMatchResultCorrectly) {TEST8228,271779
TEST(ContainsTimes, DescribesItselfCorrectly) {TEST8268,273010
TEST(AllOfArrayTest, BasicForms) {TEST8280,273376
TEST(AllOfArrayTest, Matchers) {TEST8322,274823
TEST(AnyOfArrayTest, BasicForms) {TEST8333,275172
TEST(AnyOfArrayTest, Matchers) {TEST8373,276569
TEST(AnyOfArrayTest, ExplainsMatchResultCorrectly) {TEST8385,276958
TEST(AllOfTest, HugeMatcher) {TEST8420,278512
TEST(AnyOfTest, HugeMatcher) {TEST8427,278812
namespace adl_test {adl_test8434,279112
MATCHER(M, "") {MATCHER8443,279558
bool AllOf(const T1& /*t1*/, const T2& /*t2*/) {AllOf8449,279642
TEST(AllOfTest, DoesNotCallAllOfUnqualified) {TEST8453,279709
bool AnyOf(const T1&, const T2&) {AnyOf8459,279894
TEST(AnyOfTest, DoesNotCallAnyOfUnqualified) {TEST8463,279947
TEST(AllOfTest, WorksOnMoveOnlyType) {TEST8470,280122
TEST(AnyOfTest, WorksOnMoveOnlyType) {TEST8476,280353
MATCHER(IsNotNull, "") { return arg != nullptr; }MATCHER8482,280584
TEST(MatcherMacroTest, WorksOnMoveOnlyType) {TEST8486,280718
MATCHER_P(UniquePointee, pointee, "") { return *arg == pointee; }MATCHER_P8492,280893
TEST(MatcherPMacroTest, WorksOnMoveOnlyType) {TEST8496,281046
TEST(ThrowsTest, Examples) {TEST8508,281419
TEST(ThrowsTest, PrintsExceptionWhat) {TEST8518,281735
TEST(ThrowsTest, DoesNotGenerateDuplicateCatchClauseWarning) {TEST8524,281937
TEST(ThrowsTest, CallableExecutedExactlyOnce) {TEST8529,282115
TEST(ThrowsTest, Describe) {TEST8562,283055
TEST(ThrowsTest, Success) {TEST8570,283303
TEST(ThrowsTest, FailWrongType) {TEST8578,283620
TEST(ThrowsTest, FailWrongTypeNonStd) {TEST8587,284003
TEST(ThrowsTest, FailNoThrow) {TEST8595,284327
class ThrowsPredicateTestThrowsPredicateTest8602,284618
TEST_P(ThrowsPredicateTest, Describe) {TEST_P8605,284708
TEST_P(ThrowsPredicateTest, Success) {TEST_P8614,285005
TEST_P(ThrowsPredicateTest, FailWrongType) {TEST_P8622,285315
TEST_P(ThrowsPredicateTest, FailWrongTypeNonStd) {TEST_P8631,285691
TEST_P(ThrowsPredicateTest, FailNoThrow) {TEST_P8639,286008
TEST(ThrowsPredicateCompilesTest, ExceptionMatcherAcceptsBroadType) {TEST8652,286549
TEST(ThrowsPredicateCompilesTest, MessageMatcherAcceptsNonMatcher) {TEST8672,287287

test/googletest/googlemock/test/gmock-function-mocker_test.cc,7035
namespace testing {testing51,2102
namespace gmock_function_mocker_test {gmock_function_mocker_test52,2122
class TemplatedCopyable {TemplatedCopyable69,2473
  TemplatedCopyable() {}TemplatedCopyable71,2508
  TemplatedCopyable(const U& other) {}  // NOLINTTemplatedCopyable74,2558
class FooInterface {FooInterface77,2612
  virtual ~FooInterface() {}~FooInterface79,2642
class MockFoo : public FooInterface {MockFoo139,4895
  MockFoo() {}MockFoo141,4942
class LegacyMockFoo : public FooInterface {LegacyMockFoo209,7956
  LegacyMockFoo() {}LegacyMockFoo211,8009
class FunctionMockerTest : public testing::Test {FunctionMockerTest286,11268
  FunctionMockerTest() : foo_(&mock_foo_) {}FunctionMockerTest288,11330
  FooInterface* const foo_;foo_290,11376
  T mock_foo_;mock_foo_291,11404
TYPED_TEST(FunctionMockerTest, MocksVoidFunction) {TYPED_TEST297,11604
TYPED_TEST(FunctionMockerTest, MocksNullaryFunction) {TYPED_TEST303,11784
TYPED_TEST(FunctionMockerTest, MocksUnaryFunction) {TYPED_TEST313,12055
TYPED_TEST(FunctionMockerTest, MocksBinaryFunction) {TYPED_TEST321,12301
TYPED_TEST(FunctionMockerTest, MocksDecimalFunction) {TYPED_TEST328,12504
TYPED_TEST(FunctionMockerTest, MocksFunctionWithNonConstReferenceArgument) {TYPED_TEST337,12846
TYPED_TEST(FunctionMockerTest, MocksFunctionWithConstReferenceArgument) {TYPED_TEST346,13146
TYPED_TEST(FunctionMockerTest, MocksFunctionWithConstArgument) {TYPED_TEST355,13446
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentNumber) {TYPED_TEST362,13698
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnArgumentType) {TYPED_TEST373,14137
TYPED_TEST(FunctionMockerTest, MocksFunctionsOverloadedOnConstnessOfThis) {TYPED_TEST384,14607
TYPED_TEST(FunctionMockerTest, MocksReturnTypeWithComma) {TYPED_TEST393,14952
TYPED_TEST(FunctionMockerTest, MocksTypeWithTemplatedCopyCtor) {TYPED_TEST402,15337
TYPED_TEST(FunctionMockerTest, MocksNullaryFunctionWithCallType) {TYPED_TEST410,15649
TYPED_TEST(FunctionMockerTest, MocksUnaryFunctionWithCallType) {TYPED_TEST420,15952
TYPED_TEST(FunctionMockerTest, MocksDecimalFunctionWithCallType) {TYPED_TEST431,16276
TYPED_TEST(FunctionMockerTest, MocksFunctionsConstFunctionWithCallType) {TYPED_TEST440,16670
TYPED_TEST(FunctionMockerTest, MocksReturnTypeWithCommaAndCallType) {TYPED_TEST446,16870
TEST(FunctionMockerTest, RefQualified) {TEST455,17157
class MockB {MockB489,18540
  MockB() {}MockB491,18563
class LegacyMockB {LegacyMockB499,18664
  LegacyMockB() {}LegacyMockB501,18693
class ExpectCallTest : public ::testing::Test {};ExpectCallTest510,18827
TYPED_TEST(ExpectCallTest, UnmentionedFunctionCanBeCalledAnyNumberOfTimes) {TYPED_TEST516,19089
class StackInterface {StackInterface534,19340
  virtual ~StackInterface() {}~StackInterface536,19372
class MockStack : public StackInterface<T> {MockStack547,19683
  MockStack() {}MockStack549,19737
class LegacyMockStack : public StackInterface<T> {LegacyMockStack565,20236
  LegacyMockStack() {}LegacyMockStack567,20296
class TemplateMockTest : public ::testing::Test {};TemplateMockTest583,20795
TYPED_TEST(TemplateMockTest, Works) {TYPED_TEST589,21032
TYPED_TEST(TemplateMockTest, MethodWithCommaInReturnTypeWorks) {TYPED_TEST611,21521
class StackInterfaceWithCallType {StackInterfaceWithCallType628,21987
  virtual ~StackInterfaceWithCallType() {}~StackInterfaceWithCallType630,22031
class MockStackWithCallType : public StackInterfaceWithCallType<T> {MockStackWithCallType641,22374
  MockStackWithCallType() {}MockStackWithCallType643,22452
class LegacyMockStackWithCallType : public StackInterfaceWithCallType<T> {LegacyMockStackWithCallType657,22927
  LegacyMockStackWithCallType() {}LegacyMockStackWithCallType659,23011
class TemplateMockTestWithCallType : public ::testing::Test {};TemplateMockTestWithCallType671,23440
TYPED_TEST(TemplateMockTestWithCallType, Works) {TYPED_TEST679,23801
#define MY_MOCK_METHODS1_ MY_MOCK_METHODS1_702,24330
#define LEGACY_MY_MOCK_METHODS1_ LEGACY_MY_MOCK_METHODS1_707,24530
class MockOverloadedOnArgNumber {MockOverloadedOnArgNumber712,24723
  MockOverloadedOnArgNumber() {}MockOverloadedOnArgNumber714,24766
  MY_MOCK_METHODS1_;MY_MOCK_METHODS1_716,24800
class LegacyMockOverloadedOnArgNumber {LegacyMockOverloadedOnArgNumber722,24898
  LegacyMockOverloadedOnArgNumber() {}LegacyMockOverloadedOnArgNumber724,24947
  LEGACY_MY_MOCK_METHODS1_;LEGACY_MY_MOCK_METHODS1_726,24987
class OverloadedMockMethodTest : public ::testing::Test {};OverloadedMockMethodTest733,25120
TYPED_TEST(OverloadedMockMethodTest, CanOverloadOnArgNumberInMacroBody) {TYPED_TEST739,25397
#define MY_MOCK_METHODS2_ MY_MOCK_METHODS2_750,25747
class MockOverloadedOnConstness {MockOverloadedOnConstness754,25867
  MockOverloadedOnConstness() {}MockOverloadedOnConstness756,25910
  MY_MOCK_METHODS2_;MY_MOCK_METHODS2_758,25944
TEST(MockMethodOverloadedMockMethodTest, CanOverloadOnConstnessInMacroBody) {TEST764,26042
TEST(MockMethodMockFunctionTest, WorksForVoidNullary) {TEST774,26411
TEST(MockMethodMockFunctionTest, WorksForNonVoidNullary) {TEST780,26540
TEST(MockMethodMockFunctionTest, WorksForVoidUnary) {TEST789,26767
TEST(MockMethodMockFunctionTest, WorksForNonVoidBinary) {TEST795,26899
TEST(MockMethodMockFunctionTest, WorksFor10Arguments) {TEST807,27266
TEST(MockMethodMockFunctionTest, AsStdFunction) {TEST817,27699
TEST(MockMethodMockFunctionTest, AsStdFunctionReturnsReference) {TEST828,28058
TEST(MockMethodMockFunctionTest, AsStdFunctionWithReferenceParameter) {TEST838,28318
static constexpr bool IsMockFunctionTemplateArgumentDeducedTo(IsMockFunctionTemplateArgumentDeducedTo851,28675
class MockMethodMockFunctionSignatureTest : public Test {};MockMethodMockFunctionSignatureTest859,28863
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST867,29212
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST874,29462
TYPED_TEST(TYPED_TEST881,29726
struct AlternateCallable {AlternateCallable891,30108
TYPED_TEST(MockMethodMockFunctionSignatureTest,TYPED_TEST894,30139
TYPED_TEST(TYPED_TEST901,30413
struct MockMethodSizes0 {MockMethodSizes0911,30765
struct MockMethodSizes1 {MockMethodSizes1914,30825
struct MockMethodSizes2 {MockMethodSizes2917,30888
struct MockMethodSizes3 {MockMethodSizes3920,30956
struct MockMethodSizes4 {MockMethodSizes4923,31029
struct LegacyMockMethodSizes0 {LegacyMockMethodSizes0927,31108
struct LegacyMockMethodSizes1 {LegacyMockMethodSizes1930,31175
struct LegacyMockMethodSizes2 {LegacyMockMethodSizes2933,31245
struct LegacyMockMethodSizes3 {LegacyMockMethodSizes3936,31320
struct LegacyMockMethodSizes4 {LegacyMockMethodSizes4939,31400
TEST(MockMethodMockFunctionTest, MockMethodSizeOverhead) {TEST944,31487
void DoesntThrow() noexcept;noexcept960,32239
struct MockMethodNoexceptSpecifier {MockMethodNoexceptSpecifier961,32268
TEST(MockMethodMockFunctionTest, NoexceptSpecifierPreserved) {TEST973,32868

test/googletest/googlemock/test/gmock-nice-strict_test.cc,3442
class Mock {Mock40,1814
  Mock() {}Mock42,1836
namespace testing {testing50,1937
namespace gmock_nice_strict_test {gmock_nice_strict_test51,1957
class NotDefaultConstructible {NotDefaultConstructible64,2261
  explicit NotDefaultConstructible(int) {}NotDefaultConstructible66,2302
class CallsMockMethodInDestructor {CallsMockMethodInDestructor69,2349
  ~CallsMockMethodInDestructor() { OnDestroy(); }~CallsMockMethodInDestructor71,2394
class Foo {Foo77,2535
  virtual ~Foo() {}~Foo79,2556
class MockFoo : public Foo {MockFoo85,2647
  MockFoo() {}MockFoo87,2685
  void Delete() { delete this; }Delete88,2700
class MockBar {MockBar98,2939
  explicit MockBar(const std::string& s) : str_(s) {}MockBar100,2964
  MockBar(char a1, char a2, std::string a3, std::string a4, int a5, int a6,MockBar102,3019
  virtual ~MockBar() {}~MockBar108,3328
  const std::string& str() const { return str_; }str110,3353
  std::string str_;str_116,3490
class MockBaz {MockBaz122,3560
  class MoveOnly {MoveOnly124,3585
  MockBaz(MoveOnly) {}MockBaz135,3823
TEST(RawMockTest, WarningForUninterestingCall) {TEST141,3953
TEST(RawMockTest, WarningForUninterestingCallAfterDeath) {TEST158,4422
TEST(RawMockTest, InfoForUninterestingCall) {TEST177,4969
TEST(RawMockTest, IsNaggy_IsNice_IsStrict) {TEST190,5307
TEST(NiceMockTest, NoWarningForUninterestingCall) {TEST198,5568
TEST(NiceMockTest, NoWarningForUninterestingCallAfterDeath) {TEST209,5860
TEST(NiceMockTest, InfoForUninterestingCall) {TEST222,6239
TEST(NiceMockTest, AllowsExpectedCall) {TEST238,6680
TEST(NiceMockTest, ThrowsExceptionForUnknownReturnTypes) {TEST248,6978
TEST(NiceMockTest, UnexpectedCallFails) {TEST263,7428
TEST(NiceMockTest, NonDefaultConstructor) {TEST272,7715
TEST(NiceMockTest, NonDefaultConstructor10) {TEST282,7972
TEST(NiceMockTest, AllowLeak) {TEST291,8222
TEST(NiceMockTest, MoveOnlyConstructor) {TEST298,8391
TEST(NiceMockTest, AcceptsClassNamedMock) {TEST304,8596
TEST(NiceMockTest, IsNiceInDestructor) {TEST310,8717
TEST(NiceMockTest, IsNaggy_IsNice_IsStrict) {TEST317,8908
TEST(NaggyMockTest, WarningForUninterestingCall) {TEST327,9217
TEST(NaggyMockTest, WarningForUninterestingCallAfterDeath) {TEST344,9711
TEST(NaggyMockTest, AllowsExpectedCall) {TEST364,10299
TEST(NaggyMockTest, UnexpectedCallFails) {TEST372,10491
TEST(NaggyMockTest, NonDefaultConstructor) {TEST382,10810
TEST(NaggyMockTest, NonDefaultConstructor10) {TEST392,11074
TEST(NaggyMockTest, AllowLeak) {TEST401,11332
TEST(NaggyMockTest, MoveOnlyConstructor) {TEST408,11504
TEST(NaggyMockTest, AcceptsClassNamedMock) {TEST414,11713
TEST(NaggyMockTest, IsNaggyInDestructor) {TEST420,11839
TEST(NaggyMockTest, IsNaggy_IsNice_IsStrict) {TEST436,12288
TEST(StrictMockTest, AllowsExpectedCall) {TEST444,12549
TEST(StrictMockTest, UnexpectedCallFails) {TEST452,12747
TEST(StrictMockTest, UninterestingCallFails) {TEST461,13044
TEST(StrictMockTest, UninterestingCallFailsAfterDeath) {TEST470,13344
TEST(StrictMockTest, NonDefaultConstructor) {TEST482,13765
TEST(StrictMockTest, NonDefaultConstructor10) {TEST492,14102
TEST(StrictMockTest, AllowLeak) {TEST501,14434
TEST(StrictMockTest, MoveOnlyConstructor) {TEST508,14609
TEST(StrictMockTest, AcceptsClassNamedMock) {TEST514,14822
TEST(StrictMockTest, IsStrictInDestructor) {TEST520,14953
TEST(StrictMockTest, IsNaggy_IsNice_IsStrict) {TEST530,15250

test/googletest/googlemock/test/gmock_link2_test.cc,35
#define LinkTest LinkTest37,1814

test/googletest/googlemock/test/gmock_stress_test.cc,880
namespace testing {testing37,1705
const int kMaxTestThreads = 50;kMaxTestThreads45,1888
const int kRepeat = 50;kRepeat48,1974
class MockFoo {MockFoo50,1999
void JoinAndDelete(ThreadWithParam<T>* t) {JoinAndDelete58,2246
struct Dummy {};Dummy63,2318
void TestConcurrentMockObjects(Dummy /* dummy */) {TestConcurrentMockObjects68,2464
struct Helper1Param {Helper1Param94,3210
  MockFoo* mock_foo;mock_foo95,3232
  int* count;count96,3253
void Helper1(Helper1Param param) {Helper199,3271
void TestConcurrentCallsOnSameObject(Dummy /* dummy */) {TestConcurrentCallsOnSameObject119,3795
void Helper2(MockFoo* foo) {Helper2150,4730
void TestPartiallyOrderedExpectationsWithThreads(Dummy /* dummy */) {TestPartiallyOrderedExpectationsWithThreads158,4887
TEST(StressTest, CanUseGMockWithThreads) {TEST197,5674
int main(int argc, char **argv) {main232,7034

test/googletest/googlemock/test/gmock_leak_test.py,752
PROGRAM_PATH = gmock_test_utils.GetTestExecutablePath('gmock_leak_test_')PROGRAM_PATH36,1646
environ = gmock_test_utils.environenviron41,1925
SetEnvVar = gmock_test_utils.SetEnvVarSetEnvVar42,1960
class GMockLeakTest(gmock_test_utils.TestCase):GMockLeakTest52,2334
  def testCatchesLeakedMockByDefault(self):testCatchesLeakedMockByDefault54,2383
  def testDoesNotCatchLeakedMockWhenDisabled(self):testDoesNotCatchLeakedMockWhenDisabled64,2734
  def testCatchesLeakedMockWhenEnabled(self):testCatchesLeakedMockWhenEnabled76,3231
  def testCatchesLeakedMockWhenEnabledWithExplictFlagValue(self):testCatchesLeakedMockWhenEnabledWithExplictFlagValue88,3722
  def testCatchesMultipleLeakedMocks(self):testCatchesMultipleLeakedMocks95,4015

test/googletest/googlemock/test/gmock-cardinalities_test.cc,1589
class MockFoo {MockFoo52,2033
  MockFoo() {}MockFoo54,2058
TEST(CardinalityTest, IsDefaultConstructable) {TEST62,2233
TEST(CardinalityTest, IsCopyable) {TEST67,2349
TEST(CardinalityTest, IsOverSaturatedByCallCountWorks) {TEST81,2772
TEST(CardinalityTest, CanDescribeActualCallCount) {TEST90,3104
TEST(AnyNumber, Works) {TEST109,3628
TEST(AnyNumberTest, HasCorrectBounds) {TEST126,4101
TEST(AtLeastTest, OnNegativeNumber) {TEST134,4297
TEST(AtLeastTest, OnZero) {TEST140,4443
TEST(AtLeastTest, OnPositiveNumber) {TEST154,4821
TEST(AtLeastTest, HasCorrectBounds) {TEST181,5578
TEST(AtMostTest, OnNegativeNumber) {TEST189,5770
TEST(AtMostTest, OnZero) {TEST195,5914
TEST(AtMostTest, OnPositiveNumber) {TEST209,6282
TEST(AtMostTest, HasCorrectBounds) {TEST236,7050
TEST(BetweenTest, OnNegativeStart) {TEST244,7238
TEST(BetweenTest, OnNegativeEnd) {TEST250,7406
TEST(BetweenTest, OnStartBiggerThanEnd) {TEST256,7572
TEST(BetweenTest, OnZeroStartAndZeroEnd) {TEST263,7765
TEST(BetweenTest, OnZeroStartAndNonZeroEnd) {TEST278,8154
TEST(BetweenTest, OnSameStartAndEnd) {TEST296,8644
TEST(BetweenTest, OnDifferentStartAndEnd) {TEST314,9122
TEST(BetweenTest, HasCorrectBounds) {TEST335,9709
TEST(ExactlyTest, OnNegativeNumber) {TEST343,9899
TEST(ExactlyTest, OnZero) {TEST349,10045
TEST(ExactlyTest, OnPositiveNumber) {TEST363,10415
TEST(ExactlyTest, HasCorrectBounds) {TEST387,11074
class EvenCardinality : public CardinalityInterface {EvenCardinality396,11363
TEST(MakeCardinalityTest, ConstructsCardinalityFromInterface) {TEST416,11933

test/googletest/googlemock/test/gmock-pp-string_test.cc,714
namespace testing {testing39,1762
::testing::Matcher<const std::string&> SameExceptSpaces(const std::string& s) {SameExceptSpaces44,1926
#define EXPECT_EXPANSION(EXPECT_EXPANSION56,2440
TEST(Macros, Cat) {TEST59,2553
TEST(Macros, Narg) {TEST64,2668
TEST(Macros, Comma) {TEST76,3059
TEST(Macros, IsEmpty) {TEST82,3231
#define GMOCK_PP_INTERNAL_IS_EMPTY_TEST_1GMOCK_PP_INTERNAL_IS_EMPTY_TEST_188,3445
TEST(Macros, If) {TEST92,3569
TEST(Macros, HeadTail) {TEST97,3685
TEST(Macros, Parentheses) {TEST107,4004
TEST(Macros, Increment) {TEST123,4702
#define JOINER_CAT(JOINER_CAT133,4986
#define JOINER(JOINER134,5016
TEST(Macros, Repeat) {TEST136,5080
TEST(Macros, ForEach) {TEST165,6630

test/googletest/googlemock/test/gmock_test_utils.py,873
SCRIPT_DIR = os.path.dirname(__file__) or '.'SCRIPT_DIR36,1666
gtest_tests_util_dir = os.path.join(SCRIPT_DIR, '../../googletest/test')gtest_tests_util_dir39,1746
  GTEST_TESTS_UTIL_DIR = gtest_tests_util_dirGTEST_TESTS_UTIL_DIR41,1859
  GTEST_TESTS_UTIL_DIR = os.path.join(SCRIPT_DIR, '../../googletest/test')GTEST_TESTS_UTIL_DIR43,1911
def GetSourceDir():GetSourceDir50,2075
def GetTestExecutablePath(executable_name):GetTestExecutablePath56,2215
def GetExitStatus(exit_code):GetExitStatus72,2632
Subprocess = gtest_test_utils.SubprocessSubprocess96,3297
TestCase = gtest_test_utils.TestCaseTestCase97,3338
environ = gtest_test_utils.environenviron98,3375
SetEnvVar = gtest_test_utils.SetEnvVarSetEnvVar99,3410
PREMATURE_EXIT_FILE_ENV_VAR = gtest_test_utils.PREMATURE_EXIT_FILE_ENV_VARPREMATURE_EXIT_FILE_ENV_VAR100,3449
def Main():Main105,3554

test/googletest/googlemock/test/gmock-port_test.cc,39
TEST(DummyTest, Dummy) {}TEST42,1951

test/googletest/googlemock/test/gmock_test.cc,974
void TestInitGoogleMock(const Char* (&argv)[M], const Char* (&new_argv)[N],TestInitGoogleMock48,2038
TEST(InitGoogleMockTest, ParsesInvalidCommandLine) {TEST64,2612
TEST(InitGoogleMockTest, ParsesEmptyCommandLine) {TEST72,2805
TEST(InitGoogleMockTest, ParsesSingleFlag) {TEST80,3018
TEST(InitGoogleMockTest, ParsesMultipleFlags) {TEST88,3232
TEST(InitGoogleMockTest, ParsesUnrecognizedFlag) {TEST101,3745
TEST(InitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {TEST109,4008
TEST(WideInitGoogleMockTest, ParsesInvalidCommandLine) {TEST118,4321
TEST(WideInitGoogleMockTest, ParsesEmptyCommandLine) {TEST126,4524
TEST(WideInitGoogleMockTest, ParsesSingleFlag) {TEST134,4749
TEST(WideInitGoogleMockTest, ParsesMultipleFlags) {TEST142,4976
TEST(WideInitGoogleMockTest, ParsesUnrecognizedFlag) {TEST155,5493
TEST(WideInitGoogleMockTest, ParsesGoogleMockFlagAndUnrecognizedFlag) {TEST163,5770
TEST(FlagTest, IsAccessibleInCode) {TEST175,6220

test/googletest/googlemock/test/gmock-more-actions_test.cc,13780
namespace testing {testing50,1955
namespace gmock_more_actions_test {gmock_more_actions_test51,1975
inline short Short(short n) { return n; }  // NOLINTShort68,2419
inline char Char(char ch) { return ch; }Char69,2472
int Nullary() { return 1; }Nullary72,2577
bool g_done = false;g_done74,2606
bool Unary(int x) { return x < 0; }Unary76,2628
bool ByConstRef(const std::string& s) { return s == "Hi"; }ByConstRef78,2665
const double g_double = 0;g_double80,2726
bool ReferencesGlobalDouble(const double& x) { return &x == &g_double; }ReferencesGlobalDouble81,2753
struct UnaryFunctor {UnaryFunctor83,2827
  int operator()(bool x) { return x ? 1 : -1; }operator ()84,2849
const char* Binary(const char* input, short n) { return input + n; }  // NOLINTBinary87,2901
int Ternary(int x, char y, short z) { return x + y + z; }  // NOLINTTernary89,2982
int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }SumOf491,3052
int SumOfFirst2(int a, int b, Unused, Unused) { return a + b; }SumOfFirst293,3118
int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }SumOf595,3183
struct SumOf5Functor {SumOf5Functor97,3260
  int operator()(int a, int b, int c, int d, int e) {operator ()98,3283
int SumOf6(int a, int b, int c, int d, int e, int f) {SumOf6103,3375
struct SumOf6Functor {SumOf6Functor107,3465
  int operator()(int a, int b, int c, int d, int e, int f) {operator ()108,3488
std::string Concat7(const char* s1, const char* s2, const char* s3,Concat7113,3591
std::string Concat8(const char* s1, const char* s2, const char* s3,Concat8119,3824
std::string Concat9(const char* s1, const char* s2, const char* s3,Concat9125,4078
std::string Concat10(const char* s1, const char* s2, const char* s3,Concat10131,4353
class Foo {Foo138,4675
  Foo() : value_(123) {}Foo140,4696
  int Nullary() const { return value_; }Nullary142,4722
  short Unary(long x) { return static_cast<short>(value_ + x); }  // NOLINTUnary144,4764
  std::string Binary(const std::string& str, char c) const { return str + c; }Binary146,4841
  int Ternary(int x, bool y, char z) { return value_ + x + y*z; }Ternary148,4921
  int SumOf4(int a, int b, int c, int d) const {SumOf4150,4988
  int SumOfLast2(Unused, Unused, int a, int b) const { return a + b; }SumOfLast2154,5077
  int SumOf5(int a, int b, int c, int d, int e) { return a + b + c + d + e; }SumOf5156,5149
  int SumOf6(int a, int b, int c, int d, int e, int f) {SumOf6158,5228
  std::string Concat7(const char* s1, const char* s2, const char* s3,Concat7162,5324
  std::string Concat8(const char* s1, const char* s2, const char* s3,Concat8168,5567
  std::string Concat9(const char* s1, const char* s2, const char* s3,Concat9174,5831
  std::string Concat10(const char* s1, const char* s2, const char* s3,Concat10180,6116
  int value_;value_188,6460
TEST(InvokeTest, Nullary) {TEST192,6527
TEST(InvokeTest, Unary) {TEST198,6699
TEST(InvokeTest, Binary) {TEST205,6920
TEST(InvokeTest, Ternary) {TEST212,7160
TEST(InvokeTest, FunctionThatTakes4Arguments) {TEST218,7370
TEST(InvokeTest, FunctionThatTakes5Arguments) {TEST224,7603
TEST(InvokeTest, FunctionThatTakes6Arguments) {TEST230,7849
inline const char* CharPtr(const char* s) { return s; }CharPtr238,8161
TEST(InvokeTest, FunctionThatTakes7Arguments) {TEST241,8270
TEST(InvokeTest, FunctionThatTakes8Arguments) {TEST252,8772
TEST(InvokeTest, FunctionThatTakes9Arguments) {TEST263,9302
TEST(InvokeTest, FunctionThatTakes10Arguments) {TEST275,9882
TEST(InvokeTest, FunctionWithUnusedParameters) {TEST288,10552
TEST(InvokeTest, MethodWithUnusedParameters) {TEST301,11060
TEST(InvokeTest, Functor) {TEST312,11460
TEST(InvokeTest, FunctionWithCompatibleType) {TEST318,11665
TEST(InvokeMethodTest, Nullary) {TEST326,11983
TEST(InvokeMethodTest, Unary) {TEST333,12184
TEST(InvokeMethodTest, Binary) {TEST340,12393
TEST(InvokeMethodTest, Ternary) {TEST349,12697
TEST(InvokeMethodTest, MethodThatTakes4Arguments) {TEST356,12938
TEST(InvokeMethodTest, MethodThatTakes5Arguments) {TEST363,13196
TEST(InvokeMethodTest, MethodThatTakes6Arguments) {TEST370,13467
TEST(InvokeMethodTest, MethodThatTakes7Arguments) {TEST379,13770
TEST(InvokeMethodTest, MethodThatTakes8Arguments) {TEST391,14297
TEST(InvokeMethodTest, MethodThatTakes9Arguments) {TEST403,14852
TEST(InvokeMethodTest, MethodThatTakes10Arguments) {TEST416,15457
TEST(InvokeMethodTest, MethodWithCompatibleType) {TEST430,16139
TEST(WithoutArgsTest, NoArg) {TEST438,16439
TEST(WithArgTest, OneArg) {TEST444,16647
TEST(ReturnArgActionTest, WorksForOneArgIntArg0) {TEST450,16856
TEST(ReturnArgActionTest, WorksForMultiArgBoolArg0) {TEST455,17002
TEST(ReturnArgActionTest, WorksForMultiArgStringArg2) {TEST460,17181
TEST(SaveArgActionTest, WorksForSameType) {TEST465,17397
TEST(SaveArgActionTest, WorksForCompatibleType) {TEST472,17574
TEST(SaveArgPointeeActionTest, WorksForSameType) {TEST479,17772
TEST(SaveArgPointeeActionTest, WorksForCompatibleType) {TEST487,17996
TEST(SetArgRefereeActionTest, WorksForSameType) {TEST495,18232
TEST(SetArgRefereeActionTest, WorksForCompatibleType) {TEST502,18417
TEST(SetArgRefereeActionTest, WorksWithExtraArguments) {TEST509,18625
class DeletionTester {DeletionTester518,19029
  explicit DeletionTester(bool* is_deleted)DeletionTester520,19061
  ~DeletionTester() {~DeletionTester526,19210
  bool* is_deleted_;is_deleted_531,19272
TEST(DeleteArgActionTest, OneArg) {TEST534,19297
TEST(DeleteArgActionTest, TenArgs) {TEST543,19581
TEST(ThrowActionTest, ThrowsGivenExceptionInVoidFunction) {TEST555,19999
class MyException {};MyException560,20159
TEST(ThrowActionTest, ThrowsGivenExceptionInNonVoidFunction) {TEST562,20182
TEST(ThrowActionTest, ThrowsGivenExceptionInNullaryFunction) {TEST567,20368
class Object {Object572,20544
  virtual ~Object() {}~Object574,20568
  virtual void Func() {}Func575,20591
class MockObject : public Object {MockObject578,20620
TEST(ThrowActionTest, Times0) {TEST584,20739
TEST(SetArrayArgumentTest, SetsTheNthArray) {TEST603,21302
TEST(SetArrayArgumentTest, SetsTheNthArrayWithEmptyRange) {TEST639,22284
TEST(SetArrayArgumentTest, SetsTheNthArrayWithConvertibleType) {TEST655,22753
TEST(SetArrayArgumentTest, SetsTheNthArrayWithIteratorArgument) {TEST670,23243
TEST(ReturnPointeeTest, Works) {TEST680,23591
TEST(InvokeArgumentTest, Function0) {TEST692,23880
TEST(InvokeArgumentTest, Functor1) {TEST698,24097
TEST(InvokeArgumentTest, Function5) {TEST704,24318
TEST(InvokeArgumentTest, Functor5) {TEST711,24581
TEST(InvokeArgumentTest, Function6) {TEST718,24833
TEST(InvokeArgumentTest, Functor6) {TEST725,25110
TEST(InvokeArgumentTest, Function7) {TEST732,25371
TEST(InvokeArgumentTest, Function8) {TEST741,25792
TEST(InvokeArgumentTest, Function9) {TEST750,26232
TEST(InvokeArgumentTest, Function10) {TEST759,26692
TEST(InvokeArgumentTest, ByPointerFunction) {TEST768,27137
TEST(InvokeArgumentTest, FunctionWithCStringLiteral) {TEST776,27501
TEST(InvokeArgumentTest, ByConstReferenceFunction) {TEST783,27816
TEST(InvokeArgumentTest, ByExplicitConstReferenceFunction) {TEST794,28314
TEST(DoAllTest, TwoActions) {TEST806,28781
TEST(DoAllTest, ThreeActions) {TEST815,29026
TEST(DoAllTest, FourActions) {TEST825,29340
TEST(DoAllTest, FiveActions) {TEST838,29714
TEST(DoAllTest, SixActions) {TEST852,30157
TEST(DoAllTest, SevenActions) {TEST867,30664
TEST(DoAllTest, EightActions) {TEST884,31250
TEST(DoAllTest, NineActions) {TEST904,31932
TEST(DoAllTest, TenActions) {TEST925,32700
TEST(DoAllTest, NoArgs) {TEST949,33507
TEST(DoAllTest, MoveOnlyArgs) {TEST956,33680
TEST(DoAllTest, ImplicitlyConvertsActionArguments) {TEST965,33999
ACTION(Return5) { return 5; }ACTION991,35079
TEST(ActionMacroTest, WorksWhenNotReferencingArguments) {TEST993,35110
ACTION(IncrementArg1) { (*arg1)++; }ACTION1002,35422
TEST(ActionMacroTest, WorksWhenReturningVoid) {TEST1004,35460
ACTION(IncrementArg2) {ACTION1013,35707
TEST(ActionMacroTest, CanReferenceArgumentType) {TEST1019,35813
ACTION(Sum2) {ACTION1028,36092
TEST(ActionMacroTest, CanReferenceArgumentTuple) {TEST1034,36262
int Dummy(bool flag) { return flag ? 1 : 0; }Dummy1044,36532
ACTION(InvokeDummy) {ACTION1048,36596
TEST(ActionMacroTest, CanReferenceMockFunctionType) {TEST1054,36723
ACTION(InvokeDummy2) {ACTION1062,37008
TEST(ActionMacroTest, CanReferenceMockFunctionReturnType) {TEST1068,37129
ACTION(ReturnAddrOfConstBoolReferenceArg) {ACTION1075,37406
TEST(ActionMacroTest, WorksForConstReferenceArg) {TEST1080,37517
ACTION(ReturnAddrOfIntReferenceArg) {ACTION1087,37814
TEST(ActionMacroTest, WorksForNonConstReferenceArg) {TEST1092,37912
namespace action_test {action_test1099,38169
ACTION(Sum) { return arg0 + arg1; }ACTION1100,38193
TEST(ActionMacroTest, WorksInNamespace) {TEST1103,38258
ACTION(PlusTwo) { return arg0 + 2; }ACTION1110,38505
TEST(ActionMacroTest, WorksForDifferentArgumentNumbers) {TEST1112,38543
ACTION_P(Plus, n) { return arg0 + n; }ACTION_P1122,38872
TEST(ActionPMacroTest, DefinesParameterizedAction) {TEST1124,38912
ACTION_P(TypedPlus, n) {ACTION_P1131,39161
TEST(ActionPMacroTest, CanReferenceArgumentAndParameterTypes) {TEST1137,39247
TEST(ActionPMacroTest, WorksInCompatibleMockFunction) {TEST1144,39523
ACTION(OverloadedAction) { return arg0 ? arg1 : "hello"; }ACTION1154,39876
ACTION_P(OverloadedAction, default_value) {ACTION_P1156,39936
ACTION_P2(OverloadedAction, true_value, false_value) {ACTION_P21160,40021
TEST(ActionMacroTest, CanDefineOverloadedActions) {TEST1164,40121
ACTION_P3(Plus, m, n, k) { return arg0 + m + n + k; }ACTION_P31182,40876
TEST(ActionPnMacroTest, WorksFor3Parameters) {TEST1184,40931
ACTION_P4(Plus, p0, p1, p2, p3) { return arg0 + p0 + p1 + p2 + p3; }ACTION_P41194,41317
TEST(ActionPnMacroTest, WorksFor4Parameters) {TEST1196,41387
ACTION_P5(Plus, p0, p1, p2, p3, p4) { return arg0 + p0 + p1 + p2 + p3 + p4; }ACTION_P51201,41545
TEST(ActionPnMacroTest, WorksFor5Parameters) {TEST1203,41624
ACTION_P6(Plus, p0, p1, p2, p3, p4, p5) {ACTION_P61208,41789
TEST(ActionPnMacroTest, WorksFor6Parameters) {TEST1212,41879
ACTION_P7(Plus, p0, p1, p2, p3, p4, p5, p6) {ACTION_P71217,42051
TEST(ActionPnMacroTest, WorksFor7Parameters) {TEST1221,42150
ACTION_P8(Plus, p0, p1, p2, p3, p4, p5, p6, p7) {ACTION_P81226,42329
TEST(ActionPnMacroTest, WorksFor8Parameters) {TEST1230,42437
ACTION_P9(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8) {ACTION_P91236,42635
TEST(ActionPnMacroTest, WorksFor9Parameters) {TEST1240,42752
ACTION_P10(Plus, p0, p1, p2, p3, p4, p5, p6, p7, p8, last_param) {ACTION_P101246,42957
TEST(ActionPnMacroTest, WorksFor10Parameters) {TEST1252,43148
ACTION_P2(PadArgument, prefix, suffix) {ACTION_P21260,43427
TEST(ActionPnMacroTest, SimpleTypePromotion) {TEST1267,43665
ACTION_P3(ConcatImpl, a, b, c) {ACTION_P31281,44216
ConcatImplActionP3<std::string, T1, T2> Concat(const std::string& a, T1 b,Concat1296,44735
ConcatImplActionP3<T1, int, T2> Concat(T1 a, int b, T2 c) {Concat1315,45491
TEST(ActionPnMacroTest, CanPartiallyRestrictParameterTypes) {TEST1319,45584
ACTION(DoFoo) {}ACTION1329,45877
ACTION_P(DoFoo, p) {}ACTION_P1330,45894
ACTION_P2(DoFoo, p0, p1) {}ACTION_P21331,45916
TEST(ActionPnMacroTest, TypesAreCorrect) {TEST1333,45945
ACTION_P(Plus1, x) { return x; }ACTION_P1373,47262
ACTION_P2(Plus2, x, y) { return x + y; }ACTION_P21374,47295
ACTION_P3(Plus3, x, y, z) { return x + y + z; }ACTION_P31375,47336
ACTION_P10(Plus10, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {ACTION_P101376,47384
TEST(ActionPnMacroTest, CanExplicitlyInstantiateWithReferenceTypes) {TEST1380,47506
class TenArgConstructorClass {TenArgConstructorClass1400,48175
  TenArgConstructorClass(int a1, int a2, int a3, int a4, int a5, int a6, int a7,TenArgConstructorClass1402,48215
  int value_;value_1405,48414
ACTION_TEMPLATE(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T),ACTION_TEMPLATE1409,48502
TEST(ActionTemplateTest, WorksWithoutValueParam) {TEST1414,48624
ACTION_TEMPLATE(CreateNew, HAS_1_TEMPLATE_PARAMS(typename, T),ACTION_TEMPLATE1421,48845
TEST(ActionTemplateTest, WorksWithValueParams) {TEST1426,48973
ACTION_TEMPLATE(MyDeleteArg, HAS_1_TEMPLATE_PARAMS(int, k),ACTION_TEMPLATE1434,49216
class BoolResetter {BoolResetter1440,49392
  explicit BoolResetter(bool* value) : value_(value) {}BoolResetter1442,49422
  ~BoolResetter() { *value_ = false; }~BoolResetter1443,49478
  bool* value_;value_1446,49528
TEST(ActionTemplateTest, WorksForIntegralTemplateParams) {TEST1449,49548
ACTION_TEMPLATE(ReturnSmartPointer,ACTION_TEMPLATE1459,49918
TEST(ActionTemplateTest, WorksForTemplateTemplateParameters) {TEST1466,50184
struct GiantTemplate {GiantTemplate1476,50614
  explicit GiantTemplate(int a_value) : value(a_value) {}GiantTemplate1478,50646
  int value;value1479,50704
ACTION_TEMPLATE(ReturnGiant,ACTION_TEMPLATE1482,50721
TEST(ActionTemplateTest, WorksFor10TemplateParameters) {TEST1491,51173
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1501,51654
TEST(ActionTemplateTest, WorksFor10ValueParameters) {TEST1506,51885
ACTION(ReturnSum) { return 0; }ACTION1514,52170
ACTION_P(ReturnSum, x) { return x; }ACTION_P1516,52203
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1518,52241
ACTION_TEMPLATE(ReturnSum, HAS_1_TEMPLATE_PARAMS(typename, Number),ACTION_TEMPLATE1523,52397
ACTION_TEMPLATE(ReturnSum, HAS_2_TEMPLATE_PARAMS(typename, Number, int, k),ACTION_TEMPLATE1528,52562
TEST(ActionTemplateTest, CanBeOverloadedOnNumberOfValueParameters) {TEST1533,52748

test/googletest/googlemock/test/gmock-internal-utils_test.cc,4812
#define GTEST_IMPLEMENTATION_ GTEST_IMPLEMENTATION_56,2242
#undef GTEST_IMPLEMENTATION_GTEST_IMPLEMENTATION_58,2310
namespace proto2 {proto264,2416
namespace testing {testing68,2474
namespace internal {internal69,2494
TEST(JoinAsTupleTest, JoinsEmptyTuple) {TEST73,2529
TEST(JoinAsTupleTest, JoinsOneTuple) {TEST77,2614
TEST(JoinAsTupleTest, JoinsTwoTuple) {TEST82,2748
TEST(JoinAsTupleTest, JoinsTenTuple) {TEST87,2892
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsNoWord) {TEST93,3115
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsDigits) {TEST99,3344
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContainsCamelCaseWords) {TEST106,3644
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameContains_SeparatedWords) {TEST114,4058
TEST(ConvertIdentifierNameToWordsTest, WorksWhenNameIsMixture) {TEST121,4406
TEST(GetRawPointerTest, WorksForSmartPointers) {TEST127,4649
TEST(GetRawPointerTest, WorksForRawPointers) {TEST136,4987
class Base {};Base145,5171
class Derived : public Base {};Derived146,5186
TEST(KindOfTest, Bool) {TEST148,5219
TEST(KindOfTest, Integer) {TEST152,5300
TEST(KindOfTest, FloatingPoint) {TEST172,6315
TEST(KindOfTest, Other) {TEST178,6548
TEST(LosslessArithmeticConvertibleTest, BoolToBool) {TEST186,6789
TEST(LosslessArithmeticConvertibleTest, BoolToInteger) {TEST190,6913
TEST(LosslessArithmeticConvertibleTest, BoolToFloatingPoint) {TEST197,7200
TEST(LosslessArithmeticConvertibleTest, IntegerToBool) {TEST202,7403
TEST(LosslessArithmeticConvertibleTest, IntegerToInteger) {TEST207,7607
TEST(LosslessArithmeticConvertibleTest, IntegerToFloatingPoint) {TEST241,9153
TEST(LosslessArithmeticConvertibleTest, FloatingPointToBool) {TEST250,9589
TEST(LosslessArithmeticConvertibleTest, FloatingPointToInteger) {TEST255,9794
TEST(LosslessArithmeticConvertibleTest, FloatingPointToFloatingPoint) {TEST261,10090
TEST(TupleMatchesTest, WorksForSize0) {TEST286,11158
TEST(TupleMatchesTest, WorksForSize1) {TEST293,11297
TEST(TupleMatchesTest, WorksForSize2) {TEST301,11525
TEST(TupleMatchesTest, WorksForSize5) {TEST312,11931
TEST(AssertTest, SucceedsOnTrue) {TEST327,12529
TEST(AssertTest, FailsFatallyOnFalse) {TEST333,12752
TEST(ExpectTest, SucceedsOnTrue) {TEST344,13017
TEST(ExpectTest, FailsNonfatallyOnFalse) {TEST350,13244
class LogIsVisibleTest : public ::testing::Test {LogIsVisibleTest362,13548
  std::string original_verbose_;original_verbose_368,13760
TEST_F(LogIsVisibleTest, AlwaysReturnsTrueIfVerbosityIsInfo) {TEST_F371,13797
TEST_F(LogIsVisibleTest, AlwaysReturnsFalseIfVerbosityIsError) {TEST_F377,13981
TEST_F(LogIsVisibleTest, WorksWhenVerbosityIsWarning) {TEST_F383,14170
void TestLogWithSeverity(const std::string& verbosity, LogSeverity severity,TestLogWithSeverity395,14507
TEST(LogTest, NoStackTraceWhenStackFramesToSkipIsNegative) {TEST415,15271
struct MockStackTraceGetter : testing::internal::OsStackTraceGetterInterface {MockStackTraceGetter424,15585
TEST(LogTest, NoSkippingStackFrameInOptMode) {TEST434,15969
TEST(LogTest, AllLogsArePrintedWhenVerbosityIsInfo) {TEST473,17361
TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsWarning) {TEST480,17625
TEST(LogTest, NoLogsArePrintedWhenVerbosityIsError) {TEST487,17896
TEST(LogTest, OnlyWarningsArePrintedWhenVerbosityIsInvalid) {TEST494,18162
std::string GrabOutput(void(*logger)(), const char* verbosity) {GrabOutput501,18417
class DummyMock {DummyMock510,18677
void ExpectCallLogger() {ExpectCallLogger516,18792
TEST(ExpectCallTest, LogsWhenVerbosityIsInfo) {TEST523,18975
TEST(ExpectCallTest, DoesNotLogWhenVerbosityIsWarning) {TEST530,19253
TEST(ExpectCallTest,  DoesNotLogWhenVerbosityIsError) {TEST536,19481
void OnCallLogger() {OnCallLogger540,19615
TEST(OnCallTest, LogsWhenVerbosityIsInfo) {TEST546,19765
TEST(OnCallTest, DoesNotLogWhenVerbosityIsWarning) {TEST553,20027
TEST(OnCallTest, DoesNotLogWhenVerbosityIsError) {TEST559,20243
void OnCallAnyArgumentLogger() {OnCallAnyArgumentLogger563,20368
TEST(OnCallTest, LogsAnythingArgument) {TEST569,20510
TEST(StlContainerViewTest, WorksForStlContainer) {TEST578,20763
TEST(StlContainerViewTest, WorksForStaticNativeArray) {TEST594,21255
TEST(StlContainerViewTest, WorksForDynamicNativeArray) {TEST621,22108
TEST(FunctionTest, Nullary) {TEST654,23162
TEST(FunctionTest, Unary) {TEST664,23617
TEST(FunctionTest, Binary) {TEST677,24238
TEST(FunctionTest, LongArgumentList) {TEST694,25099
TEST(Base64Unescape, InvalidString) {TEST719,26281
TEST(Base64Unescape, ShortString) {TEST724,26404
TEST(Base64Unescape, ShortStringWithPadding) {TEST730,26571
TEST(Base64Unescape, ShortStringWithoutPadding) {TEST736,26748
TEST(Base64Unescape, LongStringWithWhiteSpaces) {TEST742,26927

test/googletest/googlemock/test/gmock-spec-builders_test.cc,12257
namespace testing {testing48,1949
namespace internal {internal49,1969
class ExpectationTester {ExpectationTester52,2051
  void SetCallCount(int n, ExpectationBase* exp) {SetCallCount55,2157
class MockIncomplete {MockIncomplete112,3549
TEST(MockMethodTest, CanInstantiateWithIncompleteArgType) {TEST122,3861
void PrintTo(const Incomplete& /* x */, ::std::ostream* os) {PrintTo134,4345
class Result {};Result138,4433
class NonDefaultConstructible {NonDefaultConstructible141,4495
  explicit NonDefaultConstructible(int /* dummy */) {}NonDefaultConstructible143,4536
class MockA {MockA146,4595
  MockA() {}MockA148,4618
class MockB {MockB160,4932
  MockB() {}MockB162,4955
class ReferenceHoldingMock {ReferenceHoldingMock171,5115
  ReferenceHoldingMock() {}ReferenceHoldingMock173,5153
#define Method Method186,5574
class CC {CC188,5598
  virtual ~CC() {}~CC190,5618
class MockCC : public CC {MockCC193,5668
  MockCC() {}MockCC195,5704
TEST(OnCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {TEST204,5860
TEST(OnCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {TEST211,6075
TEST(ExpectCallSyntaxTest, CompilesWithMethodNameExpandedFromMacro) {TEST218,6287
TEST(ExpectCallSyntaxTest, WorksWithMethodNameExpandedFromMacro) {TEST225,6446
#undef Method Method231,6609
TEST(OnCallSyntaxTest, EvaluatesFirstArgumentOnce) {TEST235,6754
TEST(OnCallSyntaxTest, EvaluatesSecondArgumentOnce) {TEST243,6891
TEST(OnCallSyntaxTest, WithIsOptional) {TEST253,7080
TEST(OnCallSyntaxTest, WithCanAppearAtMostOnce) {TEST263,7257
TEST(OnCallSyntaxTest, WillByDefaultIsMandatory) {TEST274,7531
TEST(OnCallSyntaxTest, WillByDefaultCanAppearAtMostOnce) {TEST283,7675
TEST(ExpectCallSyntaxTest, EvaluatesFirstArgumentOnce) {TEST295,8039
TEST(ExpectCallSyntaxTest, EvaluatesSecondArgumentOnce) {TEST304,8196
TEST(ExpectCallSyntaxTest, WithIsOptional) {TEST315,8409
TEST(ExpectCallSyntaxTest, WithCanAppearAtMostOnce) {TEST325,8568
TEST(ExpectCallSyntaxTest, WithMustBeFirstClause) {TEST337,8817
TEST(ExpectCallSyntaxTest, TimesCanBeInferred) {TEST357,9249
TEST(ExpectCallSyntaxTest, TimesCanAppearAtMostOnce) {TEST372,9487
TEST(ExpectCallSyntaxTest, TimesMustBeBeforeInSequence) {TEST385,9752
TEST(ExpectCallSyntaxTest, InSequenceIsOptional) {TEST398,9999
TEST(ExpectCallSyntaxTest, InSequenceCanAppearMultipleTimes) {TEST410,10177
TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeAfter) {TEST421,10361
TEST(ExpectCallSyntaxTest, InSequenceMustBeBeforeWillOnce) {TEST436,10681
TEST(ExpectCallSyntaxTest, AfterMustBeBeforeWillOnce) {TEST449,10946
TEST(ExpectCallSyntaxTest, WillIsOptional) {TEST463,11225
TEST(ExpectCallSyntaxTest, WillCanAppearMultipleTimes) {TEST474,11388
TEST(ExpectCallSyntaxTest, WillMustBeBeforeWillRepeatedly) {TEST484,11590
TEST(ExpectCallSyntaxTest, WillRepeatedlyIsOptional) {TEST496,11850
TEST(ExpectCallSyntaxTest, WillRepeatedlyCannotAppearMultipleTimes) {TEST510,12093
TEST(ExpectCallSyntaxTest, WillRepeatedlyMustBeBeforeRetiresOnSaturation) {TEST521,12397
TEST(ExpectCallSyntaxTest, RetiresOnSaturationIsOptional) {TEST531,12668
TEST(ExpectCallSyntaxTest, RetiresOnSaturationCannotAppearMultipleTimes) {TEST542,12849
TEST(ExpectCallSyntaxTest, DefaultCardinalityIsOnce) {TEST554,13142
TEST(ExpectCallSyntaxTest, DoesNotWarnOnAdequateActionCount) {TEST576,13635
TEST(ExpectCallSyntaxTest, WarnsOnTooManyActions) {TEST612,14635
TEST(ExpectCallSyntaxTest, WarnsOnTooFewActions) {TEST678,16716
TEST(ExpectCallSyntaxTest, WarningIsErrorWithFlag) {TEST697,17165
TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCall) {TEST757,18866
TEST(OnCallTest, TakesBuiltInDefaultActionWhenNoOnCallMatches) {TEST766,19085
TEST(OnCallTest, PicksLastMatchingOnCall) {TEST776,19330
TEST(ExpectCallTest, AllowsAnyCallWhenNoSpec) {TEST792,19715
TEST(ExpectCallTest, PicksLastMatchingExpectCall) {TEST805,19983
TEST(ExpectCallTest, CatchesTooFewCalls) {TEST816,20226
TEST(ExpectCallTest, InfersCardinalityWhenThereIsNoWillRepeatedly) {TEST830,20673
TEST(ExpectCallTest, InfersCardinality1WhenThereIsWillRepeatedly) {TEST862,21333
TEST(ExpectCallTest, NthMatchTakesNthAction) {TEST893,22006
TEST(ExpectCallTest, TakesRepeatedActionWhenWillListIsExhausted) {TEST907,22345
TEST(ExpectCallTest, TakesDefaultActionWhenWillListIsExhausted) {TEST922,22741
TEST(FunctionMockerMessageTest, ReportsExpectCallLocationForExhausedActions) {TEST953,23862
TEST(FunctionMockerMessageTest,TEST967,24346
TEST(UninterestingCallTest, DoesDefaultAction) {TEST983,24844
TEST(UnexpectedCallTest, DoesDefaultAction) {TEST998,25288
TEST(UnexpectedCallTest, GeneratesFailureForVoidFunction) {TEST1024,26080
TEST(UnexpectedCallTest, GeneartesFailureForNonVoidFunction) {TEST1073,27932
TEST(UnexpectedCallTest, RetiredExpectation) {TEST1093,28625
TEST(UnexpectedCallTest, UnmatchedArguments) {TEST1107,29010
TEST(UnexpectedCallTest, UnsatisifiedPrerequisites) {TEST1120,29343
TEST(UndefinedReturnValueTest,TEST1175,31218
TEST(ExcessiveCallTest, DoesDefaultAction) {TEST1190,31780
TEST(ExcessiveCallTest, GeneratesFailureForVoidFunction) {TEST1216,32630
TEST(ExcessiveCallTest, GeneratesFailureForNonVoidFunction) {TEST1230,33158
TEST(InSequenceTest, AllExpectationInScopeAreInSequence) {TEST1246,33618
TEST(InSequenceTest, NestedInSequence) {TEST1263,33896
TEST(InSequenceTest, ExpectationsOutOfScopeAreNotAffected) {TEST1286,34240
TEST(SequenceTest, AnyOrderIsOkByDefault) {TEST1306,34619
TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo1) {TEST1334,35057
TEST(SequenceTest, CallsMustBeInStrictOrderWhenSaidSo2) {TEST1358,35663
class PartialOrderTest : public testing::Test {PartialOrderTest1377,36156
  PartialOrderTest() {PartialOrderTest1379,36216
  MockA a_;a_1401,36802
  MockB b_;b_1402,36814
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag1) {TEST_F1405,36830
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag2) {TEST_F1416,37091
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag3) {TEST_F1426,37350
TEST_F(PartialOrderTest, CallsMustConformToSpecifiedDag4) {TEST_F1436,37592
TEST(SequenceTest, Retirement) {TEST1446,37852
TEST(ExpectationTest, ConstrutorsWork) {TEST1465,38144
TEST(ExpectationTest, AssignmentWorks) {TEST1497,38953
TEST(ExpectationSetTest, MemberTypesAreCorrect) {TEST1512,39175
TEST(ExpectationSetTest, ConstructorsWork) {TEST1516,39304
TEST(ExpectationSetTest, AssignmentWorks) {TEST1545,40186
TEST(ExpectationSetTest, InsertionWorks) {TEST1555,40414
TEST(ExpectationSetTest, SizeWorks) {TEST1575,40934
TEST(ExpectationSetTest, IsEnumerable) {TEST1589,41158
TEST(AfterTest, SucceedsWhenPartialOrderIsSatisfied) {TEST1603,41475
TEST(AfterTest, SucceedsWhenTotalOrderIsSatisfied) {TEST1616,41709
TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo1) {TEST1634,42182
TEST(AfterTest, CallsMustBeInStrictOrderWhenSpecifiedSo2) {TEST1656,42688
TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo) {TEST1680,43228
TEST(AfterTest, CallsMustSatisfyPartialOrderWhenSpecifiedSo2) {TEST1702,43820
TEST(AfterTest, CanBeUsedWithInSequence) {TEST1723,44297
TEST(AfterTest, CanBeCalledManyTimes) {TEST1742,44695
TEST(AfterTest, AcceptsUpToFiveArguments) {TEST1759,45043
TEST(AfterTest, AcceptsDuplicatedInput) {TEST1778,45519
TEST(AfterTest, ChangesToExpectationSetHaveNoEffectAfterwards) {TEST1805,46174
TEST(DeletingMockEarlyTest, Success1) {TEST1822,46641
TEST(DeletingMockEarlyTest, Success2) {TEST1850,47320
ACTION_P(Delete, ptr) { delete ptr; }ACTION_P1882,48049
TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningVoid) {TEST1888,48134
TEST(DeletingMockEarlyTest, CanDeleteSelfInActionReturningValue) {TEST1894,48331
TEST(DeletingMockEarlyTest, Failure1) {TEST1902,48646
TEST(DeletingMockEarlyTest, Failure2) {TEST1928,49274
class EvenNumberCardinality : public CardinalityInterface {EvenNumberCardinality1952,49906
Cardinality EvenNumber() {EvenNumber1972,50480
TEST(ExpectationBaseTest,TEST1976,50559
struct Printable {Printable1999,51157
inline void operator<<(::std::ostream& os, const Printable&) {operator <<2002,51180
struct Unprintable {Unprintable2006,51267
  Unprintable() : value(0) {}Unprintable2007,51288
  int value;value2008,51318
class MockC {MockC2011,51335
  MockC() {}MockC2013,51358
class VerboseFlagPreservingFixture : public testing::Test {VerboseFlagPreservingFixture2023,51621
  VerboseFlagPreservingFixture()VerboseFlagPreservingFixture2025,51693
  const std::string saved_verbose_flag_;saved_verbose_flag_2033,51893
TEST(FunctionCallMessageTest,TEST2043,52197
TEST(FunctionCallMessageTest,TEST2057,52795
TEST(FunctionCallMessageTest,TEST2088,53900
class GMockVerboseFlagTest : public VerboseFlagPreservingFixture {GMockVerboseFlagTest2118,54990
  void VerifyOutput(const std::string& output, bool should_print,VerifyOutput2124,55313
  void TestExpectedCall(bool should_print) {TestExpectedCall2143,56027
  void TestUninterestingCallOnNaggyMock(bool should_print) {TestUninterestingCallOnNaggyMock2174,56882
TEST_F(GMockVerboseFlagTest, Info) {TEST_F2214,58141
TEST_F(GMockVerboseFlagTest, Warning) {TEST_F2222,58376
TEST_F(GMockVerboseFlagTest, Error) {TEST_F2230,58639
TEST_F(GMockVerboseFlagTest, InvalidFlagIsTreatedAsWarning) {TEST_F2238,58894
class PrintMeNot {};PrintMeNot2249,59319
void PrintTo(PrintMeNot /* dummy */, ::std::ostream* /* os */) {PrintTo2251,59341
class LogTestHelper {LogTestHelper2256,59539
  LogTestHelper() {}LogTestHelper2258,59570
class GMockLogTest : public VerboseFlagPreservingFixture {GMockLogTest2266,59702
  LogTestHelper helper_;helper_2268,59773
TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsWarning) {TEST_F2271,59802
TEST_F(GMockLogTest, DoesNotPrintGoodCallInternallyIfVerbosityIsError) {TEST_F2278,60055
TEST_F(GMockLogTest, DoesNotPrintWarningInternallyIfVerbosityIsError) {TEST_F2285,60304
TEST(AllowLeakTest, AllowsLeakingUnusedMockObject) {TEST2294,60588
TEST(AllowLeakTest, CanBeCalledBeforeOnCall) {TEST2299,60690
TEST(AllowLeakTest, CanBeCalledAfterOnCall) {TEST2306,60846
TEST(AllowLeakTest, CanBeCalledBeforeExpectCall) {TEST2312,60988
TEST(AllowLeakTest, CanBeCalledAfterExpectCall) {TEST2319,61128
TEST(AllowLeakTest, WorksWhenBothOnCallAndExpectCallArePresent) {TEST2325,61273
TEST(VerifyAndClearExpectationsTest, NoMethodHasExpectations) {TEST2334,61594
TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndSucceed) {TEST2347,62030
TEST(VerifyAndClearExpectationsTest, SomeMethodsHaveExpectationsAndFail) {TEST2363,62540
TEST(VerifyAndClearExpectationsTest, AllMethodsHaveExpectations) {TEST2380,63106
TEST(VerifyAndClearExpectationsTest, AMethodHasManyExpectations) {TEST2398,63625
TEST(VerifyAndClearExpectationsTest, CanCallManyTimes) {TEST2418,64234
TEST(VerifyAndClearTest, NoMethodHasDefaultActions) {TEST2438,64777
TEST(VerifyAndClearTest, SomeMethodsHaveDefaultActions) {TEST2447,65089
TEST(VerifyAndClearTest, AllMethodsHaveDefaultActions) {TEST2460,65441
TEST(VerifyAndClearTest, AMethodHasManyDefaultActions) {TEST2478,65947
TEST(VerifyAndClearTest, CanCallManyTimes) {TEST2495,66377
TEST(VerifyAndClearTest, Success) {TEST2511,66749
TEST(VerifyAndClearTest, Failure) {TEST2529,67178
TEST(VerifyAndClearTest, Const) {TEST2550,67761
TEST(VerifyAndClearTest, CanSetDefaultActionsAndExpectationsAfterwards) {TEST2571,68288
TEST(VerifyAndClearTest, DoesNotAffectOtherMockObjects) {TEST2592,68812
TEST(VerifyAndClearTest,TEST2624,69510
TEST(VerifyAndClearTest,TEST2644,70307
TEST(SynchronizationTest, CanCallMockMethodInAction) {TEST2669,71374
TEST(ParameterlessExpectationsTest, CanSetExpectationsWithoutMatchers) {TEST2688,72052
TEST(ParameterlessExpectationsTest, CanSetExpectationsForOverloadedMethods) {TEST2708,72645
struct MockWithConstMethods {MockWithConstMethods2718,72934
TEST(ParameterlessExpectationsTest, CanSetExpectationsForConstMethods) {TEST2724,73064
class MockConstOverload {MockConstOverload2733,73340
TEST(ParameterlessExpectationsTest,TEST2739,73461
int gmock_main(int argc, char **argv) {gmock_main2763,74328

test/googletest/googlemock/test/gmock-actions_test.cc,11387
TEST(BuiltInDefaultValueTest, IsNullForPointerTypes) {TEST90,3110
TEST(BuiltInDefaultValueTest, ExistsForPointerTypes) {TEST97,3417
TEST(BuiltInDefaultValueTest, IsZeroForNumericTypes) {TEST105,3731
TEST(BuiltInDefaultValueTest, ExistsForNumericTypes) {TEST134,5128
TEST(BuiltInDefaultValueTest, IsFalseForBool) {TEST158,6420
TEST(BuiltInDefaultValueTest, BoolExists) {TEST163,6585
TEST(BuiltInDefaultValueTest, IsEmptyStringForString) {TEST169,6767
TEST(BuiltInDefaultValueTest, ExistsForString) {TEST175,6975
TEST(BuiltInDefaultValueTest, WorksForConstTypes) {TEST181,7204
class MyDefaultConstructible {MyDefaultConstructible189,7541
  MyDefaultConstructible() : value_(42) {}MyDefaultConstructible191,7581
  int value() const { return value_; }value193,7625
  int value_;value_196,7675
class MyNonDefaultConstructible {MyNonDefaultConstructible200,7737
  explicit MyNonDefaultConstructible(int a_value) : value_(a_value) {}MyNonDefaultConstructible203,7815
  int value() const { return value_; }value205,7887
  int value_;value_208,7937
TEST(BuiltInDefaultValueTest, ExistsForDefaultConstructibleType) {TEST212,7956
TEST(BuiltInDefaultValueTest, IsDefaultConstructedForDefaultConstructibleType) {TEST216,8096
TEST(BuiltInDefaultValueTest, DoesNotExistForNonDefaultConstructibleType) {TEST221,8258
TEST(BuiltInDefaultValueDeathTest, IsUndefinedForReferences) {TEST226,8476
TEST(BuiltInDefaultValueDeathTest, IsUndefinedForNonDefaultConstructibleType) {TEST235,8705
TEST(DefaultValueTest, IsInitiallyUnset) {TEST242,8946
TEST(DefaultValueTest, CanBeSetAndUnset) {TEST249,9228
TEST(DefaultValueDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {TEST276,10201
TEST(DefaultValueTest, GetWorksForMoveOnlyIfSet) {TEST289,10631
TEST(DefaultValueTest, GetWorksForVoid) {TEST301,11127
TEST(DefaultValueOfReferenceTest, IsInitiallyUnset) {TEST308,11320
TEST(DefaultValueOfReferenceTest, IsInitiallyNotExisting) {TEST315,11613
TEST(DefaultValueOfReferenceTest, CanBeSetAndUnset) {TEST322,11913
TEST(DefaultValueOfReferenceDeathTest, GetReturnsBuiltInDefaultValueWhenUnset) {TEST347,12807
typedef int MyGlobalFunction(bool, int);MyGlobalFunction362,13252
class MyActionImpl : public ActionInterface<MyGlobalFunction> {MyActionImpl364,13294
TEST(ActionInterfaceTest, CanBeImplementedByDefiningPerform) {TEST371,13489
TEST(ActionInterfaceTest, MakeAction) {TEST376,13610
TEST(ActionTest, CanBeConstructedFromActionInterface) {TEST389,14165
TEST(ActionTest, DelegatesWorkToActionInterface) {TEST394,14346
TEST(ActionTest, IsCopyable) {TEST402,14616
class IsNotZero : public ActionInterface<bool(int)> {  // NOLINTIsNotZero428,15572
TEST(ActionTest, CanBeConvertedToOtherActionType) {TEST435,15742
class ReturnSecondArgumentAction {ReturnSecondArgumentAction446,16182
  Result Perform(const ArgumentTuple& args) {Perform452,16473
class ReturnZeroFromNullaryFunctionAction {ReturnZeroFromNullaryFunctionAction459,16647
  Result Perform(const std::tuple<>&) const {Perform469,17078
PolymorphicAction<ReturnSecondArgumentAction> ReturnSecondArgument() {ReturnSecondArgument477,17268
ReturnZeroFromNullaryFunction() {ReturnZeroFromNullaryFunction482,17459
TEST(MakePolymorphicActionTest, ConstructsActionFromImpl) {TEST488,17683
TEST(MakePolymorphicActionTest, WorksWhenPerformHasOneTemplateParameter) {TEST495,18016
TEST(ReturnTest, WorksForVoid) {TEST505,18384
TEST(ReturnTest, ReturnsGivenValue) {TEST511,18550
TEST(ReturnTest, AcceptsStringLiteral) {TEST520,18799
struct IntegerVectorWrapper {IntegerVectorWrapper530,19139
  std::vector<int> * v;v531,19169
  IntegerVectorWrapper(std::vector<int>& _v) : v(&_v) {}  // NOLINTIntegerVectorWrapper532,19193
TEST(ReturnTest, SupportsWrapperReturnType) {TEST536,19330
struct Base {Base550,19853
  bool operator==(const Base&) { return true; }operator ==551,19867
struct Derived : public Base {Derived554,19919
  bool operator==(const Derived&) { return true; }operator ==555,19950
TEST(ReturnTest, IsCovariant) {TEST558,20005
class FromType {FromType572,20502
  explicit FromType(bool* is_converted) : converted_(is_converted) {}FromType574,20528
  bool* converted() const { return converted_; }converted575,20598
  bool* const converted_;converted_578,20658
class ToType {ToType581,20688
  ToType(const FromType& x) { *x.converted() = true; }  // NOLINTToType584,20780
TEST(ReturnTest, ConvertsArgumentWhenConverted) {TEST587,20850
class DestinationType {};DestinationType599,21292
class SourceType {SourceType601,21319
  operator DestinationType() { return DestinationType(); }operator DestinationType604,21389
TEST(ReturnTest, CanConvertArgumentUsingNonConstTypeCastOperator) {TEST607,21452
TEST(ReturnNullTest, WorksInPointerReturningFunction) {TEST613,21659
TEST(ReturnNullTest, WorksInSmartPointerReturningFunction) {TEST623,22037
TEST(ReturnRefTest, WorksForReference) {TEST632,22408
TEST(ReturnRefTest, IsCovariant) {TEST640,22631
bool CanCallReturnRef(T&&) { return true; }CanCallReturnRef651,22947
bool CanCallReturnRef(Unused) { return false; }CanCallReturnRef652,22991
TEST(ReturnRefTest, WorksForNonTemporary) {TEST655,23104
TEST(ReturnRefTest, DoesNotWorkForTemporary) {TEST670,23580
TEST(ReturnRefOfCopyTest, WorksForReference) {TEST686,24233
TEST(ReturnRefOfCopyTest, IsCovariant) {TEST699,24609
TEST(ReturnRoundRobinTest, WorksForInitList) {TEST710,24931
TEST(ReturnRoundRobinTest, WorksForVector) {TEST722,25374
class MockClass {MockClass736,25884
  MockClass() {}MockClass738,25911
TEST(DoDefaultTest, ReturnsBuiltInDefaultValueByDefault) {TEST755,26522
TEST(DoDefaultDeathTest, DiesForUnknowType) {TEST764,26849
void VoidFunc(bool /* flag */) {}VoidFunc780,27194
TEST(DoDefaultDeathTest, DiesIfUsedInCompositeAction) {TEST782,27229
TEST(DoDefaultTest, ReturnsUserSpecifiedPerTypeDefaultValueWhenThereIsOne) {TEST799,27849
TEST(DoDefaultTest, DoesWhatOnCallSpecifies) {TEST809,28171
TEST(DoDefaultTest, CannotBeUsedInOnCall) {TEST819,28473
TEST(SetArgPointeeTest, SetsTheNthPointee) {TEST829,28794
TEST(SetArgPointeeTest, AcceptsStringLiteral) {TEST848,29250
TEST(SetArgPointeeTest, AcceptsWideStringLiteral) {TEST864,29690
TEST(SetArgPointeeTest, AcceptsCharPointer) {TEST883,30235
TEST(SetArgPointeeTest, AcceptsWideCharPointer) {TEST902,30780
TEST(SetArgumentPointeeTest, SetsTheNthPointee) {TEST924,31485
int Nullary() { return 1; }Nullary943,31960
class NullaryFunctor {NullaryFunctor945,31989
  int operator()() { return 2; }operator ()947,32021
bool g_done = false;g_done950,32058
void VoidNullary() { g_done = true; }VoidNullary951,32079
class VoidNullaryFunctor {VoidNullaryFunctor953,32118
  void operator()() { g_done = true; }operator ()955,32154
short Short(short n) { return n; }  // NOLINTShort958,32197
char Char(char ch) { return ch; }Char959,32243
const char* CharPtr(const char* s) { return s; }CharPtr961,32278
bool Unary(int x) { return x < 0; }Unary963,32328
const char* Binary(const char* input, short n) { return input + n; }  // NOLINTBinary965,32365
void VoidBinary(int, char) { g_done = true; }VoidBinary967,32446
int Ternary(int x, char y, short z) { return x + y + z; }  // NOLINTTernary969,32493
int SumOf4(int a, int b, int c, int d) { return a + b + c + d; }SumOf4971,32563
class Foo {Foo973,32629
  Foo() : value_(123) {}Foo975,32650
  int Nullary() const { return value_; }Nullary977,32676
  int value_;value_980,32728
TEST(InvokeWithoutArgsTest, Function) {TEST984,32784
TEST(InvokeWithoutArgsTest, Functor) {TEST1001,33366
TEST(InvokeWithoutArgsTest, Method) {TEST1019,33981
TEST(IgnoreResultTest, PolymorphicAction) {TEST1027,34232
int ReturnOne() {ReturnOne1034,34428
TEST(IgnoreResultTest, MonomorphicAction) {TEST1039,34478
MyNonDefaultConstructible ReturnMyNonDefaultConstructible(double /* x */) {ReturnMyNonDefaultConstructible1048,34723
TEST(IgnoreResultTest, ActionReturningClass) {TEST1053,34859
TEST(AssignTest, Int) {TEST1061,35079
TEST(AssignTest, String) {TEST1068,35210
TEST(AssignTest, CompatibleTypes) {TEST1075,35376
TEST(WithArgsTest, OneArg) {TEST1084,35596
TEST(WithArgsTest, TwoArgs) {TEST1091,35870
struct ConcatAll {ConcatAll1098,36115
  std::string operator()() const { return {}; }operator ()1099,36134
  std::string operator()(const char* a, I... i) const {operator ()1101,36209
TEST(WithArgsTest, TenArgs) {TEST1107,36371
class SubtractAction : public ActionInterface<int(int, int)> {SubtractAction1116,36771
TEST(WithArgsTest, NonInvokeAction) {TEST1123,36960
TEST(WithArgsTest, Identity) {TEST1132,37308
TEST(WithArgsTest, RepeatedArguments) {TEST1139,37557
TEST(WithArgsTest, ReversedArgumentOrder) {TEST1146,37805
TEST(WithArgsTest, ArgsOfCompatibleTypes) {TEST1154,38129
TEST(WithArgsTest, VoidAction) {TEST1162,38435
TEST(WithArgsTest, ReturnReference) {TEST1169,38635
TEST(WithArgsTest, InnerActionWithConversion) {TEST1176,38858
class SetErrnoAndReturnTest : public testing::Test {SetErrnoAndReturnTest1184,39104
TEST_F(SetErrnoAndReturnTest, Int) {TEST_F1190,39254
TEST_F(SetErrnoAndReturnTest, Ptr) {TEST_F1196,39424
TEST_F(SetErrnoAndReturnTest, CompatibleTypes) {TEST_F1203,39604
TEST(ByRefTest, IsCopyable) {TEST1214,39897
TEST(ByRefTest, ConstValue) {TEST1235,40429
TEST(ByRefTest, NonConstValue) {TEST1244,40724
TEST(ByRefTest, ExplicitType) {TEST1257,41012
TEST(ByRefTest, PrintsCorrectly) {TEST1286,41708
struct UnaryConstructorClass {UnaryConstructorClass1294,41971
  explicit UnaryConstructorClass(int v) : value(v) {}UnaryConstructorClass1295,42002
  int value;value1296,42056
TEST(ReturnNewTest, Unary) {TEST1300,42126
TEST(ReturnNewTest, UnaryWorksWhenMockMethodHasArgs) {TEST1307,42337
TEST(ReturnNewTest, UnaryWorksWhenMockMethodReturnsPointerToConst) {TEST1315,42597
class TenArgConstructorClass {TenArgConstructorClass1323,42866
  TenArgConstructorClass(int a1, int a2, int a3, int a4, int a5, int a6, int a7,TenArgConstructorClass1325,42906
  int value_;value_1328,43105
TEST(ReturnNewTest, ConstructorThatTakes10Arguments) {TEST1332,43182
std::unique_ptr<int> UniquePtrSource() {UniquePtrSource1341,43511
std::vector<std::unique_ptr<int>> VectorUniquePtrSource() {VectorUniquePtrSource1345,43599
TEST(MockMethodTest, CanReturnMoveOnlyValue_Return) {TEST1351,43749
TEST(MockMethodTest, CanReturnMoveOnlyValue_DoAllReturn) {TEST1373,44500
TEST(MockMethodTest, CanReturnMoveOnlyValue_Invoke) {TEST1386,44951
TEST(MockMethodTest, CanTakeMoveOnlyValue) {TEST1410,45722
int Add(int val, int& ref, int* ptr) {  // NOLINTAdd1455,47194
int Deref(std::unique_ptr<int> ptr) { return *ptr; }Deref1462,47322
struct Double {Double1464,47376
  T operator()(T t) { return 2 * t; }operator ()1466,47416
std::unique_ptr<int> UniqueInt(int i) {UniqueInt1469,47458
TEST(FunctorActionTest, ActionFromFunction) {TEST1473,47544
TEST(FunctorActionTest, ActionFromLambda) {TEST1484,47870
TEST(FunctorActionTest, PolymorphicFunctor) {TEST1497,48305
TEST(FunctorActionTest, TypeConversion) {TEST1504,48555
TEST(FunctorActionTest, UnusedArguments) {TEST1533,49681
TEST(MoveOnlyArgumentsTest, ReturningActions) {TEST1542,50054
ACTION(ReturnArity) {ACTION1555,50466
TEST(ActionMacro, LargeArity) {TEST1559,50535

test/googletest/googlemock/include/gmock/gmock-more-actions.h,11558
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_ACTIONS_H_36,1737
#define GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_1_TEMPLATE_PARAMS129,5258
#define GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_2_TEMPLATE_PARAMS130,5334
#define GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_3_TEMPLATE_PARAMS132,5443
#define GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_4_TEMPLATE_PARAMS134,5579
#define GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_5_TEMPLATE_PARAMS137,5748
#define GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_6_TEMPLATE_PARAMS140,5944
#define GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_7_TEMPLATE_PARAMS143,6167
#define GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_8_TEMPLATE_PARAMS147,6423
#define GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_9_TEMPLATE_PARAMS151,6706
#define GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS(GMOCK_INTERNAL_DECL_HAS_10_TEMPLATE_PARAMS156,7022
#define GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_1_TEMPLATE_PARAMS163,7401
#define GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_2_TEMPLATE_PARAMS164,7471
#define GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_3_TEMPLATE_PARAMS166,7568
#define GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_4_TEMPLATE_PARAMS168,7686
#define GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_5_TEMPLATE_PARAMS170,7825
#define GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_6_TEMPLATE_PARAMS173,7991
#define GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_7_TEMPLATE_PARAMS176,8178
#define GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_8_TEMPLATE_PARAMS179,8386
#define GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_9_TEMPLATE_PARAMS182,8615
#define GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS(GMOCK_INTERNAL_LIST_HAS_10_TEMPLATE_PARAMS186,8871
#define GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_0_VALUE_PARAMS192,9193
#define GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_1_VALUE_PARAMS193,9247
#define GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_2_VALUE_PARAMS194,9324
#define GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_3_VALUE_PARAMS196,9431
#define GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_4_VALUE_PARAMS198,9562
#define GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_5_VALUE_PARAMS201,9723
#define GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_6_VALUE_PARAMS204,9908
#define GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_7_VALUE_PARAMS207,10117
#define GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_8_VALUE_PARAMS211,10356
#define GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_9_VALUE_PARAMS215,10619
#define GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DECL_TYPE_AND_10_VALUE_PARAMS219,10906
#define GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_0_VALUE_PARAMS226,11262
#define GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_1_VALUE_PARAMS228,11319
#define GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_2_VALUE_PARAMS230,11424
#define GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_3_VALUE_PARAMS233,11590
#define GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_4_VALUE_PARAMS237,11817
#define GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_5_VALUE_PARAMS242,12105
#define GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_6_VALUE_PARAMS247,12444
#define GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_7_VALUE_PARAMS254,12854
#define GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_8_VALUE_PARAMS261,13315
#define GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_9_VALUE_PARAMS269,13837
#define GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_INIT_AND_10_VALUE_PARAMS279,14426
#define GMOCK_INTERNAL_DEFN_COPY_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_0_VALUE_PARAMS292,15110
#define GMOCK_INTERNAL_DEFN_COPY_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_1_VALUE_PARAMS294,15234
#define GMOCK_INTERNAL_DEFN_COPY_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_2_VALUE_PARAMS295,15302
#define GMOCK_INTERNAL_DEFN_COPY_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_3_VALUE_PARAMS296,15370
#define GMOCK_INTERNAL_DEFN_COPY_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_4_VALUE_PARAMS297,15438
#define GMOCK_INTERNAL_DEFN_COPY_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_5_VALUE_PARAMS298,15506
#define GMOCK_INTERNAL_DEFN_COPY_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_6_VALUE_PARAMS299,15574
#define GMOCK_INTERNAL_DEFN_COPY_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_7_VALUE_PARAMS300,15642
#define GMOCK_INTERNAL_DEFN_COPY_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_8_VALUE_PARAMS301,15710
#define GMOCK_INTERNAL_DEFN_COPY_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_9_VALUE_PARAMS302,15778
#define GMOCK_INTERNAL_DEFN_COPY_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_COPY_AND_10_VALUE_PARAMS303,15846
#define GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_0_VALUE_PARAMS306,15973
#define GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_1_VALUE_PARAMS307,16022
#define GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_2_VALUE_PARAMS308,16087
#define GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_3_VALUE_PARAMS310,16176
#define GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_4_VALUE_PARAMS312,16283
#define GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_5_VALUE_PARAMS314,16408
#define GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_6_VALUE_PARAMS316,16551
#define GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_7_VALUE_PARAMS319,16718
#define GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_8_VALUE_PARAMS322,16903
#define GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_9_VALUE_PARAMS325,17106
#define GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DEFN_AND_10_VALUE_PARAMS328,17327
#define GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_0_VALUE_PARAMS334,17605
#define GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_1_VALUE_PARAMS335,17654
#define GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_2_VALUE_PARAMS336,17708
#define GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_3_VALUE_PARAMS337,17770
#define GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_4_VALUE_PARAMS338,17840
#define GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_5_VALUE_PARAMS339,17918
#define GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_6_VALUE_PARAMS341,18010
#define GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_7_VALUE_PARAMS343,18110
#define GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_8_VALUE_PARAMS345,18218
#define GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_9_VALUE_PARAMS347,18334
#define GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_LIST_AND_10_VALUE_PARAMS349,18458
#define GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_0_VALUE_PARAMS353,18628
#define GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_1_VALUE_PARAMS354,18682
#define GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_2_VALUE_PARAMS355,18750
#define GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_3_VALUE_PARAMS357,18839
#define GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_4_VALUE_PARAMS359,18943
#define GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_5_VALUE_PARAMS361,19062
#define GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_6_VALUE_PARAMS363,19196
#define GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_7_VALUE_PARAMS365,19345
#define GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_8_VALUE_PARAMS368,19515
#define GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_9_VALUE_PARAMS371,19700
#define GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_LIST_TYPE_AND_10_VALUE_PARAMS374,19900
#define GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_0_VALUE_PARAMS379,20151
#define GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_1_VALUE_PARAMS380,20200
#define GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_2_VALUE_PARAMS381,20264
#define GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_3_VALUE_PARAMS383,20352
#define GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_4_VALUE_PARAMS385,20458
#define GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_5_VALUE_PARAMS387,20582
#define GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_6_VALUE_PARAMS389,20724
#define GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_7_VALUE_PARAMS392,20890
#define GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_8_VALUE_PARAMS395,21074
#define GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_9_VALUE_PARAMS398,21276
#define GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_DECL_AND_10_VALUE_PARAMS401,21496
#define GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_0_VALUE_PARAMS407,21812
#define GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_1_VALUE_PARAMS408,21862
#define GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_2_VALUE_PARAMS409,21916
#define GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_3_VALUE_PARAMS410,21975
#define GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_4_VALUE_PARAMS411,22038
#define GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_5_VALUE_PARAMS412,22105
#define GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_6_VALUE_PARAMS413,22176
#define GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_7_VALUE_PARAMS414,22251
#define GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_8_VALUE_PARAMS415,22330
#define GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_9_VALUE_PARAMS417,22419
#define GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS(GMOCK_INTERNAL_COUNT_AND_10_VALUE_PARAMS419,22512
#define GMOCK_ACTION_CLASS_(GMOCK_ACTION_CLASS_423,22680
#define ACTION_TEMPLATE(ACTION_TEMPLATE426,22805
namespace testing {testing488,27724
namespace internal {internal500,28127
auto InvokeArgument(F f, Args... args) -> decltype(f(args...)) {f507,28431
struct InvokeArgumentAction {InvokeArgumentAction512,28569
      std::declval<const Params&>()...)) {declval516,28782
  internal::FlatTuple<Params...> params;params526,29221
InvokeArgument(Params&&... params) {InvokeArgument560,30525

test/googletest/googlemock/include/gmock/gmock-matchers.h,52961
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MATCHERS_H_254,9604
#define GMOCK_MAYBE_5046_ GMOCK_MAYBE_5046_276,10155
#define GMOCK_MAYBE_5046_GMOCK_MAYBE_5046_278,10192
namespace testing {testing286,10460
class StringMatchResultListener : public MatchResultListener {StringMatchResultListener301,11076
  StringMatchResultListener() : MatchResultListener(&ss_) {}StringMatchResultListener303,11148
  std::string str() const { return ss_.str(); }str306,11259
  void Clear() { ss_.str(""); }Clear309,11356
  ::std::stringstream ss_;ss_312,11399
namespace internal {internal319,11604
class MatcherCastImpl {MatcherCastImpl332,12165
  static Matcher<T> Cast(const M& polymorphic_matcher_or_value) {Cast334,12198
  static Matcher<T> CastImpl(const M& polymorphic_matcher_or_value,CastImpl355,13156
  static Matcher<T> CastImpl(const M& value,CastImpl372,14089
class MatcherCastImpl<T, Matcher<U> > {MatcherCastImpl397,15313
  static Matcher<T> Cast(const Matcher<U>& source_matcher) {Cast399,15362
  class Impl : public MatcherInterface<T> {Impl404,15487
    explicit Impl(const Matcher<U>& source_matcher)Impl406,15542
    const Matcher<U> source_matcher_;source_matcher_444,17243
class MatcherCastImpl<T, Matcher<T> > {MatcherCastImpl451,17412
  static Matcher<T> Cast(const Matcher<T>& matcher) { return matcher; }Cast453,17461
class MatcherBaseImpl {MatcherBaseImpl458,17619
  operator ::testing::Matcher<T>() const {  // NOLINT(runtime/explicit)Matcher463,17708
class MatcherBaseImpl<Derived<Ts...>> {MatcherBaseImpl471,18023
  explicit MatcherBaseImpl(Ts... params)MatcherBaseImpl477,18267
  MatcherBaseImpl(Ts... params)  // NOLINTMatcherBaseImpl481,18458
  operator ::testing::Matcher<F>() const {  // NOLINT(runtime/explicit)Matcher485,18574
  ::testing::Matcher<F> Apply(IndexSequence<tuple_ids...>) const {Apply491,18768
  const std::tuple<Ts...> params_;params_497,18982
inline Matcher<T> MatcherCast(const M& matcher) {MatcherCast507,19336
inline Matcher<T> SafeMatcherCast(const M& polymorphic_matcher_or_value) {SafeMatcherCast514,19601
inline Matcher<T> SafeMatcherCast(const Matcher<U>& matcher) {SafeMatcherCast528,20301
namespace internal {internal556,21550
inline void PrintIfNotEmpty(const std::string& explanation,PrintIfNotEmpty559,21634
inline bool IsReadableTypeName(const std::string& type_name) {IsReadableTypeName569,21978
bool MatchPrintAndExplain(Value& value, const Matcher<T>& matcher,MatchPrintAndExplain582,22559
class TuplePrefix {TuplePrefix607,23380
  static bool Matches(const MatcherTuple& matcher_tuple,Matches613,23653
  static void ExplainMatchFailuresTo(const MatcherTuple& matchers,ExplainMatchFailuresTo624,24215
class TuplePrefix<0> {TuplePrefix655,25521
  static bool Matches(const MatcherTuple& /* matcher_tuple */,Matches658,25609
  static void ExplainMatchFailuresTo(const MatcherTuple& /* matchers */,ExplainMatchFailuresTo664,25811
bool TupleMatches(const MatcherTuple& matcher_tuple,TupleMatches675,26356
void ExplainMatchFailureTupleTo(const MatcherTuple& matchers,ExplainMatchFailureTupleTo689,27090
class TransformTupleValuesHelper {TransformTupleValuesHelper701,27600
  typedef ::std::tuple_size<Tuple> TupleSize;TupleSize703,27645
  static OutIter Run(Func f, const Tuple& t, OutIter out) {Run708,27846
  struct IterateOverTuple {IterateOverTuple714,28037
    OutIter operator() (Func f, const Tup& t, OutIter out) const {operator ()715,28065
  struct IterateOverTuple<Tup, 0> {IterateOverTuple721,28306
    OutIter operator() (Func /* f */, const Tup& /* t */, OutIter out) const {operator ()722,28342
OutIter TransformTupleValues(Func f, const Tuple& t, OutIter out) {TransformTupleValues732,28669
class AnythingMatcher {AnythingMatcher740,29019
  bool MatchAndExplain(const T& /* x */, std::ostream* /* listener */) const {MatchAndExplain745,29110
  void DescribeTo(std::ostream* os) const { *os << "is anything"; }DescribeTo748,29210
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo749,29278
class IsNullMatcher {IsNullMatcher759,29676
  bool MatchAndExplain(const Pointer& p,MatchAndExplain762,29737
  void DescribeTo(::std::ostream* os) const { *os << "is NULL"; }DescribeTo767,29876
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo768,29942
class NotNullMatcher {NotNullMatcher775,30138
  bool MatchAndExplain(const Pointer& p,MatchAndExplain778,30200
  void DescribeTo(::std::ostream* os) const { *os << "isn't NULL"; }DescribeTo783,30339
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo784,30408
class RefMatcher<T&> {RefMatcher806,31137
  explicit RefMatcher(T& x) : object_(x) {}  // NOLINTRefMatcher816,31614
  operator Matcher<Super&>() const {operator Matcher<Super&>819,31698
  class Impl : public MatcherInterface<Super&> {Impl830,32142
    explicit Impl(Super& x) : object_(x) {}  // NOLINTImpl832,32202
    const Super& object_;object_853,32951
  T& object_;object_856,32983
inline bool CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {CaseInsensitiveCStringEquals860,33070
inline bool CaseInsensitiveCStringEquals(const wchar_t* lhs,CaseInsensitiveCStringEquals864,33207
bool CaseInsensitiveStringEquals(const StringType& s1,CaseInsensitiveStringEquals872,33516
class StrEqualityMatcher {StrEqualityMatcher896,34231
  StrEqualityMatcher(StringType str, bool expect_eq, bool case_sensitive)StrEqualityMatcher898,34267
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain904,34484
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain919,34960
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain931,35395
  void DescribeTo(::std::ostream* os) const {DescribeTo939,35680
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo943,35769
  void DescribeToHelper(bool expect_eq, ::std::ostream* os) const {DescribeToHelper948,35877
  const StringType string_;string_957,36117
  const bool expect_eq_;expect_eq_958,36145
  const bool case_sensitive_;case_sensitive_959,36170
class HasSubstrMatcher {HasSubstrMatcher966,36378
  explicit HasSubstrMatcher(const StringType& substring)HasSubstrMatcher968,36412
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain972,36538
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain987,37014
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain996,37409
  void DescribeTo(::std::ostream* os) const {DescribeTo1002,37638
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1007,37754
  const StringType substring_;substring_1013,37891
class StartsWithMatcher {StartsWithMatcher1020,38101
  explicit StartsWithMatcher(const StringType& prefix) : prefix_(prefix) {StartsWithMatcher1022,38136
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain1026,38251
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain1041,38727
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1050,39122
  void DescribeTo(::std::ostream* os) const {DescribeTo1057,39372
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1062,39483
  const StringType prefix_;prefix_1068,39619
class EndsWithMatcher {EndsWithMatcher1075,39824
  explicit EndsWithMatcher(const StringType& suffix) : suffix_(suffix) {}EndsWithMatcher1077,39857
  bool MatchAndExplain(const internal::StringView& s,MatchAndExplain1080,39967
  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {MatchAndExplain1095,40443
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1104,40838
  void DescribeTo(::std::ostream* os) const {DescribeTo1111,41099
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1116,41208
  const StringType suffix_;suffix_1122,41342
class WhenBase64UnescapedMatcher {WhenBase64UnescapedMatcher1127,41522
  explicit WhenBase64UnescapedMatcher(WhenBase64UnescapedMatcher1131,41600
  bool MatchAndExplain(const MatcheeStringType& s,MatchAndExplain1137,41841
  void DescribeTo(::std::ostream* os) const {DescribeTo1150,42319
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1155,42452
  const Matcher<const std::string&> internal_matcher_;internal_matcher_1161,42610
class PairMatchBase {PairMatchBase1173,43124
  operator Matcher<::std::tuple<T1, T2>>() const {operator Matcher<::std::tuple<T1, T2>>1176,43193
  operator Matcher<const ::std::tuple<T1, T2>&>() const {operator Matcher<const ::std::tuple<T1, T2>&>1180,43367
  static ::std::ostream& GetDesc(::std::ostream& os) {  // NOLINTGetDesc1185,43503
  class Impl : public MatcherInterface<Tuple> {Impl1190,43630
class Eq2Matcher : public PairMatchBase<Eq2Matcher, AnyEq> {Eq2Matcher1205,44082
  static const char* Desc() { return "an equal pair"; }Desc1207,44152
class Ne2Matcher : public PairMatchBase<Ne2Matcher, AnyNe> {Ne2Matcher1209,44211
  static const char* Desc() { return "an unequal pair"; }Desc1211,44281
class Lt2Matcher : public PairMatchBase<Lt2Matcher, AnyLt> {Lt2Matcher1213,44342
  static const char* Desc() { return "a pair where the first < the second"; }Desc1215,44412
class Gt2Matcher : public PairMatchBase<Gt2Matcher, AnyGt> {Gt2Matcher1217,44493
  static const char* Desc() { return "a pair where the first > the second"; }Desc1219,44563
class Le2Matcher : public PairMatchBase<Le2Matcher, AnyLe> {Le2Matcher1221,44644
  static const char* Desc() { return "a pair where the first <= the second"; }Desc1223,44714
class Ge2Matcher : public PairMatchBase<Ge2Matcher, AnyGe> {Ge2Matcher1225,44796
  static const char* Desc() { return "a pair where the first >= the second"; }Desc1227,44866
class NotMatcherImpl : public MatcherInterface<const T&> {NotMatcherImpl1235,45212
  explicit NotMatcherImpl(const Matcher<T>& matcher)NotMatcherImpl1237,45280
  const Matcher<T> matcher_;matcher_1254,45729
class NotMatcher {NotMatcher1260,45884
  explicit NotMatcher(InnerMatcher matcher) : matcher_(matcher) {}NotMatcher1262,45912
  operator Matcher<T>() const {operator Matcher<T>1267,46109
  InnerMatcher matcher_;matcher_1272,46232
class AllOfMatcherImpl : public MatcherInterface<const T&> {AllOfMatcherImpl1280,46538
  explicit AllOfMatcherImpl(std::vector<Matcher<T> > matchers)AllOfMatcherImpl1282,46608
  const std::vector<Matcher<T> > matchers_;matchers_1333,48082
class VariadicMatcher {VariadicMatcher1341,48414
  VariadicMatcher(const Args&... matchers)  // NOLINTVariadicMatcher1343,48447
  operator Matcher<T>() const {operator Matcher<T>1355,48954
  void CreateVariadicMatcher(std::vector<Matcher<T> >* values,CreateVariadicMatcher1363,49215
  void CreateVariadicMatcher(CreateVariadicMatcher1370,49525
  std::tuple<Args...> matchers_;matchers_1374,49653
class AnyOfMatcherImpl : public MatcherInterface<const T&> {AnyOfMatcherImpl1385,50062
  explicit AnyOfMatcherImpl(std::vector<Matcher<T> > matchers)AnyOfMatcherImpl1387,50132
  const std::vector<Matcher<T> > matchers_;matchers_1438,51597
class ConditionalMatcher {ConditionalMatcher1447,51948
  ConditionalMatcher(bool condition, MatcherTrue matcher_true,ConditionalMatcher1449,51984
  operator Matcher<T>() const {  // NOLINT(runtime/explicit)operator Matcher<T>1456,52252
  bool condition_;condition_1462,52446
  MatcherTrue matcher_true_;matcher_true_1463,52465
  MatcherFalse matcher_false_;matcher_false_1464,52494
class SomeOfArrayMatcher {SomeOfArrayMatcher1471,52685
  SomeOfArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}SomeOfArrayMatcher1476,52836
  operator Matcher<U>() const {  // NOLINToperator Matcher<U>1479,52933
  const ::std::vector<T> matchers_;matchers_1489,53250
class TrulyMatcher {TrulyMatcher1501,53581
  explicit TrulyMatcher(Predicate pred) : predicate_(pred) {}TrulyMatcher1503,53611
  bool MatchAndExplain(T& x,  // NOLINTMatchAndExplain1510,53947
  void DescribeTo(::std::ostream* os) const {DescribeTo1524,54452
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1528,54547
  Predicate predicate_;predicate_1533,54666
class MatcherAsPredicate {MatcherAsPredicate1539,54802
  explicit MatcherAsPredicate(M matcher) : matcher_(matcher) {}MatcherAsPredicate1541,54838
  bool operator()(const T& x) const {operator ()1550,55209
  M matcher_;matcher_1569,56019
class PredicateFormatterFromMatcher {PredicateFormatterFromMatcher1575,56191
  explicit PredicateFormatterFromMatcher(M m) : matcher_(std::move(m)) {}PredicateFormatterFromMatcher1577,56238
  AssertionResult operator()(const char* value_text, const T& x) const {operator ()1583,56523
  const M matcher_;matcher_1619,58005
MakePredicateFormatterFromMatcher(M matcher) {MakePredicateFormatterFromMatcher1628,58363
class IsNanMatcher {IsNanMatcher1634,58577
  bool MatchAndExplain(const FloatType& f,MatchAndExplain1637,58639
  void DescribeTo(::std::ostream* os) const { *os << "is NaN"; }DescribeTo1642,58785
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo1643,58850
class FloatingEqMatcher {FloatingEqMatcher1653,59228
  FloatingEqMatcher(FloatType expected, bool nan_eq_nan) :FloatingEqMatcher1661,59648
  FloatingEqMatcher(FloatType expected, bool nan_eq_nan,FloatingEqMatcher1668,59966
  class Impl : public MatcherInterface<T> {Impl1679,60357
    Impl(FloatType expected, bool nan_eq_nan, FloatType max_abs_error)Impl1681,60412
    bool HasMaxAbsError() const {HasMaxAbsError1763,63221
    const FloatType expected_;expected_1767,63296
    const bool nan_eq_nan_;nan_eq_nan_1768,63327
    const FloatType max_abs_error_;max_abs_error_1770,63421
  operator Matcher<FloatType>() const {operator Matcher<FloatType>1776,63675
  operator Matcher<const FloatType&>() const {operator Matcher<const FloatType&>1781,63814
  operator Matcher<FloatType&>() const {operator Matcher<FloatType&>1786,63967
  const FloatType expected_;expected_1792,64118
  const bool nan_eq_nan_;nan_eq_nan_1793,64147
  const FloatType max_abs_error_;max_abs_error_1795,64237
class FloatingEq2Matcher {FloatingEq2Matcher1804,64646
  FloatingEq2Matcher() { Init(-1, false); }FloatingEq2Matcher1806,64682
  explicit FloatingEq2Matcher(bool nan_eq_nan) { Init(-1, nan_eq_nan); }FloatingEq2Matcher1808,64727
  explicit FloatingEq2Matcher(FloatType max_abs_error) {FloatingEq2Matcher1810,64801
  FloatingEq2Matcher(FloatType max_abs_error, bool nan_eq_nan) {FloatingEq2Matcher1814,64895
  operator Matcher<::std::tuple<T1, T2>>() const {operator Matcher<::std::tuple<T1, T2>>1819,65040
  operator Matcher<const ::std::tuple<T1, T2>&>() const {operator Matcher<const ::std::tuple<T1, T2>&>1824,65227
  static ::std::ostream& GetDesc(::std::ostream& os) {  // NOLINTGetDesc1830,65401
  class Impl : public MatcherInterface<Tuple> {Impl1835,65541
    Impl(FloatType max_abs_error, bool nan_eq_nan) :Impl1837,65600
    FloatType max_abs_error_;max_abs_error_1862,66545
    const bool nan_eq_nan_;nan_eq_nan_1863,66575
  void Init(FloatType max_abs_error_val, bool nan_eq_nan_val) {Init1866,66609
  FloatType max_abs_error_;max_abs_error_1870,66751
  bool nan_eq_nan_;nan_eq_nan_1871,66779
class PointeeMatcher {PointeeMatcher1877,66973
  explicit PointeeMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}PointeeMatcher1879,67005
  operator Matcher<Pointer>() const {operator Matcher<Pointer>1890,67546
  class Impl : public MatcherInterface<Pointer> {Impl1897,67772
    explicit Impl(const InnerMatcher& matcher)Impl1903,67963
    const Matcher<const Pointee&> matcher_;matcher_1925,68655
  const InnerMatcher matcher_;matcher_1928,68705
class PointerMatcher {PointerMatcher1936,68985
  explicit PointerMatcher(const InnerMatcher& matcher) : matcher_(matcher) {}PointerMatcher1938,69017
  operator Matcher<PointerType>() const {  // NOLINToperator Matcher<PointerType>1949,69566
  class Impl : public MatcherInterface<PointerType> {Impl1956,69819
    explicit Impl(const InnerMatcher& matcher)Impl1962,70025
    Matcher<Pointer> matcher_;matcher_1983,70683
  const InnerMatcher matcher_;matcher_1986,70720
class WhenDynamicCastToMatcherBase {WhenDynamicCastToMatcherBase1997,71181
  explicit WhenDynamicCastToMatcherBase(const Matcher<To>& matcher)WhenDynamicCastToMatcherBase1999,71227
  void DescribeTo(::std::ostream* os) const {DescribeTo2002,71325
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2007,71437
  const Matcher<To> matcher_;matcher_2013,71577
  static std::string GetToName() {GetToName2015,71608
  static void GetCastTypeDescription(::std::ostream* os) {GetCastTypeDescription2020,71688
class WhenDynamicCastToMatcher : public WhenDynamicCastToMatcherBase<To> {WhenDynamicCastToMatcher2028,71907
  explicit WhenDynamicCastToMatcher(const Matcher<To>& matcher)WhenDynamicCastToMatcher2030,71991
  bool MatchAndExplain(From from, MatchResultListener* listener) const {MatchAndExplain2034,72136
class WhenDynamicCastToMatcher<To&> : public WhenDynamicCastToMatcherBase<To&> {WhenDynamicCastToMatcher2043,72428
  explicit WhenDynamicCastToMatcher(const Matcher<To&>& matcher)WhenDynamicCastToMatcher2045,72518
  bool MatchAndExplain(From& from, MatchResultListener* listener) const {MatchAndExplain2049,72665
class FieldMatcher {FieldMatcher2064,73218
  FieldMatcher(FieldType Class::*field,FieldMatcher2066,73248
  FieldMatcher(const std::string& field_name, FieldType Class::*field,FieldMatcher2070,73426
  void DescribeTo(::std::ostream* os) const {DescribeTo2076,73666
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2081,73790
  bool MatchAndExplain(const T& value, MatchResultListener* listener) const {MatchAndExplain2087,73954
  bool MatchAndExplainImpl(std::false_type /* is_not_pointer */,MatchAndExplainImpl2096,74312
  bool MatchAndExplainImpl(std::true_type /* is_pointer */, const Class* p,MatchAndExplainImpl2103,74599
  const FieldType Class::*field_;field_2114,75060
  const Matcher<const FieldType&> matcher_;matcher_2115,75094
  const std::string whose_field_;whose_field_2119,75278
class PropertyMatcher {PropertyMatcher2128,75589
  typedef const PropertyType& RefToConstProperty;RefToConstProperty2130,75622
  PropertyMatcher(Property property, const Matcher<RefToConstProperty>& matcher)PropertyMatcher2132,75673
  PropertyMatcher(const std::string& property_name, Property property,PropertyMatcher2137,75863
  void DescribeTo(::std::ostream* os) const {DescribeTo2143,76123
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2148,76250
  bool MatchAndExplain(const T&value, MatchResultListener* listener) const {MatchAndExplain2154,76417
  bool MatchAndExplainImpl(std::false_type /* is_not_pointer */,MatchAndExplainImpl2161,76646
  bool MatchAndExplainImpl(std::true_type /* is_pointer */, const Class* p,MatchAndExplainImpl2171,77117
  Property property_;property_2182,77588
  const Matcher<RefToConstProperty> matcher_;matcher_2183,77610
  const std::string whose_property_;whose_property_2187,77808
struct CallableTraits {CallableTraits2193,78020
  typedef Functor StorageType;StorageType2194,78044
  static void CheckIsValid(Functor /* functor */) {}CheckIsValid2196,78076
  static auto Invoke(Functor f, const T& arg) -> decltype(f(arg)) {f2199,78154
struct CallableTraits<ResType(*)(ArgType)> {CallableTraits2206,78336
  typedef ResType ResultType;ResultType2207,78381
  typedef ResType(*StorageType)(ArgType);StorageType2208,78411
  static void CheckIsValid(ResType(*f)(ArgType)) {CheckIsValid2210,78454
  static ResType Invoke(ResType(*f)(ArgType), T arg) {Invoke2215,78627
class ResultOfMatcher {ResultOfMatcher2223,78866
  ResultOfMatcher(Callable callable, InnerMatcher matcher)ResultOfMatcher2225,78899
  operator Matcher<T>() const {operator Matcher<T>2231,79113
  typedef typename CallableTraits<Callable>::StorageType CallableStorageType;CallableStorageType2236,79224
  class Impl : public MatcherInterface<T> {Impl2239,79327
    Impl(const CallableStorageType& callable, const M& matcher)Impl2245,79553
    mutable CallableStorageType callable_;callable_2275,80964
    const Matcher<ResultType> matcher_;matcher_2276,81007
  const CallableStorageType callable_;callable_2279,81068
  const InnerMatcher matcher_;matcher_2280,81107
class SizeIsMatcher {SizeIsMatcher2285,81246
  explicit SizeIsMatcher(const SizeMatcher& size_matcher)SizeIsMatcher2287,81277
  operator Matcher<Container>() const {operator Matcher<Container>2292,81411
  class Impl : public MatcherInterface<Container> {Impl2297,81562
    explicit Impl(const SizeMatcher& size_matcher)Impl2300,81690
    const Matcher<SizeType> size_matcher_;size_matcher_2324,82550
  const SizeMatcher size_matcher_;size_matcher_2328,82609
class BeginEndDistanceIsMatcher {BeginEndDistanceIsMatcher2334,82778
  explicit BeginEndDistanceIsMatcher(const DistanceMatcher& distance_matcher)BeginEndDistanceIsMatcher2336,82821
  operator Matcher<Container>() const {operator Matcher<Container>2340,82979
  class Impl : public MatcherInterface<Container> {Impl2345,83134
        GTEST_REMOVE_REFERENCE_AND_CONST_(Container)> ContainerView;ContainerView2348,83237
        DistanceType;DistanceType2351,83420
    explicit Impl(const DistanceMatcher& distance_matcher)Impl2352,83442
    const Matcher<DistanceType> distance_matcher_;distance_matcher_2379,84545
  const DistanceMatcher distance_matcher_;distance_matcher_2383,84612
class ContainerEqMatcher {ContainerEqMatcher2397,85311
  typedef internal::StlContainerView<Container> View;View2399,85347
  typedef typename View::type StlContainer;StlContainer2400,85401
  typedef typename View::const_reference StlContainerReference;StlContainerReference2401,85445
  explicit ContainerEqMatcher(const Container& expected)ContainerEqMatcher2410,85835
  void DescribeTo(::std::ostream* os) const {DescribeTo2413,85936
  void DescribeNegationTo(::std::ostream* os) const {DescribeNegationTo2417,86043
  bool MatchAndExplain(const LhsContainer& lhs,MatchAndExplain2423,86202
  const StlContainer expected_;expected_2473,87829
struct LessComparator {LessComparator2477,87937
  bool operator()(const T& lhs, const U& rhs) const { return lhs < rhs; }operator ()2479,87997
class WhenSortedByMatcher {WhenSortedByMatcher2484,88192
  WhenSortedByMatcher(const Comparator& comparator,WhenSortedByMatcher2486,88229
  operator Matcher<LhsContainer>() const {operator Matcher<LhsContainer>2491,88426
  class Impl : public MatcherInterface<LhsContainer> {Impl2496,88580
         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;LhsView2499,88686
    typedef typename LhsView::type LhsStlContainer;LhsStlContainer2500,88753
    typedef typename LhsView::const_reference LhsStlContainerReference;LhsStlContainerReference2501,88805
        typename LhsStlContainer::value_type>::type LhsValue;LhsValue2505,89043
    Impl(const Comparator& comparator, const ContainerMatcher& matcher)Impl2507,89106
    const Comparator comparator_;comparator_2546,90565
    const Matcher<const ::std::vector<LhsValue>&> matcher_;matcher_2547,90599
  const Comparator comparator_;comparator_2553,90719
  const ContainerMatcher matcher_;matcher_2554,90751
class PointwiseMatcher {PointwiseMatcher2562,91102
  typedef internal::StlContainerView<RhsContainer> RhsView;RhsView2568,91286
  typedef typename RhsView::type RhsStlContainer;RhsStlContainer2569,91346
  typedef typename RhsStlContainer::value_type RhsValue;RhsValue2570,91396
  PointwiseMatcher(const TupleMatcher& tuple_matcher, const RhsContainer& rhs)PointwiseMatcher2579,91804
  operator Matcher<LhsContainer>() const {operator Matcher<LhsContainer>2583,91986
  class Impl : public MatcherInterface<LhsContainer> {Impl2593,92321
         GTEST_REMOVE_REFERENCE_AND_CONST_(LhsContainer)> LhsView;LhsView2596,92427
    typedef typename LhsView::type LhsStlContainer;LhsStlContainer2597,92494
    typedef typename LhsView::const_reference LhsStlContainerReference;LhsStlContainerReference2598,92546
    typedef typename LhsStlContainer::value_type LhsValue;LhsValue2599,92618
    typedef ::std::tuple<const LhsValue&, const RhsValue&> InnerMatcherArg;InnerMatcherArg2604,92918
    Impl(const TupleMatcher& tuple_matcher, const RhsStlContainer& rhs)Impl2606,92995
    const Matcher<InnerMatcherArg> mono_tuple_matcher_;mono_tuple_matcher_2668,95630
    const RhsStlContainer rhs_;rhs_2669,95686
  const TupleMatcher tuple_matcher_;tuple_matcher_2673,95734
  const RhsStlContainer rhs_;rhs_2674,95771
class QuantifierMatcherImpl : public MatcherInterface<Container> {QuantifierMatcherImpl2679,95905
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer2681,95981
  typedef StlContainerView<RawContainer> View;View2682,96050
  typedef typename View::type StlContainer;StlContainer2683,96097
  typedef typename View::const_reference StlContainerReference;StlContainerReference2684,96141
  typedef typename StlContainer::value_type Element;Element2685,96205
  explicit QuantifierMatcherImpl(InnerMatcher inner_matcher)QuantifierMatcherImpl2688,96294
  bool MatchAndExplainImpl(bool all_elements_should_match,MatchAndExplainImpl2695,96622
  bool MatchAndExplainImpl(const Matcher<size_t>& count_matcher,MatchAndExplainImpl2715,97434
  const Matcher<const Element&> inner_matcher_;inner_matcher_2764,99189
class ContainsMatcherImpl : public QuantifierMatcherImpl<Container> {ContainsMatcherImpl2770,99383
  explicit ContainsMatcherImpl(InnerMatcher inner_matcher)ContainsMatcherImpl2773,99497
class EachMatcherImpl : public QuantifierMatcherImpl<Container> {EachMatcherImpl2796,100294
  explicit EachMatcherImpl(InnerMatcher inner_matcher)EachMatcherImpl2799,100404
class ContainsTimesMatcherImpl : public QuantifierMatcherImpl<Container> {ContainsTimesMatcherImpl2822,101170
  explicit ContainsTimesMatcherImpl(InnerMatcher inner_matcher,ContainsTimesMatcherImpl2825,101289
  const Matcher<size_t> count_matcher_;count_matcher_2850,102149
class ContainsTimesMatcher {ContainsTimesMatcher2855,102277
  explicit ContainsTimesMatcher(M m, Matcher<size_t> count_matcher)ContainsTimesMatcher2857,102315
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2861,102487
  const M inner_matcher_;inner_matcher_2867,102673
  const Matcher<size_t> count_matcher_;count_matcher_2868,102699
class ContainsMatcher {ContainsMatcher2873,102818
  explicit ContainsMatcher(M m) : inner_matcher_(m) {}ContainsMatcher2875,102851
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2878,102939
  ContainsTimesMatcher<M> Times(Matcher<size_t> count_matcher) const {Times2883,103094
  const M inner_matcher_;inner_matcher_2888,103258
class EachMatcher {EachMatcher2893,103359
  explicit EachMatcher(M m) : inner_matcher_(m) {}EachMatcher2895,103388
  operator Matcher<Container>() const {  // NOLINToperator Matcher<Container>2898,103472
  const M inner_matcher_;inner_matcher_2904,103633
struct Rank1 {};Rank12907,103663
struct Rank0 : Rank1 {};Rank02908,103680
namespace pair_getters {pair_getters2910,103706
auto First(T& x, Rank1) -> decltype(get<0>(x)) {  // NOLINTget2913,103769
auto First(T& x, Rank0) -> decltype((x.first)) {  // NOLINTdecltype2917,103873
auto Second(T& x, Rank1) -> decltype(get<1>(x)) {  // NOLINTget2922,103976
auto Second(T& x, Rank0) -> decltype((x.second)) {  // NOLINTdecltype2926,104081
class KeyMatcherImpl : public MatcherInterface<PairType> {KeyMatcherImpl2936,104504
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;RawPairType2938,104572
  typedef typename RawPairType::first_type KeyType;KeyType2939,104639
  explicit KeyMatcherImpl(InnerMatcher inner_matcher)KeyMatcherImpl2942,104727
  const Matcher<const KeyType&> inner_matcher_;inner_matcher_2974,105808
class KeyMatcher {KeyMatcher2979,105930
  explicit KeyMatcher(M m) : matcher_for_key_(m) {}KeyMatcher2981,105958
  operator Matcher<PairType>() const {operator Matcher<PairType>2984,106042
  const M matcher_for_key_;matcher_for_key_2990,106190
class AddressMatcher {AddressMatcher2995,106311
  explicit AddressMatcher(InnerMatcher m) : matcher_(m) {}AddressMatcher2997,106343
  operator Matcher<Type>() const {  // NOLINToperator Matcher<Type>3000,106430
  class Impl : public MatcherInterface<Type> {Impl3007,106654
    explicit Impl(const InnerMatcher& matcher)Impl3010,106781
    const Matcher<Address> matcher_;matcher_3031,107441
  const InnerMatcher matcher_;matcher_3033,107483
class PairMatcherImpl : public MatcherInterface<PairType> {PairMatcherImpl3039,107683
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(PairType) RawPairType;RawPairType3041,107752
  typedef typename RawPairType::first_type FirstType;FirstType3042,107819
  typedef typename RawPairType::second_type SecondType;SecondType3043,107873
  PairMatcherImpl(FirstMatcher first_matcher, SecondMatcher second_matcher)PairMatcherImpl3046,107989
  void ExplainSuccess(const std::string& first_explanation,ExplainSuccess3099,110176
  const Matcher<const FirstType&> first_matcher_;first_matcher_3117,110787
  const Matcher<const SecondType&> second_matcher_;second_matcher_3118,110837
class PairMatcher {PairMatcher3123,111013
  PairMatcher(FirstMatcher first_matcher, SecondMatcher second_matcher)PairMatcher3125,111042
  operator Matcher<PairType> () const {operator Matcher<PairType>3129,111220
  const FirstMatcher first_matcher_;first_matcher_3135,111385
  const SecondMatcher second_matcher_;second_matcher_3136,111422
    -> decltype(std::tie(get<I>(t)...)) {tie3141,111560
auto UnpackStructImpl(const T& t, MakeIndexSequence<1>, char) {UnpackStructImpl3149,111873
auto UnpackStructImpl(const T& t, MakeIndexSequence<2>, char) {UnpackStructImpl3154,112006
auto UnpackStructImpl(const T& t, MakeIndexSequence<3>, char) {UnpackStructImpl3159,112145
auto UnpackStructImpl(const T& t, MakeIndexSequence<4>, char) {UnpackStructImpl3164,112290
auto UnpackStructImpl(const T& t, MakeIndexSequence<5>, char) {UnpackStructImpl3169,112441
auto UnpackStructImpl(const T& t, MakeIndexSequence<6>, char) {UnpackStructImpl3174,112598
auto UnpackStructImpl(const T& t, MakeIndexSequence<7>, char) {UnpackStructImpl3179,112761
auto UnpackStructImpl(const T& t, MakeIndexSequence<8>, char) {UnpackStructImpl3184,112930
auto UnpackStructImpl(const T& t, MakeIndexSequence<9>, char) {UnpackStructImpl3189,113105
auto UnpackStructImpl(const T& t, MakeIndexSequence<10>, char) {UnpackStructImpl3194,113286
auto UnpackStructImpl(const T& t, MakeIndexSequence<11>, char) {UnpackStructImpl3199,113474
auto UnpackStructImpl(const T& t, MakeIndexSequence<12>, char) {UnpackStructImpl3204,113668
auto UnpackStructImpl(const T& t, MakeIndexSequence<13>, char) {UnpackStructImpl3209,113868
auto UnpackStructImpl(const T& t, MakeIndexSequence<14>, char) {UnpackStructImpl3214,114074
auto UnpackStructImpl(const T& t, MakeIndexSequence<15>, char) {UnpackStructImpl3219,114286
auto UnpackStructImpl(const T& t, MakeIndexSequence<16>, char) {UnpackStructImpl3224,114504
    -> decltype((UnpackStructImpl)(t, MakeIndexSequence<I>{}, 0)) {decltype3232,114815
class FieldsAreMatcherImpl<Struct, IndexSequence<I...>>FieldsAreMatcherImpl3246,115276
  explicit FieldsAreMatcherImpl(const Inner& matchers)FieldsAreMatcherImpl3255,115621
  bool MatchInternal(UnpackedType tuple, MatchResultListener* listener) const {MatchInternal3279,116546
  MatchersType matchers_;matchers_3317,117872
class FieldsAreMatcher {FieldsAreMatcher3321,117931
  explicit FieldsAreMatcher(Inner... inner) : matchers_(std::move(inner)...) {}FieldsAreMatcher3323,117965
  operator Matcher<Struct>() const {  // NOLINToperator Matcher<Struct>3326,118075
  std::tuple<Inner...> matchers_;matchers_3333,118268
class ElementsAreMatcherImpl : public MatcherInterface<Container> {ElementsAreMatcherImpl3338,118388
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3340,118465
  typedef internal::StlContainerView<RawContainer> View;View3341,118534
  typedef typename View::type StlContainer;StlContainer3342,118591
  typedef typename View::const_reference StlContainerReference;StlContainerReference3343,118635
  typedef typename StlContainer::value_type Element;Element3344,118699
  ElementsAreMatcherImpl(InputIter first, InputIter last) {ElementsAreMatcherImpl3349,118873
  static Message Elements(size_t count) {Elements3472,122923
  size_t count() const { return matchers_.size(); }count3476,123044
  ::std::vector<Matcher<const Element&> > matchers_;matchers_3478,123097
class GTEST_API_ MatchMatrix {MatchMatrix3485,123390
  MatchMatrix(size_t num_elements, size_t num_matchers)MatchMatrix3487,123430
  size_t LhsSize() const { return num_elements_; }LhsSize3493,123617
  size_t RhsSize() const { return num_matchers_; }RhsSize3494,123668
  bool HasEdge(size_t ilhs, size_t irhs) const {HasEdge3495,123719
  void SetEdge(size_t ilhs, size_t irhs, bool b) {SetEdge3498,123822
  size_t SpaceIndex(size_t ilhs, size_t irhs) const {SpaceIndex3512,124181
  size_t num_elements_;num_elements_3516,124280
  size_t num_matchers_;num_matchers_3517,124304
  ::std::vector<char> matched_;matched_3522,124526
typedef ::std::pair<size_t, size_t> ElementMatcherPair;ElementMatcherPair3525,124562
typedef ::std::vector<ElementMatcherPair> ElementMatcherPairs;ElementMatcherPairs3526,124618
struct UnorderedMatcherRequire {UnorderedMatcherRequire3533,124903
  enum Flags {Flags3534,124936
    Superset = 1 << 0,Superset3535,124951
    Subset = 1 << 1,Subset3536,124974
    ExactMatch = Superset | Subset,ExactMatch3537,124995
class GTEST_API_ UnorderedElementsAreMatcherImplBase {UnorderedElementsAreMatcherImplBase3544,125226
  explicit UnorderedElementsAreMatcherImplBase(UnorderedElementsAreMatcherImplBase3546,125293
  typedef ::std::vector<const MatcherDescriberInterface*> MatcherDescriberVec;MatcherDescriberVec3553,125603
  MatcherDescriberVec& matcher_describers() {matcher_describers3568,126205
  static Message Elements(size_t n) {Elements3572,126288
  UnorderedMatcherRequire::Flags match_flags() const { return match_flags_; }match_flags3576,126395
  UnorderedMatcherRequire::Flags match_flags_;match_flags_3579,126484
  MatcherDescriberVec matcher_describers_;matcher_describers_3580,126531
class UnorderedElementsAreMatcherImplUnorderedElementsAreMatcherImpl3586,126704
  typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Container) RawContainer;RawContainer3590,126844
  typedef internal::StlContainerView<RawContainer> View;View3591,126913
  typedef typename View::type StlContainer;StlContainer3592,126970
  typedef typename View::const_reference StlContainerReference;StlContainerReference3593,127014
  typedef typename StlContainer::value_type Element;Element3594,127078
  UnorderedElementsAreMatcherImpl(UnorderedMatcherRequire::Flags matcher_flags,UnorderedElementsAreMatcherImpl3597,127164
  MatchMatrix AnalyzeElements(ElementIter elem_first, ElementIter elem_last,AnalyzeElements3649,129137
  ::std::vector<Matcher<const Element&> > matchers_;matchers_3676,130199
struct CastAndAppendTransform {CastAndAppendTransform3682,130387
  Matcher<Target> operator()(const Arg& a) const {operator ()3684,130445
class UnorderedElementsAreMatcher {UnorderedElementsAreMatcher3691,130608
  explicit UnorderedElementsAreMatcher(const MatcherTuple& args)UnorderedElementsAreMatcher3693,130653
  operator Matcher<Container>() const {operator Matcher<Container>3697,130778
  const MatcherTuple matchers_;matchers_3713,131503
class ElementsAreMatcher {ElementsAreMatcher3718,131599
  explicit ElementsAreMatcher(const MatcherTuple& args) : matchers_(args) {}ElementsAreMatcher3720,131635
  operator Matcher<Container>() const {operator Matcher<Container>3723,131745
  const MatcherTuple matchers_;matchers_3742,132612
class UnorderedElementsAreArrayMatcher {UnorderedElementsAreArrayMatcher3747,132747
  UnorderedElementsAreArrayMatcher(UnorderedMatcherRequire::Flags match_flags,UnorderedElementsAreArrayMatcher3750,132824
  operator Matcher<Container>() const {operator Matcher<Container>3755,133055
  UnorderedMatcherRequire::Flags match_flags_;match_flags_3762,133268
  ::std::vector<T> matchers_;matchers_3763,133315
class ElementsAreArrayMatcher {ElementsAreArrayMatcher3768,133405
  ElementsAreArrayMatcher(Iter first, Iter last) : matchers_(first, last) {}ElementsAreArrayMatcher3771,133473
  operator Matcher<Container>() const {operator Matcher<Container>3774,133583
  const ::std::vector<T> matchers_;matchers_3784,133920
class BoundSecondMatcher {BoundSecondMatcher3797,134497
  BoundSecondMatcher(const Tuple2Matcher& tm, const Second& second)BoundSecondMatcher3799,134533
  BoundSecondMatcher(const BoundSecondMatcher& other) = default;other3802,134656
  operator Matcher<T>() const {operator Matcher<T>3805,134746
  void operator=(const BoundSecondMatcher& /*rhs*/) {operator =3817,135258
  class Impl : public MatcherInterface<T> {Impl3823,135424
    typedef ::std::tuple<T, Second> ArgTuple;ArgTuple3825,135479
    Impl(const Tuple2Matcher& tm, const Second& second)Impl3827,135526
    const Matcher<const ArgTuple&> mono_tuple2_matcher_;mono_tuple2_matcher_3844,136111
    const Second second_value_;second_value_3845,136168
  const Tuple2Matcher tuple2_matcher_;tuple2_matcher_3848,136206
  const Second second_value_;second_value_3849,136245
BoundSecondMatcher<Tuple2Matcher, Second> MatcherBindSecond(MatcherBindSecond3857,136592
class OptionalMatcher {OptionalMatcher3873,137422
  explicit OptionalMatcher(const ValueMatcher& value_matcher)OptionalMatcher3875,137455
  operator Matcher<Optional>() const {operator Matcher<Optional>3879,137590
  class Impl : public MatcherInterface<Optional> {Impl3884,137738
    typedef GTEST_REMOVE_REFERENCE_AND_CONST_(Optional) OptionalView;OptionalView3886,137800
    typedef typename OptionalView::value_type ValueType;ValueType3887,137870
    explicit Impl(const ValueMatcher& value_matcher)Impl3888,137927
    const Matcher<ValueType> value_matcher_;value_matcher_3917,138920
  const ValueMatcher value_matcher_;value_matcher_3921,138981
namespace variant_matcher {variant_matcher3924,139022
void holds_alternative() {}holds_alternative3927,139134
void get() {}get3929,139184
class VariantMatcher {VariantMatcher3933,139297
  explicit VariantMatcher(::testing::Matcher<const T&> matcher)VariantMatcher3935,139329
  bool MatchAndExplain(const Variant& value,MatchAndExplain3939,139464
  void DescribeTo(std::ostream* os) const {DescribeTo3960,140214
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo3966,140389
  static std::string GetTypeName() {GetTypeName3973,140600
  const ::testing::Matcher<const T&> matcher_;matcher_3981,140795
namespace any_cast_matcher {any_cast_matcher3986,140879
void any_cast() {}any_cast3990,140993
class AnyCastMatcher {AnyCastMatcher3994,141085
  explicit AnyCastMatcher(const ::testing::Matcher<const T&>& matcher)AnyCastMatcher3996,141117
  bool MatchAndExplain(const AnyType& value,MatchAndExplain4000,141248
  void DescribeTo(std::ostream* os) const {DescribeTo4021,141993
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo4027,142170
  static std::string GetTypeName() {GetTypeName4034,142383
  const ::testing::Matcher<const T&> matcher_;matcher_4042,142578
class ArgsMatcherImpl : public MatcherInterface<ArgsTuple> {ArgsMatcherImpl4049,142737
  explicit ArgsMatcherImpl(const InnerMatcher& inner_matcher)ArgsMatcherImpl4057,143064
  static void PrintIndices(::std::ostream* os) {PrintIndices4092,144256
  MonomorphicInnerMatcher inner_matcher_;inner_matcher_4102,144551
class ArgsMatcher {ArgsMatcher4106,144640
  explicit ArgsMatcher(InnerMatcher inner_matcher)ArgsMatcher4108,144669
  operator Matcher<ArgsTuple>() const {  // NOLINToperator Matcher<ArgsTuple>4112,144805
  InnerMatcher inner_matcher_;inner_matcher_4117,144949
ElementsAreArray(Iter first, Iter last) {ElementsAreArray4140,145818
    -> decltype(ElementsAreArray(pointer, pointer + count)) {ElementsAreArray4147,146069
    -> decltype(ElementsAreArray(array, N)) {decltype4153,146269
    -> decltype(ElementsAreArray(container.begin(), container.end())) {ElementsAreArray4159,146442
    -> decltype(ElementsAreArray(xs.begin(), xs.end())) {ElementsAreArray4165,146662
UnorderedElementsAreArray(Iter first, Iter last) {UnorderedElementsAreArray4185,147462
UnorderedElementsAreArray(const T* pointer, size_t count) {UnorderedElementsAreArray4193,147777
UnorderedElementsAreArray(const Container& container) {UnorderedElementsAreArray4206,148202
UnorderedElementsAreArray(::std::initializer_list<T> xs) {UnorderedElementsAreArray4212,148408
const internal::AnythingMatcher _ = {};_4225,148917
inline Matcher<T> A() {A4228,149044
inline Matcher<T> An() {An4234,149170
Matcher<T> internal::MatcherCastImpl<T, M>::CastImpl(CastImpl4239,149244
inline PolymorphicMatcher<internal::IsNullMatcher > IsNull() {IsNull4246,149497
inline PolymorphicMatcher<internal::NotNullMatcher > NotNull() {NotNull4253,149828
inline internal::RefMatcher<T&> Ref(T& x) {  // NOLINTRef4260,150069
inline PolymorphicMatcher<internal::IsNanMatcher> IsNan() {IsNan4265,150235
inline internal::FloatingEqMatcher<double> DoubleEq(double rhs) {DoubleEq4271,150481
inline internal::FloatingEqMatcher<double> NanSensitiveDoubleEq(double rhs) {NanSensitiveDoubleEq4277,150731
inline internal::FloatingEqMatcher<double> DoubleNear(DoubleNear4284,151094
inline internal::FloatingEqMatcher<double> NanSensitiveDoubleNear(NanSensitiveDoubleNear4292,151489
inline internal::FloatingEqMatcher<float> FloatEq(float rhs) {FloatEq4299,151794
inline internal::FloatingEqMatcher<float> NanSensitiveFloatEq(float rhs) {NanSensitiveFloatEq4305,152039
inline internal::FloatingEqMatcher<float> FloatNear(FloatNear4312,152397
inline internal::FloatingEqMatcher<float> NanSensitiveFloatNear(NanSensitiveFloatNear4320,152786
inline internal::PointeeMatcher<InnerMatcher> Pointee(Pointee4328,153109
WhenDynamicCastTo(const Matcher<To>& inner_matcher) {WhenDynamicCastTo4342,153737
  internal::FieldMatcher<Class, FieldType> > Field(Field4354,154197
inline PolymorphicMatcher<internal::FieldMatcher<Class, FieldType> > Field(Field4368,154832
Property(const std::string& property_name,Property4399,156381
Property(const std::string& property_name,Property4424,157580
internal::ResultOfMatcher<Callable, InnerMatcher> ResultOf(ResultOf4442,158519
PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrEq(StrEq4452,158828
PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrNe(StrNe4460,159130
PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrCaseEq(StrCaseEq4468,159444
PolymorphicMatcher<internal::StrEqualityMatcher<std::string> > StrCaseNe(StrCaseNe4476,159766
PolymorphicMatcher<internal::HasSubstrMatcher<std::string> > HasSubstr(HasSubstr4485,160145
PolymorphicMatcher<internal::StartsWithMatcher<std::string> > StartsWith(StartsWith4493,160473
PolymorphicMatcher<internal::EndsWithMatcher<std::string> > EndsWith(EndsWith4501,160796
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring> > StrEq(StrEq4511,161101
inline PolymorphicMatcher<internal::StrEqualityMatcher<std::wstring> > StrNe(StrNe4518,161352
StrCaseEq(const std::wstring& str) {StrCaseEq4526,161686
StrCaseNe(const std::wstring& str) {StrCaseNe4533,161952
inline PolymorphicMatcher<internal::HasSubstrMatcher<std::wstring> > HasSubstr(HasSubstr4540,162213
StartsWith(const std::wstring& prefix) {StartsWith4548,162560
inline PolymorphicMatcher<internal::EndsWithMatcher<std::wstring> > EndsWith(EndsWith4554,162757
inline internal::Eq2Matcher Eq() { return internal::Eq2Matcher(); }Eq4564,163097
inline internal::Ge2Matcher Ge() { return internal::Ge2Matcher(); }Ge4568,163268
inline internal::Gt2Matcher Gt() { return internal::Gt2Matcher(); }Gt4572,163438
inline internal::Le2Matcher Le() { return internal::Le2Matcher(); }Le4576,163609
inline internal::Lt2Matcher Lt() { return internal::Lt2Matcher(); }Lt4580,163779
inline internal::Ne2Matcher Ne() { return internal::Ne2Matcher(); }Ne4584,163950
inline internal::FloatingEq2Matcher<float> FloatEq() {FloatEq4588,164131
inline internal::FloatingEq2Matcher<double> DoubleEq() {DoubleEq4594,164350
inline internal::FloatingEq2Matcher<float> NanSensitiveFloatEq() {NanSensitiveFloatEq4600,164589
inline internal::FloatingEq2Matcher<double> NanSensitiveDoubleEq() {NanSensitiveDoubleEq4606,164842
inline internal::FloatingEq2Matcher<float> FloatNear(float max_abs_error) {FloatNear4612,165096
inline internal::FloatingEq2Matcher<double> DoubleNear(double max_abs_error) {DoubleNear4618,165366
inline internal::FloatingEq2Matcher<float> NanSensitiveFloatNear(NanSensitiveFloatNear4625,165660
inline internal::FloatingEq2Matcher<double> NanSensitiveDoubleNear(NanSensitiveDoubleNear4633,165974
inline internal::NotMatcher<InnerMatcher> Not(InnerMatcher m) {Not4641,166253
Truly(Predicate pred) {Truly4650,166652
SizeIs(const SizeMatcher& size_matcher) {SizeIs4662,167241
BeginEndDistanceIs(const DistanceMatcher& distance_matcher) {BeginEndDistanceIs4673,167806
ContainerEq(const Container& rhs) {ContainerEq4684,168343
WhenSortedBy(const Comparator& comparator,WhenSortedBy4692,168708
WhenSorted(const ContainerMatcher& container_matcher) {WhenSorted4702,169154
Pointwise(const TupleMatcher& tuple_matcher, const Container& rhs) {Pointwise4717,169952
inline internal::PointwiseMatcher<TupleMatcher, std::vector<T> > Pointwise(Pointwise4725,170261
UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,UnorderedPointwise4748,171360
UnorderedPointwise(const Tuple2Matcher& tuple2_matcher,UnorderedPointwise4775,172501
inline internal::ContainsMatcher<M> Contains(M matcher) {Contains4812,173841
IsSupersetOf(Iter first, Iter last) {IsSupersetOf4846,175420
inline internal::UnorderedElementsAreArrayMatcher<T> IsSupersetOf(IsSupersetOf4853,175667
IsSupersetOf(const Container& container) {IsSupersetOf4867,176103
inline internal::UnorderedElementsAreArrayMatcher<T> IsSupersetOf(IsSupersetOf4872,176230
IsSubsetOf(Iter first, Iter last) {IsSubsetOf4903,177627
inline internal::UnorderedElementsAreArrayMatcher<T> IsSubsetOf(IsSubsetOf4910,177870
IsSubsetOf(const Container& container) {IsSubsetOf4924,178298
inline internal::UnorderedElementsAreArrayMatcher<T> IsSubsetOf(IsSubsetOf4929,178421
inline internal::EachMatcher<M> Each(M matcher) {Each4962,179562
inline internal::KeyMatcher<M> Key(M inner_matcher) {Key4970,179895
Pair(FirstMatcher first_matcher, SecondMatcher second_matcher) {Pair4981,180474
namespace no_adl {no_adl4986,180641
internal::ConditionalMatcher<MatcherTrue, MatcherFalse> Conditional(Conditional4993,181012
internal::FieldsAreMatcher<typename std::decay<M>::type...> FieldsAre(FieldsAre5004,181602
inline internal::PointerMatcher<InnerMatcher> Pointer(Pointer5013,181929
inline internal::AddressMatcher<InnerMatcher> Address(Address5021,182220
internal::WhenBase64UnescapedMatcher WhenBase64Unescaped(WhenBase64Unescaped5029,182510
inline internal::MatcherAsPredicate<M> Matches(M matcher) {Matches5038,182812
inline bool Value(const T& value, M matcher) {Value5044,183022
inline bool ExplainMatchResult(ExplainMatchResult5051,183242
std::string DescribeMatcher(const M& matcher, bool negation = false) {DescribeMatcher5067,183971
ElementsAre(const Args&... matchers) {ElementsAre5081,184394
UnorderedElementsAre(const Args&... matchers) {UnorderedElementsAre5090,184700
internal::AllOfMatcher<typename std::decay<const Args&>::type...> AllOf(AllOf5098,184963
internal::AnyOfMatcher<typename std::decay<const Args&>::type...> AnyOf(AnyOf5105,185194
AnyOfArray(Iter first, Iter last) {AnyOfArray5136,186250
AllOfArray(Iter first, Iter last) {AllOfArray5144,186514
inline internal::AnyOfArrayMatcher<T> AnyOfArray(const T* ptr, size_t count) {AnyOfArray5150,186684
inline internal::AllOfArrayMatcher<T> AllOfArray(const T* ptr, size_t count) {AllOfArray5155,186827
inline internal::AnyOfArrayMatcher<typename Container::value_type> AnyOfArray(AnyOfArray5170,187254
inline internal::AllOfArrayMatcher<typename Container::value_type> AllOfArray(AllOfArray5176,187457
inline internal::AnyOfArrayMatcher<T> AnyOfArray(AnyOfArray5182,187652
inline internal::AllOfArrayMatcher<T> AllOfArray(AllOfArray5188,187807
internal::ArgsMatcher<typename std::decay<InnerMatcher>::type, k...> Args(Args5197,188182
inline InnerMatcher AllArgs(const InnerMatcher& matcher) { return matcher; }AllArgs5211,188638
inline internal::OptionalMatcher<ValueMatcher> Optional(Optional5222,189297
PolymorphicMatcher<internal::any_cast_matcher::AnyCastMatcher<T> > AnyWith(AnyWith5229,189559
PolymorphicMatcher<internal::variant_matcher::VariantMatcher<T> > VariantWith(VariantWith5240,190000
namespace internal {internal5250,190359
class WithWhatMatcherImpl {WithWhatMatcherImpl5252,190381
  WithWhatMatcherImpl(Matcher<std::string> matcher)WithWhatMatcherImpl5254,190418
  void DescribeTo(std::ostream* os) const {DescribeTo5257,190511
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo5262,190626
  bool MatchAndExplain(const Err& err, MatchResultListener* listener) const {MatchAndExplain5268,190784
  const Matcher<std::string> matcher_;matcher_5275,191033
inline PolymorphicMatcher<WithWhatMatcherImpl> WithWhat(WithWhat5278,191076
class ExceptionMatcherImpl {ExceptionMatcherImpl5284,191258
  class NeverThrown {NeverThrown5285,191287
  ExceptionMatcherImpl(Matcher<const Err&> matcher)ExceptionMatcherImpl5320,192647
  void DescribeTo(std::ostream* os) const {DescribeTo5323,192740
  void DescribeNegationTo(std::ostream* os) const {DescribeNegationTo5329,192908
  bool MatchAndExplain(T&& x, MatchResultListener* listener) const {MatchAndExplain5336,193120
  const Matcher<const Err&> matcher_;matcher_5362,193931
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> Throws() {Throws5390,194694
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> Throws(Throws5396,194909
PolymorphicMatcher<internal::ExceptionMatcherImpl<Err>> ThrowsMessage(ThrowsMessage5406,195411
#define ASSERT_THAT(ASSERT_THAT5420,196087
#define EXPECT_THAT(EXPECT_THAT5422,196221
#define MATCHER(MATCHER5426,196400
#define MATCHER_P(MATCHER_P5463,199248
#define MATCHER_P2(MATCHER_P25465,199357
#define MATCHER_P3(MATCHER_P35467,199476
#define MATCHER_P4(MATCHER_P45469,199603
#define MATCHER_P5(MATCHER_P55471,199738
#define MATCHER_P6(MATCHER_P65474,199911
#define MATCHER_P7(MATCHER_P75477,200090
#define MATCHER_P8(MATCHER_P85480,200281
#define MATCHER_P9(MATCHER_P95483,200484
#define MATCHER_P10(MATCHER_P105486,200699
#define GMOCK_INTERNAL_MATCHER(GMOCK_INTERNAL_MATCHER5490,200929
#define GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAMS(GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAMS5540,204830
#define GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAM(GMOCK_INTERNAL_MATCHER_TEMPLATE_PARAM5543,205012
#define GMOCK_INTERNAL_MATCHER_TYPE_PARAMS(GMOCK_INTERNAL_MATCHER_TYPE_PARAMS5546,205113
#define GMOCK_INTERNAL_MATCHER_TYPE_PARAM(GMOCK_INTERNAL_MATCHER_TYPE_PARAM5548,205242
#define GMOCK_INTERNAL_MATCHER_FUNCTION_ARGS(GMOCK_INTERNAL_MATCHER_FUNCTION_ARGS5551,205330
#define GMOCK_INTERNAL_MATCHER_FUNCTION_ARG(GMOCK_INTERNAL_MATCHER_FUNCTION_ARG5554,205488
#define GMOCK_INTERNAL_MATCHER_FORWARD_ARGS(GMOCK_INTERNAL_MATCHER_FORWARD_ARGS5557,205582
#define GMOCK_INTERNAL_MATCHER_FORWARD_ARG(GMOCK_INTERNAL_MATCHER_FORWARD_ARG5559,205713
#define GMOCK_INTERNAL_MATCHER_MEMBERS(GMOCK_INTERNAL_MATCHER_MEMBERS5562,205828
#define GMOCK_INTERNAL_MATCHER_MEMBER(GMOCK_INTERNAL_MATCHER_MEMBER5564,205934
#define GMOCK_INTERNAL_MATCHER_MEMBERS_USAGE(GMOCK_INTERNAL_MATCHER_MEMBERS_USAGE5567,206027
#define GMOCK_INTERNAL_MATCHER_MEMBER_USAGE(GMOCK_INTERNAL_MATCHER_MEMBER_USAGE5569,206160
#define GMOCK_INTERNAL_MATCHER_ARGS_USAGE(GMOCK_INTERNAL_MATCHER_ARGS_USAGE5571,206239
#define GMOCK_INTERNAL_MATCHER_ARG_USAGE(GMOCK_INTERNAL_MATCHER_ARG_USAGE5573,206366

test/googletest/googlemock/include/gmock/gmock-actions.h,17319
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_ACTIONS_H_129,5273
namespace testing {testing152,5714
namespace internal {internal163,6150
struct BuiltInDefaultValueGetter {BuiltInDefaultValueGetter171,6451
  static T Get() { return T(); }Get172,6486
struct BuiltInDefaultValueGetter<T, false> {BuiltInDefaultValueGetter175,6544
  static T Get() {Get176,6589
class BuiltInDefaultValue {BuiltInDefaultValue193,7337
  static bool Exists() {Exists197,7463
  static T Get() {Get201,7547
class BuiltInDefaultValue<const T> {BuiltInDefaultValue210,7798
  static bool Exists() { return BuiltInDefaultValue<T>::Exists(); }Exists212,7844
  static T Get() { return BuiltInDefaultValue<T>::Get(); }Get213,7912
class BuiltInDefaultValue<T*> {BuiltInDefaultValue219,8077
  static bool Exists() { return true; }Exists221,8118
  static T* Get() { return nullptr; }Get222,8158
#define GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_(GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_227,8296
#undef GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_GMOCK_DEFINE_DEFAULT_ACTION_FOR_RETURN_TYPE_263,9992
class DefaultValue {DefaultValue285,10855
  static void Set(T x) {Set289,10996
  typedef T (*FactoryFunction)();FactoryFunction297,11276
  static void SetFactory(FactoryFunction factory) {SetFactory298,11310
  static void Clear() {Clear304,11482
  static bool IsSet() { return producer_ != nullptr; }IsSet310,11638
  static bool Exists() {Exists314,11807
  static T Get() {Get321,12111
  class ValueProducer {ValueProducer327,12275
    virtual ~ValueProducer() {}~ValueProducer329,12310
  class FixedValueProducer : public ValueProducer {FixedValueProducer333,12377
    explicit FixedValueProducer(T value) : value_(value) {}FixedValueProducer335,12440
    const T value_;value_339,12557
  class FactoryValueProducer : public ValueProducer {FactoryValueProducer343,12640
    explicit FactoryValueProducer(FactoryFunction factory)FactoryValueProducer345,12705
    const FactoryFunction factory_;factory_350,12856
  static ValueProducer* producer_;producer_354,12957
class DefaultValue<T&> {DefaultValue360,13109
  static void Set(T& x) {  // NOLINTSet363,13184
  static void Clear() { address_ = nullptr; }Clear368,13288
  static bool IsSet() { return address_ != nullptr; }IsSet371,13416
  static bool Exists() {Exists375,13584
  static T& Get() {Get382,13851
  static T* address_;address_388,14004
class DefaultValue<void> {DefaultValue394,14113
  static bool Exists() { return true; }Exists396,14149
  static void Get() {}Get397,14189
typename DefaultValue<T>::ValueProducer* DefaultValue<T>::producer_ = nullptr;producer_402,14290
T* DefaultValue<T&>::address_ = nullptr;address_406,14445
class ActionInterface {ActionInterface410,14578
  typedef typename internal::Function<F>::Result Result;Result412,14611
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple413,14668
  ActionInterface() {}ActionInterface415,14740
  virtual ~ActionInterface() {}~ActionInterface416,14763
class Action {Action436,15617
  struct ActionAdapter {ActionAdapter439,15770
    ::std::shared_ptr<ActionInterface<F>> impl_;impl_441,15866
    typename internal::Function<F>::Result operator()(Args&&... args) {operator ()444,15948
  typedef typename internal::Function<F>::Result Result;Result454,16236
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple455,16293
  Action() {}Action459,16455
  Action(G&& fun) {  // NOLINTAction469,16928
  explicit Action(ActionInterface<F>* impl)Action474,17075
  explicit Action(const Action<Func>& action) : fun_(action.fun_) {}Action481,17437
  bool IsDoDefault() const { return fun_ == nullptr; }IsDoDefault484,17572
  Result Perform(ArgumentTuple args) const {Perform492,18011
  void Init(G&& g, ::std::true_type) {Init504,18281
  void Init(G&& g, ::std::false_type) {Init509,18382
  struct IgnoreArgs {IgnoreArgs514,18539
    Result operator()(const Args&...) const {operator ()516,18593
    FunctionImpl function_impl;function_impl520,18676
  ::std::function<F> fun_;fun_524,18792
class PolymorphicAction {PolymorphicAction549,19707
  explicit PolymorphicAction(const Impl& impl) : impl_(impl) {}PolymorphicAction551,19742
  operator Action<F>() const {operator Action<F>554,19831
  class MonomorphicImpl : public ActionInterface<F> {MonomorphicImpl560,19954
    typedef typename internal::Function<F>::Result Result;Result562,20019
    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple563,20078
    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}MonomorphicImpl565,20152
    Impl impl_;impl_572,20344
  Impl impl_;impl_575,20366
Action<F> MakeAction(ActionInterface<F>* impl) {MakeAction581,20522
inline PolymorphicAction<Impl> MakePolymorphicAction(const Impl& impl) {MakePolymorphicAction593,20912
namespace internal {internal597,21028
struct ByMoveWrapper {ByMoveWrapper602,21225
  explicit ByMoveWrapper(T value) : payload(std::move(value)) {}ByMoveWrapper603,21248
  T payload;payload604,21313
class ReturnAction {ReturnAction635,22448
  explicit ReturnAction(R value) : value_(new R(std::move(value))) {}ReturnAction640,22669
  operator Action<F>() const {  // NOLINToperator Action<F>645,22880
  class Impl : public ActionInterface<F> {Impl666,23931
    typedef typename Function<F>::Result Result;Result668,23985
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple669,24034
    explicit Impl(const std::shared_ptr<R>& value)Impl678,24613
    R value_before_cast_;value_before_cast_689,25067
    Result value_;value_690,25093
  class Impl<ByMoveWrapper<R_>, F> : public ActionInterface<F> {Impl698,25310
    typedef typename Function<F>::Result Result;Result700,25386
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple701,25435
    explicit Impl(const std::shared_ptr<R>& wrapper)Impl703,25499
    bool performed_;performed_714,25839
    const std::shared_ptr<R> wrapper_;wrapper_715,25860
  const std::shared_ptr<R> value_;value_718,25905
class ReturnNullAction {ReturnNullAction722,25983
  static Result Perform(const ArgumentTuple&) {Perform728,26261
class ReturnVoidAction {ReturnVoidAction734,26372
  static void Perform(const ArgumentTuple&) {Perform738,26523
class ReturnRefAction {ReturnRefAction747,26841
  explicit ReturnRefAction(T& ref) : ref_(ref) {}  // NOLINTReturnRefAction750,26950
  operator Action<F>() const {operator Action<F>755,27170
  class Impl : public ActionInterface<F> {Impl768,27741
    typedef typename Function<F>::Result Result;Result770,27795
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple771,27844
    explicit Impl(T& ref) : ref_(ref) {}  // NOLINTImpl773,27908
    T& ref_;ref_778,28041
  T& ref_;ref_781,28060
class ReturnRefOfCopyAction {ReturnRefOfCopyAction788,28271
  explicit ReturnRefOfCopyAction(const T& value) : value_(value) {}  // NOLINTReturnRefOfCopyAction792,28397
  operator Action<F>() const {operator Action<F>797,28641
  class Impl : public ActionInterface<F> {Impl811,29223
    typedef typename Function<F>::Result Result;Result813,29277
    typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple814,29326
    explicit Impl(const T& value) : value_(value) {}  // NOLINTImpl816,29390
    T value_;value_821,29537
  const T value_;value_824,29557
class ReturnRoundRobinAction {ReturnRoundRobinAction830,29732
  explicit ReturnRoundRobinAction(std::vector<T> values) {ReturnRoundRobinAction832,29772
  T operator()(Args&&...) const {operator ()839,30002
  struct State {State844,30079
    T Next() {Next845,30096
    std::vector<T> values;values851,30208
    size_t i = 0;i852,30235
  std::shared_ptr<State> state_ = std::make_shared<State>();state_854,30258
class DoDefaultAction {DoDefaultAction858,30373
  operator Action<F>() const { return Action<F>(); }  // NOLINToperator Action<F>863,30526
class AssignAction {AssignAction869,30720
  AssignAction(T1* ptr, T2 value) : ptr_(ptr), value_(value) {}AssignAction871,30750
  void Perform(const ArgumentTuple& /* args */) const {Perform874,30868
  T1* const ptr_;ptr_879,30959
  const T2 value_;value_880,30977
class SetErrnoAndReturnAction {SetErrnoAndReturnAction888,31163
  SetErrnoAndReturnAction(int errno_value, T result)SetErrnoAndReturnAction890,31204
  Result Perform(const ArgumentTuple& /* args */) const {Perform894,31366
  const int errno_;errno_900,31479
  const T result_;result_901,31499
struct SetArgumentPointeeAction {SetArgumentPointeeAction909,31734
  A value;value910,31768
  void operator()(const Args&... args) const {operator ()913,31810
struct InvokeMethodAction {InvokeMethodAction920,32016
  Class* const obj_ptr;obj_ptr921,32044
  const MethodPtr method_ptr;method_ptr922,32068
      -> decltype((obj_ptr->*method_ptr)(std::forward<Args>(args)...)) {decltype926,32169
struct InvokeWithoutArgsAction {InvokeWithoutArgsAction936,32617
  FunctionImpl function_impl;function_impl937,32650
  auto operator()(const Args&...) -> decltype(function_impl()) {function_impl942,32807
struct InvokeMethodWithoutArgsAction {InvokeMethodWithoutArgsAction949,33023
  Class* const obj_ptr;obj_ptr950,33062
  const MethodPtr method_ptr;method_ptr951,33086
  ReturnType operator()(const Args&...) const {operator ()957,33241
class IgnoreResultAction {IgnoreResultAction964,33403
  explicit IgnoreResultAction(const A& action) : action_(action) {}IgnoreResultAction966,33439
  operator Action<F>() const {operator Action<F>969,33532
  class Impl : public ActionInterface<F> {Impl988,34366
    typedef typename internal::Function<F>::Result Result;Result990,34420
    typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple991,34479
    explicit Impl(const A& action) : action_(action) {}Impl993,34553
        OriginalFunction;OriginalFunction1004,34931
    const Action<OriginalFunction> action_;action_1006,34958
  const A action_;action_1009,35008
struct WithArgsAction {WithArgsAction1013,35076
  InnerAction action;action1014,35100
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R1019,35312
struct DoAllAction {DoAllAction1032,35722
  std::vector<ActionT> Convert(IndexSequence<I...>) const {Convert1039,35922
  std::tuple<Actions...> actions;actions1044,36043
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R1047,36120
struct ReturnNewAction {ReturnNewAction1066,36781
  T* operator()() const {operator ()1067,36806
  std::tuple<Params...> params;params1074,36983
struct ReturnArgAction {ReturnArgAction1078,37039
struct SaveArgAction {SaveArgAction1087,37293
  Ptr pointer;pointer1088,37316
  void operator()(const Args&... args) const {operator ()1091,37362
struct SaveArgPointeeAction {SaveArgPointeeAction1097,37498
  Ptr pointer;pointer1098,37528
  void operator()(const Args&... args) const {operator ()1101,37574
struct SetArgRefereeAction {SetArgRefereeAction1107,37709
  T value;value1108,37738
  void operator()(Args&&... args) const {operator ()1111,37780
struct SetArrayArgumentAction {SetArrayArgumentAction1121,38130
  I1 first;first1122,38162
  I2 last;last1123,38174
  void operator()(const Args&... args) const {operator ()1126,38216
struct DeleteArgAction {DeleteArgAction1135,38427
  void operator()(const Args&... args) const {operator ()1137,38482
struct ReturnPointeeAction {ReturnPointeeAction1143,38604
  Ptr pointer;pointer1144,38633
struct ThrowAction {ThrowAction1153,38818
  T exception;exception1154,38839
  operator Action<R(Args...)>() const {  // NOLINToperator Action<R1157,38959
typedef internal::IgnoredValue Unused;Unused1196,40259
internal::DoAllAction<typename std::decay<Action>::type...> DoAll(DoAll1202,40488
WithArg(InnerAction&& action) {WithArg1214,41078
WithArgs(InnerAction&& action) {WithArgs1224,41515
WithoutArgs(InnerAction&& action) {WithoutArgs1234,41948
internal::ReturnAction<R> Return(R value) {Return1242,42260
inline PolymorphicAction<internal::ReturnNullAction> ReturnNull() {ReturnNull1247,42401
inline PolymorphicAction<internal::ReturnVoidAction> Return() {Return1252,42590
inline internal::ReturnRefAction<R> ReturnRef(R& x) {  // NOLINTReturnRef1258,42804
inline internal::ReturnRefOfCopyAction<R> ReturnRefOfCopy(const R& x) {ReturnRefOfCopy1270,43247
internal::ByMoveWrapper<R> ByMove(R x) {ByMove1279,43587
internal::ReturnRoundRobinAction<T> ReturnRoundRobin(std::vector<T> vals) {ReturnRoundRobin1287,43898
internal::ReturnRoundRobinAction<T> ReturnRoundRobin(ReturnRoundRobin1295,44256
inline internal::DoDefaultAction DoDefault() {DoDefault1301,44496
internal::SetArgumentPointeeAction<N, T> SetArgPointee(T value) {SetArgPointee1308,44723
internal::SetArgumentPointeeAction<N, T> SetArgumentPointee(T value) {SetArgumentPointee1314,44893
PolymorphicAction<internal::AssignAction<T1, T2> > Assign(T1* ptr, T2 val) {Assign1320,45100
SetErrnoAndReturn(int errval, T result) {SetErrnoAndReturn1329,45435
typename std::decay<FunctionImpl>::type Invoke(FunctionImpl&& function_impl) {Invoke1343,45851
internal::InvokeMethodAction<Class, MethodPtr> Invoke(Class* obj_ptr,Invoke1350,46138
InvokeWithoutArgs(FunctionImpl function_impl) {InvokeWithoutArgs1358,46497
internal::InvokeMethodWithoutArgsAction<Class, MethodPtr> InvokeWithoutArgs(InvokeWithoutArgs1365,46720
inline internal::IgnoreResultAction<A> IgnoreResult(const A& an_action) {IgnoreResult1374,47103
inline ::std::reference_wrapper<T> ByRef(T& l_value) {  // NOLINTByRef1389,47767
internal::ReturnNewAction<T, typename std::decay<Params>::type...> ReturnNew(ReturnNew1397,48148
internal::ReturnArgAction<k> ReturnArg() {ReturnArg1404,48415
internal::SaveArgAction<k, Ptr> SaveArg(Ptr pointer) {SaveArg1411,48609
internal::SaveArgPointeeAction<k, Ptr> SaveArgPointee(Ptr pointer) {SaveArgPointee1418,48853
internal::SetArgRefereeAction<k, typename std::decay<T>::type> SetArgReferee(SetArgReferee1425,49110
internal::SetArrayArgumentAction<k, I1, I2> SetArrayArgument(I1 first,SetArrayArgument1436,49568
internal::DeleteArgAction<k> DeleteArg() {DeleteArg1444,49844
internal::ReturnPointeeAction<Ptr> ReturnPointee(Ptr pointer) {ReturnPointee1450,49985
internal::ThrowAction<typename std::decay<T>::type> Throw(T&& exception) {Throw1458,50257
namespace internal {internal1463,50406
struct ExcessiveArg {};ExcessiveArg1479,51274
struct ImplBase {ImplBase1486,51501
  struct Holder {Holder1487,51519
    explicit operator const Impl&() const { return *ptr; }operator const Impl&1489,51597
    std::shared_ptr<Impl> ptr;ptr1490,51656
struct ActionImpl<R(Args...), Impl> : ImplBase<Impl>::type {ActionImpl1497,51890
  explicit ActionImpl(std::shared_ptr<Impl> impl) : Base{std::move(impl)} { }ActionImpl1503,52143
  R operator()(Args&&... arg) const {operator ()1505,52222
  R Apply(IndexSequence<arg_id...>, IndexSequence<excess_id...>,Apply1514,52577
::testing::Action<F> MakeAction() {MakeAction1534,53580
::testing::Action<F> MakeAction(std::shared_ptr<Impl> impl) {MakeAction1540,53757
#define GMOCK_INTERNAL_ARG_UNUSED(GMOCK_INTERNAL_ARG_UNUSED1544,53891
#define GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_ GMOCK_ACTION_ARG_TYPES_AND_NAMES_UNUSED_1546,53996
#define GMOCK_INTERNAL_ARG(GMOCK_INTERNAL_ARG1550,54164
#define GMOCK_ACTION_ARG_TYPES_AND_NAMES_ GMOCK_ACTION_ARG_TYPES_AND_NAMES_1551,54234
#define GMOCK_INTERNAL_TEMPLATE_ARG(GMOCK_INTERNAL_TEMPLATE_ARG1554,54345
#define GMOCK_ACTION_TEMPLATE_ARGS_NAMES_ GMOCK_ACTION_TEMPLATE_ARGS_NAMES_1555,54419
#define GMOCK_INTERNAL_TYPENAME_PARAM(GMOCK_INTERNAL_TYPENAME_PARAM1558,54532
#define GMOCK_ACTION_TYPENAME_PARAMS_(GMOCK_ACTION_TYPENAME_PARAMS_1559,54610
#define GMOCK_INTERNAL_TYPE_PARAM(GMOCK_INTERNAL_TYPE_PARAM1562,54735
#define GMOCK_ACTION_TYPE_PARAMS_(GMOCK_ACTION_TYPE_PARAMS_1563,54800
#define GMOCK_INTERNAL_TYPE_GVALUE_PARAM(GMOCK_INTERNAL_TYPE_GVALUE_PARAM1566,54917
#define GMOCK_ACTION_TYPE_GVALUE_PARAMS_(GMOCK_ACTION_TYPE_GVALUE_PARAMS_1568,55004
#define GMOCK_INTERNAL_GVALUE_PARAM(GMOCK_INTERNAL_GVALUE_PARAM1571,55135
#define GMOCK_ACTION_GVALUE_PARAMS_(GMOCK_ACTION_GVALUE_PARAMS_1573,55232
#define GMOCK_INTERNAL_INIT_PARAM(GMOCK_INTERNAL_INIT_PARAM1576,55353
#define GMOCK_ACTION_INIT_PARAMS_(GMOCK_ACTION_INIT_PARAMS_1578,55457
#define GMOCK_INTERNAL_FIELD_PARAM(GMOCK_INTERNAL_FIELD_PARAM1581,55574
#define GMOCK_ACTION_FIELD_PARAMS_(GMOCK_ACTION_FIELD_PARAMS_1582,55645
#define GMOCK_INTERNAL_ACTION(GMOCK_INTERNAL_ACTION1585,55749
#define ACTION(ACTION1625,58717
#define ACTION_P(ACTION_P1649,60532
#define ACTION_P2(ACTION_P21652,60623
#define ACTION_P3(ACTION_P31655,60716
#define ACTION_P4(ACTION_P41658,60809
#define ACTION_P5(ACTION_P51661,60902
#define ACTION_P6(ACTION_P61664,60995
#define ACTION_P7(ACTION_P71667,61088
#define ACTION_P8(ACTION_P81670,61181
#define ACTION_P9(ACTION_P91673,61274
#define ACTION_P10(ACTION_P101676,61367

test/googletest/googlemock/include/gmock/gmock-spec-builders.h,14898
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_SPEC_BUILDERS_H_60,2527
namespace testing {testing85,3154
namespace internal {internal95,3403
class GTEST_API_ UntypedFunctionMockerBase {UntypedFunctionMockerBase136,4905
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) = 0;g_gmock_mutex149,5391
          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) = 0;g_gmock_mutex175,6473
          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) = 0;g_gmock_mutex187,7074
  typedef std::vector<const void*> UntypedOnCallSpecs;UntypedOnCallSpecs225,8626
  const void* mock_obj_;  // Protected by g_gmock_mutex.mock_obj_236,9104
  const char* name_;  // Protected by g_gmock_mutex.name_240,9259
  UntypedOnCallSpecs untyped_on_call_specs_;untyped_on_call_specs_243,9369
  UntypedExpectations untyped_expectations_;untyped_expectations_254,9887
class UntypedOnCallSpecBase {UntypedOnCallSpecBase258,10013
  UntypedOnCallSpecBase(const char* a_file, int a_line)UntypedOnCallSpecBase261,10116
  const char* file() const { return file_; }file265,10301
  int line() const { return line_; }line266,10346
  enum Clause {Clause270,10454
    kNone,kNone273,10573
    kWith,kWith274,10584
    kWillByDefaultkWillByDefault275,10595
  void AssertSpecProperty(bool property,AssertSpecProperty279,10686
  void ExpectSpecProperty(bool property,ExpectSpecProperty285,10921
  const char* file_;file_290,11090
  int line_;line_291,11111
  Clause last_clause_;last_clause_295,11250
class OnCallSpec : public UntypedOnCallSpecBase {OnCallSpec300,11382
  typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple302,11441
  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;ArgumentMatcherTuple303,11502
  OnCallSpec(const char* a_file, int a_line,OnCallSpec307,11691
  OnCallSpec& With(const Matcher<const ArgumentTuple&>& m) {With317,12171
  OnCallSpec& WillByDefault(const Action<F>& action) {WillByDefault329,12550
  bool Matches(const ArgumentTuple& args) const {Matches342,13039
  const Action<F>& GetAction() const {GetAction347,13215
  ArgumentMatcherTuple matchers_;matchers_368,13970
  Matcher<const ArgumentTuple&> extra_matcher_;extra_matcher_369,14004
  Action<F> action_;action_370,14052
enum CallReaction {CallReaction374,14144
  kAllow,kAllow375,14164
  kWarn,kWarn376,14174
  kFail,kFail377,14183
class GTEST_API_ Mock {Mock383,14266
class GTEST_API_ Expectation {Expectation502,19176
  bool operator==(const Expectation& rhs) const {operator ==528,20211
  bool operator!=(const Expectation& rhs) const { return !(*this == rhs); }operator !=532,20321
  class Less {Less547,20812
    bool operator()(const Expectation& lhs, const Expectation& rhs) const {operator ()549,20838
  typedef ::std::set<Expectation, Less> Set;Set554,20998
  const std::shared_ptr<internal::ExpectationBase>& expectation_base() const {expectation_base560,21188
  std::shared_ptr<internal::ExpectationBase> expectation_base_;expectation_base_565,21373
class ExpectationSet {ExpectationSet581,21889
  typedef Expectation::Set::const_iterator const_iterator;const_iterator584,21993
  typedef Expectation::Set::value_type value_type;value_type587,22121
  ExpectationSet() {}ExpectationSet590,22203
  ExpectationSet(internal::ExpectationBase& exp) {  // NOLINTExpectationSet595,22361
  ExpectationSet(const Expectation& e) {  // NOLINTExpectationSet602,22659
  bool operator==(const ExpectationSet& rhs) const {operator ==611,22949
  bool operator!=(const ExpectationSet& rhs) const { return !(*this == rhs); }operator !=615,23054
  ExpectationSet& operator+=(const Expectation& e) {operator +=619,23205
  int size() const { return static_cast<int>(expectations_.size()); }size624,23310
  const_iterator begin() const { return expectations_.begin(); }begin626,23381
  const_iterator end() const { return expectations_.end(); }end627,23446
  Expectation::Set expectations_;expectations_630,23518
class GTEST_API_ Sequence {Sequence637,23767
  Sequence() : last_expectation_(new Expectation) {}Sequence640,23839
  std::shared_ptr<Expectation> last_expectation_;last_expectation_648,24137
class GTEST_API_ InSequence {InSequence675,25191
  bool sequence_created_;sequence_created_680,25273
} GTEST_ATTRIBUTE_UNUSED_;GTEST_ATTRIBUTE_UNUSED_683,25358
namespace internal {internal685,25386
class GTEST_API_ ExpectationBase {ExpectationBase705,26183
  const char* file() const { return file_; }file713,26481
  int line() const { return line_; }line714,26526
  const char* source_text() const { return source_text_.c_str(); }source_text715,26563
  const Cardinality& cardinality() const { return cardinality_; }cardinality717,26694
  void DescribeLocationTo(::std::ostream* os) const {DescribeLocationTo720,26822
  enum Clause {Clause737,27399
    kNone,kNone739,27466
    kWith,kWith740,27477
    kTimes,kTimes741,27488
    kInSequence,kInSequence742,27500
    kAfter,kAfter743,27517
    kWillOnce,kWillOnce744,27529
    kWillRepeatedly,kWillRepeatedly745,27544
    kRetiresOnSaturationkRetiresOnSaturation746,27565
  typedef std::vector<const void*> UntypedActions;UntypedActions749,27596
  void AssertSpecProperty(bool property,AssertSpecProperty756,27844
  void ExpectSpecProperty(bool property,ExpectSpecProperty762,28083
  bool cardinality_specified() const { return cardinality_specified_; }cardinality_specified773,28540
  void set_cardinality(const Cardinality& a_cardinality) {set_cardinality776,28665
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_790,29153
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_797,29312
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_804,29515
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_811,29759
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_818,30012
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_834,30633
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_841,30838
  const char* file_;          // The file that contains the expectation.file_864,31610
  int line_;                  // The line number of the expectation.line_865,31683
  const std::string source_text_;  // The EXPECT_CALL(...) source text.source_text_866,31752
  bool cardinality_specified_;cardinality_specified_868,31890
  Cardinality cardinality_;            // The cardinality of the expectation.cardinality_869,31921
  ExpectationSet immediate_prerequisites_;immediate_prerequisites_876,32360
  int call_count_;  // How many times this expectation has been invoked.call_count_880,32524
  bool retired_;    // True if and only if this expectation has retired.retired_881,32597
  UntypedActions untyped_actions_;untyped_actions_882,32670
  bool extra_matcher_specified_;extra_matcher_specified_883,32705
  bool repeated_action_specified_;  // True if a WillRepeatedly() was specified.repeated_action_specified_884,32738
  bool retires_on_saturation_;retires_on_saturation_885,32819
  Clause last_clause_;last_clause_886,32850
  mutable bool action_count_checked_;  // Under mutex_.action_count_checked_887,32873
  mutable Mutex mutex_;  // Protects action_count_checked_.mutex_888,32929
class TypedExpectation : public ExpectationBase {TypedExpectation893,33099
  typedef typename Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple895,33158
  typedef typename Function<F>::ArgumentMatcherTuple ArgumentMatcherTuple;ArgumentMatcherTuple896,33219
  typedef typename Function<F>::Result Result;Result897,33294
  TypedExpectation(FunctionMocker<F>* owner, const char* a_file, int a_line,TypedExpectation899,33342
  TypedExpectation& With(const Matcher<const ArgumentTuple&>& m) {With922,34344
  TypedExpectation& Times(const Cardinality& a_cardinality) {Times940,34916
  TypedExpectation& Times(int n) {Times946,35088
  TypedExpectation& InSequence(const Sequence& s) {InSequence951,35200
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2) {InSequence961,35576
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence964,35695
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence968,35869
  TypedExpectation& InSequence(const Sequence& s1, const Sequence& s2,InSequence972,36067
  TypedExpectation& After(const ExpectationSet& s) {After979,36359
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2) {After991,36800
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After994,36916
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After998,37088
  TypedExpectation& After(const ExpectationSet& s1, const ExpectationSet& s2,After1002,37290
  TypedExpectation& WillOnce(const Action<F>& action) {WillOnce1009,37589
  TypedExpectation& WillRepeatedly(const Action<F>& action) {WillRepeatedly1023,38097
  TypedExpectation& RetiresOnSaturation() {RetiresOnSaturation1048,38992
  const ArgumentMatcherTuple& matchers() const {matchers1063,39535
  const Matcher<const ArgumentTuple&>& extra_matcher() const {extra_matcher1068,39669
  const Action<F>& repeated_action() const { return repeated_action_; }repeated_action1073,39831
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1099,40722
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1107,41039
          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1123,41685
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1167,43542
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1206,45372
  FunctionMocker<F>* const owner_;owner_1232,46111
  ArgumentMatcherTuple matchers_;matchers_1233,46146
  Matcher<const ArgumentTuple&> extra_matcher_;extra_matcher_1234,46180
  Action<F> repeated_action_;repeated_action_1235,46228
class MockSpec {MockSpec1256,47082
  typedef typename internal::Function<F>::ArgumentTuple ArgumentTuple;ArgumentTuple1258,47108
      ArgumentMatcherTuple;ArgumentMatcherTuple1260,47242
  MockSpec(internal::FunctionMocker<F>* function_mocker,MockSpec1264,47378
  internal::OnCallSpec<F>& InternalDefaultActionSetAt(InternalDefaultActionSetAt1270,47651
  internal::TypedExpectation<F>& InternalExpectedAt(InternalExpectedAt1279,48078
  MockSpec<F>& operator()(const internal::WithoutMatchers&, void* const) {operator ()1291,48674
  internal::FunctionMocker<F>* const function_mocker_;function_mocker_1300,48901
  ArgumentMatcherTuple matchers_;matchers_1302,49006
class ReferenceOrValueWrapper {ReferenceOrValueWrapper1315,49606
  explicit ReferenceOrValueWrapper(T value)ReferenceOrValueWrapper1318,49705
  T Unwrap() { return std::move(value_); }Unwrap1325,49965
  const T& Peek() const {Peek1331,50273
  T value_;value_1336,50333
class ReferenceOrValueWrapper<T&> {ReferenceOrValueWrapper1342,50460
  typedef T& reference;reference1346,50628
  explicit ReferenceOrValueWrapper(reference ref)ReferenceOrValueWrapper1347,50652
  T& Unwrap() { return *value_ptr_; }Unwrap1349,50730
  const T& Peek() const { return *value_ptr_; }Peek1350,50768
  T* value_ptr_;value_ptr_1353,50827
class UntypedActionResultHolderBase {UntypedActionResultHolderBase1365,51344
  virtual ~UntypedActionResultHolderBase() {}~UntypedActionResultHolderBase1367,51391
class ActionResultHolder : public UntypedActionResultHolderBase {ActionResultHolder1375,51641
  T Unwrap() {Unwrap1378,51780
  static ActionResultHolder* PerformDefaultAction(PerformDefaultAction1392,52249
  static ActionResultHolder* PerformAction(PerformAction1403,52682
  typedef ReferenceOrValueWrapper<T> Wrapper;Wrapper1410,52904
  explicit ActionResultHolder(Wrapper result)ActionResultHolder1412,52951
  Wrapper result_;result_1416,53039
class ActionResultHolder<void> : public UntypedActionResultHolderBase {ActionResultHolder1423,53162
  void Unwrap() { }Unwrap1425,53243
  static ActionResultHolder* PerformDefaultAction(PerformDefaultAction1432,53475
  static ActionResultHolder* PerformAction(PerformAction1443,53894
  ActionResultHolder() {}ActionResultHolder1450,54102
class FunctionMocker<R(Args...)> final : public UntypedFunctionMockerBase {final1458,54272
  FunctionMocker() {}FunctionMocker1466,54509
  ~FunctionMocker() override GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1486,55298
  const OnCallSpec<F>* FindOnCallSpec(FindOnCallSpec1496,55660
  Result PerformDefaultAction(ArgumentTuple&& args,PerformDefaultAction1516,56423
      GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1566,58616
  Result Invoke(Args... args) GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1594,59800
  MockSpec<F> With(Matcher<Args>... m) {With1601,60086
  typedef ActionResultHolder<Result> ResultHolder;ResultHolder1609,60267
          GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1615,60493
      GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1626,61047
  void DescribeDefaultActionTo(const ArgumentTuple& args,DescribeDefaultActionTo1652,62035
      GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1670,62816
      GTEST_LOCK_EXCLUDED_(g_gmock_mutex) {GTEST_LOCK_EXCLUDED_1698,64187
          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1731,65513
          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1752,66273
          GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex) {GTEST_EXCLUSIVE_LOCK_REQUIRED_1764,66705
namespace internal {internal1792,67752
class MockFunction<R(Args...)> {MockFunction1798,67857
  std::function<R(Args...)> AsStdFunction() {AsStdFunction1803,68003
  R Call(Args... args) {Call1810,68222
  MockSpec<R(Args...)> gmock_Call(Matcher<Args>... m) {gmock_Call1815,68347
  MockSpec<R(Args...)> gmock_Call(const WithoutMatchers&, R (*)(Args...)) {gmock_Call1820,68479
  FunctionMocker<R(Args...)> mock_;mock_1829,68694
struct SignatureOf<R(Args...)> {SignatureOf1848,69234
struct SignatureOf<C<F>,SignatureOf1853,69349
class MockFunction : public internal::MockFunction<internal::SignatureOfT<F>> {MockFunction1923,71767
inline const T& Const(const T& x) { return x; }Const1953,72813
inline Expectation::Expectation(internal::ExpectationBase& exp)  // NOLINTExpectation1956,72931
#define GMOCK_ON_CALL_IMPL_(GMOCK_ON_CALL_IMPL_2025,75851
#define ON_CALL(ON_CALL2030,76127
#define EXPECT_CALL(EXPECT_CALL2033,76218

test/googletest/googlemock/include/gmock/gmock-nice-strict.h,2013
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_NICE_STRICT_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_NICE_STRICT_H_62,3149
namespace testing {testing69,3307
namespace internal {internal77,3460
constexpr bool HasStrictnessModifier() {HasStrictnessModifier87,3799
#define GTEST_INTERNAL_EMPTY_BASE_CLASS GTEST_INTERNAL_EMPTY_BASE_CLASS102,4583
#define GTEST_INTERNAL_EMPTY_BASE_CLASSGTEST_INTERNAL_EMPTY_BASE_CLASS104,4653
class NiceMockImpl {NiceMockImpl108,4726
  NiceMockImpl() { ::testing::Mock::AllowUninterestingCalls(this); }NiceMockImpl110,4756
  ~NiceMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }~NiceMockImpl112,4826
class NaggyMockImpl {NaggyMockImpl116,4924
  NaggyMockImpl() { ::testing::Mock::WarnUninterestingCalls(this); }NaggyMockImpl118,4955
  ~NaggyMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }~NaggyMockImpl120,5025
class StrictMockImpl {StrictMockImpl124,5124
  StrictMockImpl() { ::testing::Mock::FailUninterestingCalls(this); }StrictMockImpl126,5156
  ~StrictMockImpl() { ::testing::Mock::UnregisterCallReaction(this); }~StrictMockImpl128,5227
class GTEST_INTERNAL_EMPTY_BASE_CLASS NiceMockNiceMock134,5355
  NiceMock() : MockClass() {NiceMock143,5784
  explicit NiceMock(A&& arg) : MockClass(std::forward<A>(arg)) {NiceMock156,6362
  NiceMock(TArg1&& arg1, TArg2&& arg2, An&&... args)NiceMock162,6618
class GTEST_INTERNAL_EMPTY_BASE_CLASS NaggyMockNaggyMock174,7007
  NaggyMock() : MockClass() {NaggyMock184,7440
  explicit NaggyMock(A&& arg) : MockClass(std::forward<A>(arg)) {NaggyMock197,8019
  NaggyMock(TArg1&& arg1, TArg2&& arg2, An&&... args)NaggyMock203,8276
class GTEST_INTERNAL_EMPTY_BASE_CLASS StrictMockStrictMock215,8667
  StrictMock() : MockClass() {StrictMock225,9069
  explicit StrictMock(A&& arg) : MockClass(std::forward<A>(arg)) {StrictMock238,9649
  StrictMock(TArg1&& arg1, TArg2&& arg2, An&&... args)StrictMock244,9907
#undef GTEST_INTERNAL_EMPTY_BASE_CLASSGTEST_INTERNAL_EMPTY_BASE_CLASS255,10273

test/googletest/googlemock/include/gmock/internal/gmock-internal-utils.h,3651
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_INTERNAL_UTILS_H_38,1850
namespace testing {testing47,2072
namespace internal {internal52,2129
inline const typename Pointer::element_type* GetRawPointer(const Pointer& p) {GetRawPointer76,3101
inline Element* GetRawPointer(Element* p) { return p; }GetRawPointer81,3284
# define GMOCK_WCHAR_T_IS_NATIVE_ GMOCK_WCHAR_T_IS_NATIVE_90,3659
enum TypeKind {TypeKind98,4026
  kBool, kInteger, kFloatingPoint, kOtherkBool99,4042
  kBool, kInteger, kFloatingPoint, kOtherkInteger99,4042
  kBool, kInteger, kFloatingPoint, kOtherkFloatingPoint99,4042
  kBool, kInteger, kFloatingPoint, kOtherkOther99,4042
template <typename T> struct KindOf {KindOf103,4131
  enum { value = kOther };  // The default kind.value104,4169
#define GMOCK_DECLARE_KIND_(GMOCK_DECLARE_KIND_108,4280
#undef GMOCK_DECLARE_KIND_GMOCK_DECLARE_KIND_135,5241
#define GMOCK_KIND_OF_(GMOCK_KIND_OF_138,5305
class FailureReporterInterface {FailureReporterInterface191,7803
  enum FailureType {FailureType194,7901
    kNonfatal, kFatalkNonfatal195,7922
    kNonfatal, kFatalkFatal195,7922
  virtual ~FailureReporterInterface() {}~FailureReporterInterface198,7950
inline void Assert(bool condition, const char* file, int line,Assert213,8600
inline void Assert(bool condition, const char* file, int line) {Assert220,8866
inline void Expect(bool condition, const char* file, int line,Expect226,9080
inline void Expect(bool condition, const char* file, int line) {Expect233,9349
enum LogSeverity {LogSeverity238,9501
  kInfo = 0,kInfo239,9520
  kWarning = 1kWarning240,9533
const char kInfoVerbosity[] = "info";kInfoVerbosity246,9653
const char kWarningVerbosity[] = "warning";kWarningVerbosity248,9721
const char kErrorVerbosity[] = "error";kErrorVerbosity250,9789
class WithoutMatchers {WithoutMatchers272,10784
  WithoutMatchers() {}WithoutMatchers274,10818
inline T Invalid() {Invalid294,11523
class StlContainerView {StlContainerView323,12717
  typedef RawContainer type;type325,12751
  typedef const type& const_reference;const_reference326,12780
  static const_reference ConstReference(const RawContainer& container) {ConstReference328,12820
  static type Copy(const RawContainer& container) { return container; }Copy333,13032
class StlContainerView<Element[N]> {StlContainerView338,13219
  typedef typename std::remove_const<Element>::type RawElement;RawElement340,13265
  typedef internal::NativeArray<RawElement> type;type341,13329
  typedef const type const_reference;const_reference347,13719
class StlContainerView< ::std::tuple<ElementPointer, Size> > {StlContainerView362,14267
      RawElement;RawElement366,14449
  typedef internal::NativeArray<RawElement> type;type367,14467
  typedef const type const_reference;const_reference368,14517
  static const_reference ConstReference(ConstReference370,14556
  static type Copy(const ::std::tuple<ElementPointer, Size>& array) {Copy375,14760
struct RemoveConstFromKey {RemoveConstFromKey388,15306
  typedef T type;type389,15334
struct RemoveConstFromKey<std::pair<const K, V> > {RemoveConstFromKey394,15463
  typedef std::pair<K, V> type;type395,15515
    std::forward<F>(f)(std::get<Idx>(std::forward<Tuple>(args))...)) {forward404,15841
              MakeIndexSequence<std::tuple_size<MakeIndexSequence412,16180
struct Function<R(Args...)> {Function436,17313
  static constexpr size_t ArgumentCount = sizeof...(Args);ArgumentCount438,17363
constexpr size_t Function<R(Args...)>::ArgumentCount;ArgumentCount448,17730

test/googletest/googlemock/include/gmock/internal/gmock-port.h,594
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PORT_H_39,1986
#define GMOCK_FLAG(GMOCK_FLAG65,2941
#define GMOCK_DECLARE_bool_(GMOCK_DECLARE_bool_70,3052
#define GMOCK_DECLARE_int32_(GMOCK_DECLARE_int32_74,3250
#define GMOCK_DECLARE_string_(GMOCK_DECLARE_string_78,3457
#define GMOCK_DEFINE_bool_(GMOCK_DEFINE_bool_84,3713
#define GMOCK_DEFINE_int32_(GMOCK_DEFINE_int32_88,3938
#define GMOCK_DEFINE_string_(GMOCK_DEFINE_string_92,4172
#define GMOCK_FLAG_GET(GMOCK_FLAG_GET99,4495
#define GMOCK_FLAG_SET(GMOCK_FLAG_SET100,4552

test/googletest/googlemock/include/gmock/internal/gmock-pp.h,6411
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PP_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_PP_H_2,54
#define GMOCK_PP_CAT(GMOCK_PP_CAT5,183
#define GMOCK_PP_STRINGIZE(GMOCK_PP_STRINGIZE8,289
#define GMOCK_PP_EMPTY(GMOCK_PP_EMPTY11,419
#define GMOCK_PP_COMMA(GMOCK_PP_COMMA14,506
#define GMOCK_PP_IDENTITY(GMOCK_PP_IDENTITY17,567
#define GMOCK_PP_NARG(GMOCK_PP_NARG29,871
#define GMOCK_PP_HAS_COMMA(GMOCK_PP_HAS_COMMA35,1143
#define GMOCK_PP_HEAD(GMOCK_PP_HEAD40,1312
#define GMOCK_PP_TAIL(GMOCK_PP_TAIL44,1495
#define GMOCK_PP_VARIADIC_CALL(GMOCK_PP_VARIADIC_CALL47,1614
#define GMOCK_PP_IS_EMPTY(GMOCK_PP_IS_EMPTY79,2853
#define GMOCK_PP_IF(GMOCK_PP_IF86,3310
#define GMOCK_PP_GENERIC_IF(GMOCK_PP_GENERIC_IF94,3605
#define GMOCK_PP_NARG0(GMOCK_PP_NARG0110,4126
#define GMOCK_PP_IS_BEGIN_PARENS(GMOCK_PP_IS_BEGIN_PARENS115,4329
#define GMOCK_PP_IS_ENCLOSED_PARENS(GMOCK_PP_IS_ENCLOSED_PARENS120,4628
#define GMOCK_PP_REMOVE_PARENS(GMOCK_PP_REMOVE_PARENS125,4874
#define GMOCK_PP_FOR_EACH(GMOCK_PP_FOR_EACH131,5202
#define GMOCK_PP_REPEAT(GMOCK_PP_REPEAT139,5580
#define GMOCK_PP_INC(GMOCK_PP_INC144,5817
#define GMOCK_PP_COMMA_IF(GMOCK_PP_COMMA_IF147,5949
#define GMOCK_PP_INTENRAL_EMPTY_TUPLE GMOCK_PP_INTENRAL_EMPTY_TUPLE151,6138
#define GMOCK_PP_INTERNAL_CAT(GMOCK_PP_INTERNAL_CAT152,6209
#define GMOCK_PP_INTERNAL_STRINGIZE(GMOCK_PP_INTERNAL_STRINGIZE153,6254
#define GMOCK_PP_INTERNAL_CAT_5(GMOCK_PP_INTERNAL_CAT_5154,6308
#define GMOCK_PP_INTERNAL_IS_EMPTY(GMOCK_PP_INTERNAL_IS_EMPTY155,6379
#define GMOCK_PP_INTERNAL_IS_EMPTY_CASE_0001 GMOCK_PP_INTERNAL_IS_EMPTY_CASE_0001158,6603
#define GMOCK_PP_INTERNAL_IF_1(GMOCK_PP_INTERNAL_IF_1159,6650
#define GMOCK_PP_INTERNAL_IF_0(GMOCK_PP_INTERNAL_IF_0160,6701
#define GMOCK_PP_INTERNAL_INTERNAL_16TH(GMOCK_PP_INTERNAL_INTERNAL_16TH167,7088
#define GMOCK_PP_INTERNAL_16TH(GMOCK_PP_INTERNAL_16TH171,7328
#define GMOCK_PP_INTERNAL_INTERNAL_HEAD(GMOCK_PP_INTERNAL_INTERNAL_HEAD173,7427
#define GMOCK_PP_INTERNAL_HEAD(GMOCK_PP_INTERNAL_HEAD174,7479
#define GMOCK_PP_INTERNAL_INTERNAL_TAIL(GMOCK_PP_INTERNAL_INTERNAL_TAIL176,7578
#define GMOCK_PP_INTERNAL_TAIL(GMOCK_PP_INTERNAL_TAIL177,7639
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C(GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C180,7739
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_1 GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_1181,7792
#define GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_R_GMOCK_PP_INTERNAL_IBP_IS_VARIADIC_C182,7841
#define GMOCK_PP_INTERNAL_REMOVE_PARENS(GMOCK_PP_INTERNAL_REMOVE_PARENS184,7928
#define GMOCK_PP_INTERNAL_INC_0 GMOCK_PP_INTERNAL_INC_0185,7985
#define GMOCK_PP_INTERNAL_INC_1 GMOCK_PP_INTERNAL_INC_1186,8019
#define GMOCK_PP_INTERNAL_INC_2 GMOCK_PP_INTERNAL_INC_2187,8053
#define GMOCK_PP_INTERNAL_INC_3 GMOCK_PP_INTERNAL_INC_3188,8087
#define GMOCK_PP_INTERNAL_INC_4 GMOCK_PP_INTERNAL_INC_4189,8121
#define GMOCK_PP_INTERNAL_INC_5 GMOCK_PP_INTERNAL_INC_5190,8155
#define GMOCK_PP_INTERNAL_INC_6 GMOCK_PP_INTERNAL_INC_6191,8189
#define GMOCK_PP_INTERNAL_INC_7 GMOCK_PP_INTERNAL_INC_7192,8223
#define GMOCK_PP_INTERNAL_INC_8 GMOCK_PP_INTERNAL_INC_8193,8257
#define GMOCK_PP_INTERNAL_INC_9 GMOCK_PP_INTERNAL_INC_9194,8291
#define GMOCK_PP_INTERNAL_INC_10 GMOCK_PP_INTERNAL_INC_10195,8326
#define GMOCK_PP_INTERNAL_INC_11 GMOCK_PP_INTERNAL_INC_11196,8362
#define GMOCK_PP_INTERNAL_INC_12 GMOCK_PP_INTERNAL_INC_12197,8398
#define GMOCK_PP_INTERNAL_INC_13 GMOCK_PP_INTERNAL_INC_13198,8434
#define GMOCK_PP_INTERNAL_INC_14 GMOCK_PP_INTERNAL_INC_14199,8470
#define GMOCK_PP_INTERNAL_INC_15 GMOCK_PP_INTERNAL_INC_15200,8506
#define GMOCK_PP_INTERNAL_COMMA_IF_0GMOCK_PP_INTERNAL_COMMA_IF_0201,8542
#define GMOCK_PP_INTERNAL_COMMA_IF_1 GMOCK_PP_INTERNAL_COMMA_IF_1202,8579
#define GMOCK_PP_INTERNAL_COMMA_IF_2 GMOCK_PP_INTERNAL_COMMA_IF_2203,8618
#define GMOCK_PP_INTERNAL_COMMA_IF_3 GMOCK_PP_INTERNAL_COMMA_IF_3204,8657
#define GMOCK_PP_INTERNAL_COMMA_IF_4 GMOCK_PP_INTERNAL_COMMA_IF_4205,8696
#define GMOCK_PP_INTERNAL_COMMA_IF_5 GMOCK_PP_INTERNAL_COMMA_IF_5206,8735
#define GMOCK_PP_INTERNAL_COMMA_IF_6 GMOCK_PP_INTERNAL_COMMA_IF_6207,8774
#define GMOCK_PP_INTERNAL_COMMA_IF_7 GMOCK_PP_INTERNAL_COMMA_IF_7208,8813
#define GMOCK_PP_INTERNAL_COMMA_IF_8 GMOCK_PP_INTERNAL_COMMA_IF_8209,8852
#define GMOCK_PP_INTERNAL_COMMA_IF_9 GMOCK_PP_INTERNAL_COMMA_IF_9210,8891
#define GMOCK_PP_INTERNAL_COMMA_IF_10 GMOCK_PP_INTERNAL_COMMA_IF_10211,8930
#define GMOCK_PP_INTERNAL_COMMA_IF_11 GMOCK_PP_INTERNAL_COMMA_IF_11212,8970
#define GMOCK_PP_INTERNAL_COMMA_IF_12 GMOCK_PP_INTERNAL_COMMA_IF_12213,9010
#define GMOCK_PP_INTERNAL_COMMA_IF_13 GMOCK_PP_INTERNAL_COMMA_IF_13214,9050
#define GMOCK_PP_INTERNAL_COMMA_IF_14 GMOCK_PP_INTERNAL_COMMA_IF_14215,9090
#define GMOCK_PP_INTERNAL_COMMA_IF_15 GMOCK_PP_INTERNAL_COMMA_IF_15216,9130
#define GMOCK_PP_INTERNAL_CALL_MACRO(GMOCK_PP_INTERNAL_CALL_MACRO217,9170
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_0(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_0219,9268
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_1(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_1220,9337
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_2(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_2222,9480
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_3(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_3226,9762
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_4(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_4230,10044
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_5(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_5234,10326
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_6(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_6238,10608
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_7(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_7242,10890
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_8(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_8246,11172
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_9(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_9250,11454
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_10(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_10254,11736
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_11(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_11258,12018
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_12(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_12262,12301
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_13(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_13266,12584
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_14(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_14270,12867
#define GMOCK_PP_INTERNAL_FOR_EACH_IMPL_15(GMOCK_PP_INTERNAL_FOR_EACH_IMPL_15274,13150

test/googletest/googlemock/include/gmock/internal/custom/gmock-generated-actions.h,149
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_GENERATED_ACTIONS_H_2,76

test/googletest/googlemock/include/gmock/internal/custom/gmock-matchers.h,134
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_MATCHERS_H_33,1701

test/googletest/googlemock/include/gmock/internal/custom/gmock-port.h,126
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_CUSTOM_GMOCK_PORT_H_35,1743

test/googletest/googlemock/include/gmock/gmock-function-mocker.h,10581
#define GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_FUNCTION_MOCKER_H_ GOOGLEMOCK_INCLUDE_GMOCK_INTERNAL_GMOCK_FUNCTION_MOCKER_H_35,1735
namespace testing {testing44,2031
namespace internal {internal45,2051
struct ThisRefAdjuster {ThisRefAdjuster50,2145
  static AdjustT<MockType> Adjust(const MockType& mock) {Adjust60,2609
constexpr bool PrefixOf(const char* a, const char* b) {PrefixOf65,2747
constexpr bool StartsWith(const char (&prefix)[N], const char (&str)[M]) {StartsWith70,2898
constexpr bool EndsWith(const char (&suffix)[N], const char (&str)[M]) {EndsWith75,3052
constexpr bool Equals(const char (&a)[N], const char (&b)[M]) {Equals80,3212
constexpr bool ValidateSpec(const char (&spec)[N]) {ValidateSpec85,3341
#define MOCK_METHOD(MOCK_METHOD108,4282
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_1(GMOCK_INTERNAL_MOCK_METHOD_ARG_1111,4381
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_2(GMOCK_INTERNAL_MOCK_METHOD_ARG_2114,4472
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_3(GMOCK_INTERNAL_MOCK_METHOD_ARG_3117,4563
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_4(GMOCK_INTERNAL_MOCK_METHOD_ARG_4120,4698
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_5(GMOCK_INTERNAL_MOCK_METHOD_ARG_5134,5670
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_6(GMOCK_INTERNAL_MOCK_METHOD_ARG_6137,5761
#define GMOCK_INTERNAL_MOCK_METHOD_ARG_7(GMOCK_INTERNAL_MOCK_METHOD_ARG_7140,5852
#define GMOCK_INTERNAL_WRONG_ARITY(GMOCK_INTERNAL_WRONG_ARITY143,5943
#define GMOCK_INTERNAL_ASSERT_PARENTHESIS(GMOCK_INTERNAL_ASSERT_PARENTHESIS151,6468
#define GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE(GMOCK_INTERNAL_ASSERT_VALID_SIGNATURE156,6697
#define GMOCK_INTERNAL_ASSERT_VALID_SPEC(GMOCK_INTERNAL_ASSERT_VALID_SPEC167,7432
#define GMOCK_INTERNAL_MOCK_METHOD_IMPL(GMOCK_INTERNAL_MOCK_METHOD_IMPL170,7555
#define GMOCK_INTERNAL_EXPAND(GMOCK_INTERNAL_EXPAND203,10116
#define GMOCK_INTERNAL_HAS_CONST(GMOCK_INTERNAL_HAS_CONST206,10184
#define GMOCK_INTERNAL_HAS_OVERRIDE(GMOCK_INTERNAL_HAS_OVERRIDE209,10308
#define GMOCK_INTERNAL_HAS_FINAL(GMOCK_INTERNAL_HAS_FINAL213,10469
#define GMOCK_INTERNAL_GET_NOEXCEPT_SPEC(GMOCK_INTERNAL_GET_NOEXCEPT_SPEC216,10593
#define GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT(GMOCK_INTERNAL_NOEXCEPT_SPEC_IF_NOEXCEPT219,10718
#define GMOCK_INTERNAL_GET_CALLTYPE_SPEC(GMOCK_INTERNAL_GET_CALLTYPE_SPEC224,10956
#define GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE(GMOCK_INTERNAL_CALLTYPE_SPEC_IF_CALLTYPE227,11081
#define GMOCK_INTERNAL_GET_REF_SPEC(GMOCK_INTERNAL_GET_REF_SPEC232,11357
#define GMOCK_INTERNAL_REF_SPEC_IF_REF(GMOCK_INTERNAL_REF_SPEC_IF_REF235,11467
#define GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT(GMOCK_INTERNAL_ASSERT_VALID_SPEC_ELEMENT240,11724
#define GMOCK_INTERNAL_DETECT_CONST(GMOCK_INTERNAL_DETECT_CONST260,13010
#define GMOCK_INTERNAL_DETECT_CONST_I_const GMOCK_INTERNAL_DETECT_CONST_I_const263,13117
#define GMOCK_INTERNAL_DETECT_OVERRIDE(GMOCK_INTERNAL_DETECT_OVERRIDE265,13164
#define GMOCK_INTERNAL_DETECT_OVERRIDE_I_override GMOCK_INTERNAL_DETECT_OVERRIDE_I_override268,13277
#define GMOCK_INTERNAL_DETECT_FINAL(GMOCK_INTERNAL_DETECT_FINAL270,13330
#define GMOCK_INTERNAL_DETECT_FINAL_I_final GMOCK_INTERNAL_DETECT_FINAL_I_final273,13437
#define GMOCK_INTERNAL_DETECT_NOEXCEPT(GMOCK_INTERNAL_DETECT_NOEXCEPT275,13484
#define GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept GMOCK_INTERNAL_DETECT_NOEXCEPT_I_noexcept278,13597
#define GMOCK_INTERNAL_DETECT_REF(GMOCK_INTERNAL_DETECT_REF280,13650
#define GMOCK_INTERNAL_DETECT_REF_I_ref GMOCK_INTERNAL_DETECT_REF_I_ref283,13753
#define GMOCK_INTERNAL_UNPACK_ref(GMOCK_INTERNAL_UNPACK_ref285,13796
#define GMOCK_INTERNAL_DETECT_CALLTYPE(GMOCK_INTERNAL_DETECT_CALLTYPE287,13836
#define GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype GMOCK_INTERNAL_DETECT_CALLTYPE_I_Calltype290,13949
#define GMOCK_INTERNAL_UNPACK_Calltype(GMOCK_INTERNAL_UNPACK_Calltype292,14002
#define GMOCK_INTERNAL_SIGNATURE(GMOCK_INTERNAL_SIGNATURE307,14671
#define GMOCK_INTERNAL_GET_TYPE(GMOCK_INTERNAL_GET_TYPE313,15052
#define GMOCK_INTERNAL_PARAMETER(GMOCK_INTERNAL_PARAMETER319,15355
#define GMOCK_INTERNAL_FORWARD_ARG(GMOCK_INTERNAL_FORWARD_ARG324,15565
#define GMOCK_INTERNAL_MATCHER_PARAMETER(GMOCK_INTERNAL_MATCHER_PARAMETER329,15794
#define GMOCK_INTERNAL_MATCHER_ARGUMENT(GMOCK_INTERNAL_MATCHER_ARGUMENT334,16016
#define GMOCK_INTERNAL_A_MATCHER_ARGUMENT(GMOCK_INTERNAL_A_MATCHER_ARGUMENT338,16139
#define GMOCK_INTERNAL_ARG_O(GMOCK_INTERNAL_ARG_O342,16345
#define GMOCK_INTERNAL_MATCHER_O(GMOCK_INTERNAL_MATCHER_O345,16464
#define MOCK_METHOD0(MOCK_METHOD0349,16648
#define MOCK_METHOD1(MOCK_METHOD1350,16728
#define MOCK_METHOD2(MOCK_METHOD2351,16808
#define MOCK_METHOD3(MOCK_METHOD3352,16888
#define MOCK_METHOD4(MOCK_METHOD4353,16968
#define MOCK_METHOD5(MOCK_METHOD5354,17048
#define MOCK_METHOD6(MOCK_METHOD6355,17128
#define MOCK_METHOD7(MOCK_METHOD7356,17208
#define MOCK_METHOD8(MOCK_METHOD8357,17288
#define MOCK_METHOD9(MOCK_METHOD9358,17368
#define MOCK_METHOD10(MOCK_METHOD10359,17448
#define MOCK_CONST_METHOD0(MOCK_CONST_METHOD0362,17535
#define MOCK_CONST_METHOD1(MOCK_CONST_METHOD1364,17630
#define MOCK_CONST_METHOD2(MOCK_CONST_METHOD2366,17725
#define MOCK_CONST_METHOD3(MOCK_CONST_METHOD3368,17820
#define MOCK_CONST_METHOD4(MOCK_CONST_METHOD4370,17915
#define MOCK_CONST_METHOD5(MOCK_CONST_METHOD5372,18010
#define MOCK_CONST_METHOD6(MOCK_CONST_METHOD6374,18105
#define MOCK_CONST_METHOD7(MOCK_CONST_METHOD7376,18200
#define MOCK_CONST_METHOD8(MOCK_CONST_METHOD8378,18295
#define MOCK_CONST_METHOD9(MOCK_CONST_METHOD9380,18390
#define MOCK_CONST_METHOD10(MOCK_CONST_METHOD10382,18485
#define MOCK_METHOD0_T(MOCK_METHOD0_T385,18583
#define MOCK_METHOD1_T(MOCK_METHOD1_T386,18643
#define MOCK_METHOD2_T(MOCK_METHOD2_T387,18703
#define MOCK_METHOD3_T(MOCK_METHOD3_T388,18763
#define MOCK_METHOD4_T(MOCK_METHOD4_T389,18823
#define MOCK_METHOD5_T(MOCK_METHOD5_T390,18883
#define MOCK_METHOD6_T(MOCK_METHOD6_T391,18943
#define MOCK_METHOD7_T(MOCK_METHOD7_T392,19003
#define MOCK_METHOD8_T(MOCK_METHOD8_T393,19063
#define MOCK_METHOD9_T(MOCK_METHOD9_T394,19123
#define MOCK_METHOD10_T(MOCK_METHOD10_T395,19183
#define MOCK_CONST_METHOD0_T(MOCK_CONST_METHOD0_T397,19246
#define MOCK_CONST_METHOD1_T(MOCK_CONST_METHOD1_T398,19318
#define MOCK_CONST_METHOD2_T(MOCK_CONST_METHOD2_T399,19390
#define MOCK_CONST_METHOD3_T(MOCK_CONST_METHOD3_T400,19462
#define MOCK_CONST_METHOD4_T(MOCK_CONST_METHOD4_T401,19534
#define MOCK_CONST_METHOD5_T(MOCK_CONST_METHOD5_T402,19606
#define MOCK_CONST_METHOD6_T(MOCK_CONST_METHOD6_T403,19678
#define MOCK_CONST_METHOD7_T(MOCK_CONST_METHOD7_T404,19750
#define MOCK_CONST_METHOD8_T(MOCK_CONST_METHOD8_T405,19822
#define MOCK_CONST_METHOD9_T(MOCK_CONST_METHOD9_T406,19894
#define MOCK_CONST_METHOD10_T(MOCK_CONST_METHOD10_T407,19966
#define MOCK_METHOD0_WITH_CALLTYPE(MOCK_METHOD0_WITH_CALLTYPE409,20041
#define MOCK_METHOD1_WITH_CALLTYPE(MOCK_METHOD1_WITH_CALLTYPE411,20145
#define MOCK_METHOD2_WITH_CALLTYPE(MOCK_METHOD2_WITH_CALLTYPE413,20249
#define MOCK_METHOD3_WITH_CALLTYPE(MOCK_METHOD3_WITH_CALLTYPE415,20353
#define MOCK_METHOD4_WITH_CALLTYPE(MOCK_METHOD4_WITH_CALLTYPE417,20457
#define MOCK_METHOD5_WITH_CALLTYPE(MOCK_METHOD5_WITH_CALLTYPE419,20561
#define MOCK_METHOD6_WITH_CALLTYPE(MOCK_METHOD6_WITH_CALLTYPE421,20665
#define MOCK_METHOD7_WITH_CALLTYPE(MOCK_METHOD7_WITH_CALLTYPE423,20769
#define MOCK_METHOD8_WITH_CALLTYPE(MOCK_METHOD8_WITH_CALLTYPE425,20873
#define MOCK_METHOD9_WITH_CALLTYPE(MOCK_METHOD9_WITH_CALLTYPE427,20977
#define MOCK_METHOD10_WITH_CALLTYPE(MOCK_METHOD10_WITH_CALLTYPE429,21081
#define MOCK_CONST_METHOD0_WITH_CALLTYPE(MOCK_CONST_METHOD0_WITH_CALLTYPE432,21188
#define MOCK_CONST_METHOD1_WITH_CALLTYPE(MOCK_CONST_METHOD1_WITH_CALLTYPE434,21303
#define MOCK_CONST_METHOD2_WITH_CALLTYPE(MOCK_CONST_METHOD2_WITH_CALLTYPE436,21418
#define MOCK_CONST_METHOD3_WITH_CALLTYPE(MOCK_CONST_METHOD3_WITH_CALLTYPE438,21533
#define MOCK_CONST_METHOD4_WITH_CALLTYPE(MOCK_CONST_METHOD4_WITH_CALLTYPE440,21648
#define MOCK_CONST_METHOD5_WITH_CALLTYPE(MOCK_CONST_METHOD5_WITH_CALLTYPE442,21763
#define MOCK_CONST_METHOD6_WITH_CALLTYPE(MOCK_CONST_METHOD6_WITH_CALLTYPE444,21878
#define MOCK_CONST_METHOD7_WITH_CALLTYPE(MOCK_CONST_METHOD7_WITH_CALLTYPE446,21993
#define MOCK_CONST_METHOD8_WITH_CALLTYPE(MOCK_CONST_METHOD8_WITH_CALLTYPE448,22108
#define MOCK_CONST_METHOD9_WITH_CALLTYPE(MOCK_CONST_METHOD9_WITH_CALLTYPE450,22223
#define MOCK_CONST_METHOD10_WITH_CALLTYPE(MOCK_CONST_METHOD10_WITH_CALLTYPE452,22338
#define MOCK_METHOD0_T_WITH_CALLTYPE(MOCK_METHOD0_T_WITH_CALLTYPE455,22456
#define MOCK_METHOD1_T_WITH_CALLTYPE(MOCK_METHOD1_T_WITH_CALLTYPE457,22556
#define MOCK_METHOD2_T_WITH_CALLTYPE(MOCK_METHOD2_T_WITH_CALLTYPE459,22656
#define MOCK_METHOD3_T_WITH_CALLTYPE(MOCK_METHOD3_T_WITH_CALLTYPE461,22756
#define MOCK_METHOD4_T_WITH_CALLTYPE(MOCK_METHOD4_T_WITH_CALLTYPE463,22856
#define MOCK_METHOD5_T_WITH_CALLTYPE(MOCK_METHOD5_T_WITH_CALLTYPE465,22956
#define MOCK_METHOD6_T_WITH_CALLTYPE(MOCK_METHOD6_T_WITH_CALLTYPE467,23056
#define MOCK_METHOD7_T_WITH_CALLTYPE(MOCK_METHOD7_T_WITH_CALLTYPE469,23156
#define MOCK_METHOD8_T_WITH_CALLTYPE(MOCK_METHOD8_T_WITH_CALLTYPE471,23256
#define MOCK_METHOD9_T_WITH_CALLTYPE(MOCK_METHOD9_T_WITH_CALLTYPE473,23356
#define MOCK_METHOD10_T_WITH_CALLTYPE(MOCK_METHOD10_T_WITH_CALLTYPE475,23456
#define MOCK_CONST_METHOD0_T_WITH_CALLTYPE(MOCK_CONST_METHOD0_T_WITH_CALLTYPE478,23559
#define MOCK_CONST_METHOD1_T_WITH_CALLTYPE(MOCK_CONST_METHOD1_T_WITH_CALLTYPE480,23671
#define MOCK_CONST_METHOD2_T_WITH_CALLTYPE(MOCK_CONST_METHOD2_T_WITH_CALLTYPE482,23783
#define MOCK_CONST_METHOD3_T_WITH_CALLTYPE(MOCK_CONST_METHOD3_T_WITH_CALLTYPE484,23895
#define MOCK_CONST_METHOD4_T_WITH_CALLTYPE(MOCK_CONST_METHOD4_T_WITH_CALLTYPE486,24007
#define MOCK_CONST_METHOD5_T_WITH_CALLTYPE(MOCK_CONST_METHOD5_T_WITH_CALLTYPE488,24119
#define MOCK_CONST_METHOD6_T_WITH_CALLTYPE(MOCK_CONST_METHOD6_T_WITH_CALLTYPE490,24231
#define MOCK_CONST_METHOD7_T_WITH_CALLTYPE(MOCK_CONST_METHOD7_T_WITH_CALLTYPE492,24343
#define MOCK_CONST_METHOD8_T_WITH_CALLTYPE(MOCK_CONST_METHOD8_T_WITH_CALLTYPE494,24455
#define MOCK_CONST_METHOD9_T_WITH_CALLTYPE(MOCK_CONST_METHOD9_T_WITH_CALLTYPE496,24567
#define MOCK_CONST_METHOD10_T_WITH_CALLTYPE(MOCK_CONST_METHOD10_T_WITH_CALLTYPE498,24679
#define GMOCK_INTERNAL_MOCK_METHODN(GMOCK_INTERNAL_MOCK_METHODN501,24794
#define GMOCK_MOCKER_(GMOCK_MOCKER_508,25229

test/googletest/googlemock/include/gmock/gmock.h,311
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_H_36,1718
GMOCK_DECLARE_bool_(catch_leaked_mocks);catch_leaked_mocks67,2634
GMOCK_DECLARE_string_(verbose);verbose68,2675
GMOCK_DECLARE_int32_(default_mock_behavior);default_mock_behavior69,2707
namespace testing {testing71,2753

test/googletest/googlemock/include/gmock/gmock-more-matchers.h,361
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_MATCHERS_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_MORE_MATCHERS_H_39,1856
namespace testing {testing43,1948
MATCHER(IsEmpty, negation ? "isn't empty" : "is empty") {MATCHER59,2419
MATCHER(IsTrue, negation ? "is false" : "is true") {MATCHER71,2809
MATCHER(IsFalse, negation ? "is true" : "is false") {MATCHER79,3116

test/googletest/googlemock/include/gmock/gmock-cardinalities.h,1385
#define GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_GOOGLEMOCK_INCLUDE_GMOCK_GMOCK_CARDINALITIES_H_38,1850
namespace testing {testing49,2157
class CardinalityInterface {CardinalityInterface62,2669
  virtual ~CardinalityInterface() {}~CardinalityInterface64,2707
  virtual int ConservativeLowerBound() const { return 0; }ConservativeLowerBound68,2834
  virtual int ConservativeUpperBound() const { return INT_MAX; }ConservativeUpperBound69,2893
class GTEST_API_ Cardinality {Cardinality87,3640
  Cardinality() {}Cardinality91,3780
  explicit Cardinality(const CardinalityInterface* impl) : impl_(impl) {}Cardinality94,3855
  int ConservativeLowerBound() const { return impl_->ConservativeLowerBound(); }ConservativeLowerBound98,4019
  int ConservativeUpperBound() const { return impl_->ConservativeUpperBound(); }ConservativeUpperBound99,4100
  bool IsSatisfiedByCallCount(int call_count) const {IsSatisfiedByCallCount103,4268
  bool IsSaturatedByCallCount(int call_count) const {IsSaturatedByCallCount109,4468
  bool IsOverSaturatedByCallCount(int call_count) const {IsOverSaturatedByCallCount115,4722
  void DescribeTo(::std::ostream* os) const { impl_->DescribeTo(os); }DescribeTo121,4927
  std::shared_ptr<const CardinalityInterface> impl_;impl_128,5192
inline Cardinality MakeCardinality(const CardinalityInterface* c) {MakeCardinality147,5791

test/googletest/docs/_layouts/default.html,0

include/core.hpp,321
#define SIMPP_CORE_HPPSIMPP_CORE_HPP2,23
namespace simpp{simpp12,186
  class Environment : public std::enable_shared_from_this<Environment>{Environment21,350
    double now = 0;now36,927
    std::priority_queue<QueueEvent, std::vector<QueueEvent>, std::greater<QueueEvent>> pq;pq37,947
    int id=0;id38,1038

include/queue_event.hpp,253
#define SIMPP_QUEUEEVENT_HPPSIMPP_QUEUEEVENT_HPP2,29
namespace simpp{simpp6,78
  class QueueEvent{QueueEvent10,114
    double time;time22,521
    int id;id23,538
    int priority;priority24,550
    std::shared_ptr<Event> event;event25,568

include/timeout.hpp,155
#define SIMPP_TIMEOUT_HPPSIMPP_TIMEOUT_HPP2,26
namespace simpp{simpp8,94
  class Timeout : public Event{Timeout11,135
    double delay;delay16,282

include/operator.hpp,323
#define SIMPP_OPERATOR_HPPSIMPP_OPERATOR_HPP2,27
namespace simpp{simpp10,138
  class Ops{Ops12,156
    static std::shared_ptr<AllOf> all(std::shared_ptr<Event> left, std::shared_ptr<Event> right){all14,179
    static std::shared_ptr<AnyOf> any(std::shared_ptr<Event> left, std::shared_ptr<Event> right){any20,420

include/callback.hpp,340
#define SIMPP_CALLBACK_HPPSIMPP_CALLBACK_HPP2,27
namespace simpp{simpp7,96
  class Callback{Callback10,129
    Callback(std::function<void(std::shared_ptr<Event> &)> func,Callback12,157
    std::function<void(std::shared_ptr<Event> &)> func;func16,329
    std::shared_ptr<Event> parent;parent17,385
    bool check;check18,420

include/process.hpp,247
#define SIMPP_PROCESS_HPPSIMPP_PROCESS_HPP2,26
namespace simpp{simpp10,158
  class Process : public Event{Process15,275
    std::unique_ptr<coro_t::pull_type> generator;    generator20,478
    std::shared_ptr<Event> target; target22,543

include/allof.hpp,165
#define SIMPP_ALLOF_HPPSIMPP_ALLOF_HPP2,24
namespace simpp{simpp7,76
  class AllOf : public Condition {AllOf9,96
    bool evaluate() override;override13,252

include/anyof.hpp,165
#define SIMPP_ANYOF_HPPSIMPP_ANYOF_HPP2,24
namespace simpp{simpp7,76
  class AnyOf : public Condition {AnyOf9,96
    bool evaluate() override;override13,252

include/event.hpp,410
#define SIMPP_EVENT_HPPSIMPP_EVENT_HPP2,24
namespace simpp{simpp11,153
  class Event : public std::enable_shared_from_this<Event> {Event14,174
    std::vector<Callback> callbacks;    callbacks20,352
    bool ok=false;ok32,789
    bool triggered=false;triggered33,808
    bool done=false;done34,834
    int check_locator = -1;check_locator35,855
    std::shared_ptr<Environment> env;env36,883

include/condition.hpp,316
#define SIMPP_CONDITION_HPPSIMPP_CONDITION_HPP2,28
namespace simpp{simpp11,139
  class Condition : public Event {Condition15,181
    void remove_check_callback(const std::shared_ptr<Event>) override;override19,356
    std::vector<std::shared_ptr<Event>> events;events24,558
    int count = 0;count25,606

build/src/Makefile,372
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simppCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/buildCMAKE_BINARY_DIR54,1272

build/test/Makefile,372
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simppCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/buildCMAKE_BINARY_DIR54,1272

build/Makefile,372
SUFFIXES =SUFFIXES21,545
SHELL = /bin/shSHELL39,903
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,944
RM = /usr/bin/cmake -E remove -fRM45,1008
EQUALS = =EQUALS48,1077
CMAKE_SOURCE_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simppCMAKE_SOURCE_DIR51,1146
CMAKE_BINARY_DIR = /home/h.tsuda/projects/NEC2021.01/simpp.lib/simpp/buildCMAKE_BINARY_DIR54,1272

build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp,12474
# define COMPILER_ID COMPILER_ID13,390
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR15,451
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR16,511
# define COMPILER_ID COMPILER_ID19,622
#  define SIMULATE_ID SIMULATE_ID21,674
#  define SIMULATE_ID SIMULATE_ID24,734
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR27,801
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR28,859
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH30,959
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH32,1028
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK36,1187
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR40,1309
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR41,1362
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR44,1446
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR46,1518
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR49,1602
#  define SIMULATE_VERSION_PATCH SIMULATE_VERSION_PATCH52,1697
# define COMPILER_ID COMPILER_ID56,1790
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR57,1823
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR58,1871
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH60,1961
# define COMPILER_ID COMPILER_ID64,2092
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR65,2127
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR66,2199
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2271
# define COMPILER_ID COMPILER_ID70,2372
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR72,2432
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR73,2485
# define COMPILER_ID COMPILER_ID76,2592
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR78,2650
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR79,2705
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH81,2794
# define COMPILER_ID COMPILER_ID85,2885
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR87,2954
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR88,3018
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,3107
# define COMPILER_ID COMPILER_ID94,3198
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR97,3285
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR98,3339
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH99,3399
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR102,3494
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR103,3547
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH104,3606
# define COMPILER_ID COMPILER_ID108,3698
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3750
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3802
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,3858
# define COMPILER_ID COMPILER_ID115,3939
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR117,4002
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR118,4061
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH119,4125
# define COMPILER_ID COMPILER_ID122,4247
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR124,4299
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR125,4351
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH126,4407
# define COMPILER_ID COMPILER_ID129,4511
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR130,4542
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR131,4597
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH132,4652
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK133,4712
# define COMPILER_ID COMPILER_ID137,4852
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR139,4903
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR140,4955
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH141,5011
# define COMPILER_ID COMPILER_ID144,5144
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR146,5202
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR147,5254
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH148,5310
# define COMPILER_ID COMPILER_ID151,5388
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR152,5415
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR153,5461
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH155,5547
# define COMPILER_ID COMPILER_ID159,5636
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR160,5664
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR161,5716
# define COMPILER_ID COMPILER_ID164,5808
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR166,5878
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR167,5947
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH168,6022
# define COMPILER_ID COMPILER_ID171,6175
# define COMPILER_ID COMPILER_ID174,6230
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR177,6322
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR178,6386
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH179,6454
# define COMPILER_ID COMPILER_ID183,6562
# define COMPILER_ID COMPILER_ID186,6644
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR189,6738
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR190,6801
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH191,6868
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR194,6974
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR195,7036
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH196,7102
# define COMPILER_ID COMPILER_ID201,7238
#  define SIMULATE_ID SIMULATE_ID203,7295
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR205,7332
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR206,7385
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH207,7438
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR210,7544
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR211,7597
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK213,7658
# define COMPILER_ID COMPILER_ID216,7779
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR217,7811
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR218,7880
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH219,7953
# define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL220,8026
# define COMPILER_ID COMPILER_ID223,8114
#  define SIMULATE_ID SIMULATE_ID225,8166
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR227,8203
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR228,8256
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH229,8309
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR232,8415
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR233,8468
# define COMPILER_ID COMPILER_ID237,8575
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR239,8625
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR241,8679
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR244,8763
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH247,8858
# define COMPILER_ID COMPILER_ID251,8949
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR253,9001
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR254,9053
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH258,9192
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH261,9297
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK265,9400
# define COMPILER_ID COMPILER_ID269,9572
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR272,9676
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR273,9738
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH274,9807
# define COMPILER_ID COMPILER_ID278,9949
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR280,10021
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR281,10079
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH282,10143
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL283,10198
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR285,10475
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR286,10529
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH287,10603
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL288,10656
# define COMPILER_ID COMPILER_ID296,10934
# define COMPILER_ID COMPILER_ID299,10990
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler306,11288
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate308,11375
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto312,11469
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray316,11564
#define STRINGIFY_HELPER(STRINGIFY_HELPER319,11639
#define STRINGIFY(STRINGIFY320,11670
# define PLATFORM_ID PLATFORM_ID324,11814
# define PLATFORM_ID PLATFORM_ID327,11870
# define PLATFORM_ID PLATFORM_ID330,11928
# define PLATFORM_ID PLATFORM_ID333,11983
# define PLATFORM_ID PLATFORM_ID336,12076
# define PLATFORM_ID PLATFORM_ID339,12157
# define PLATFORM_ID PLATFORM_ID342,12236
# define PLATFORM_ID PLATFORM_ID345,12316
# define PLATFORM_ID PLATFORM_ID348,12385
# define PLATFORM_ID PLATFORM_ID351,12511
# define PLATFORM_ID PLATFORM_ID354,12582
# define PLATFORM_ID PLATFORM_ID357,12637
# define PLATFORM_ID PLATFORM_ID360,12728
# define PLATFORM_ID PLATFORM_ID363,12803
# define PLATFORM_ID PLATFORM_ID366,12895
# define PLATFORM_ID PLATFORM_ID369,12972
# define PLATFORM_ID PLATFORM_ID372,13070
# define PLATFORM_ID PLATFORM_ID375,13127
# define PLATFORM_ID PLATFORM_ID378,13184
# define PLATFORM_ID PLATFORM_ID381,13254
# define PLATFORM_ID PLATFORM_ID384,13326
# define PLATFORM_ID PLATFORM_ID387,13416
# define PLATFORM_ID PLATFORM_ID390,13514
# define PLATFORM_ID PLATFORM_ID393,13607
#  define PLATFORM_ID PLATFORM_ID397,13688
#  define PLATFORM_ID PLATFORM_ID400,13743
#  define PLATFORM_ID PLATFORM_ID403,13796
#  define PLATFORM_ID PLATFORM_ID406,13853
#  define PLATFORM_IDPLATFORM_ID409,13918
#  define PLATFORM_ID PLATFORM_ID414,13999
#  define PLATFORM_ID PLATFORM_ID417,14068
# define PLATFORM_IDPLATFORM_ID421,14140
#  define ARCHITECTURE_ID ARCHITECTURE_ID432,14480
#  define ARCHITECTURE_ID ARCHITECTURE_ID435,14558
#  define ARCHITECTURE_ID ARCHITECTURE_ID438,14615
#  define ARCHITECTURE_ID ARCHITECTURE_ID441,14673
#   define ARCHITECTURE_ID ARCHITECTURE_ID445,14749
#   define ARCHITECTURE_ID ARCHITECTURE_ID447,14805
#   define ARCHITECTURE_ID ARCHITECTURE_ID449,14849
#  define ARCHITECTURE_ID ARCHITECTURE_ID453,14935
#  define ARCHITECTURE_ID ARCHITECTURE_ID456,14991
#  define ARCHITECTURE_ID ARCHITECTURE_ID459,15058
#  define ARCHITECTURE_ID ARCHITECTURE_ID464,15144
#  define ARCHITECTURE_ID ARCHITECTURE_ID467,15201
#  define ARCHITECTURE_ID ARCHITECTURE_ID470,15268
#  define ARCHITECTURE_ID ARCHITECTURE_ID475,15396
#  define ARCHITECTURE_ID ARCHITECTURE_ID478,15455
#  define ARCHITECTURE_ID ARCHITECTURE_ID481,15516
#  define ARCHITECTURE_ID ARCHITECTURE_ID484,15579
#  define ARCHITECTURE_ID ARCHITECTURE_ID487,15642
#  define ARCHITECTURE_ID ARCHITECTURE_ID490,15704
#  define ARCHITECTURE_ID ARCHITECTURE_ID493,15764
#  define ARCHITECTURE_ID ARCHITECTURE_ID496,15828
#  define ARCHITECTURE_ID ARCHITECTURE_ID499,15890
#  define ARCHITECTURE_ID ARCHITECTURE_ID502,15958
#  define ARCHITECTURE_ID ARCHITECTURE_ID507,16043
#  define ARCHITECTURE_ID ARCHITECTURE_ID510,16102
#  define ARCHITECTURE_ID ARCHITECTURE_ID513,16159
#  define ARCHITECTURE_ID ARCHITECTURE_ID516,16219
#  define ARCHITECTURE_ID ARCHITECTURE_ID519,16277
#  define ARCHITECTURE_ID ARCHITECTURE_ID522,16344
#  define ARCHITECTURE_IDARCHITECTURE_ID525,16387
#define DEC(DEC529,16471
#define HEX(HEX540,16820
char const info_version[] = {info_version552,17182
char const info_version_internal[] = {info_version_internal570,17680
char const info_simulate_version[] = {info_simulate_version579,18006
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform599,18675
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch600,18743
#      define CXX_STD CXX_STD608,18963
#      define CXX_STD CXX_STD610,19003
#    define CXX_STD CXX_STD613,19052
#  define CXX_STD CXX_STD616,19136
#  define CXX_STD CXX_STD618,19171
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default621,19209
int main(int argc, char* argv[])main637,19514

.dir-locals.el,0
